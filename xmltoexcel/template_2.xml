<?xml version="1.0" encoding="UTF-8"?>
<testsuite id="" name="" >
<node_order><![CDATA[]]></node_order>
<details><![CDATA[]]></details> 
<testsuite id="4559" name="Boot" >
<node_order><![CDATA[0]]></node_order>
<details><![CDATA[<p>
	create test suite for Boot module</p>
]]></details> 

<testcase internalid="4560" name="Boot:Check binaries flashing on device">
	<node_order><![CDATA[0]]></node_order>
	<externalid><![CDATA[1]]></externalid>
	<fullexternalid><![CDATA[test-1]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check flashing of binaries into DUT functionality.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. ISO image should be available in pc for flashing.</div>
<div>
	2. Raven board with hard disk should be available.</div>
<div>
	3. &ldquo;Unetbootin&rdquo; tool should be available in PC.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Connect the USB storage drive in PC.</div>
<div>
	2. Open &ldquo;Unetbootin &ldquo; tool.</div>
<div>
	3. Select &ldquo;ISO&rdquo; option under &ldquo;Diskimage&rdquo;&nbsp; drop down box and select the &ldquo;Diskimage&rdquo; radio button.</div>
<div>
	4. Choose the ISO image from pc by browse and click on &ldquo;OK&rdquo; button. Once flashing done press on exit button.</div>
<div>
	5. Connect the USB flash drive to DUT USB port which is having the ISO image.</div>
<div>
	6. Power on the device, press on F12 button after power on the device.</div>
<div>
	7. Select the&rdquo;Auto_Installation &ndash; Auto Install to specified harddisk&rdquo; option.</div>
<div>
	8. Select the Installer source option which you want to install.</div>
<div>
	9. Select&nbsp; the &ldquo;Yes&rdquo; button on &ldquo;Auto Installer&rdquo; dialog.</div>
<div>
	10. check whether installation is success or not.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. The &ldquo;ISO&rdquo; image should be flashed into expected USB storage.</div>
<div>
	2. Should be able to select the &ldquo;Auto_Installation &ndash; Auto Install to specified harddisk&rdquo; option.</div>
<div>
	3. Image should be flashed into DUT using Auto installer option on specified source.</div>
<div>
	&nbsp;</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4563" name="Boot:Check device is booting to android screen">
	<node_order><![CDATA[1]]></node_order>
	<externalid><![CDATA[2]]></externalid>
	<fullexternalid><![CDATA[test-2]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether AMD Tambourine Platform is booting to its unlock screen or not..</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Switch on the device by using power button.</div>
<div>
	2. Verify whether AMD Tambourine platform is able to boot completely to device unlock screen or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	After switch on the Power button, the AMD Tambourine platform should be booting to its unlock screen without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4566" name="Boot-Str:Check device is booting to android screen 25 times">
	<node_order><![CDATA[2]]></node_order>
	<externalid><![CDATA[3]]></externalid>
	<fullexternalid><![CDATA[test-3]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether AMD Tambourine Platform is booting to its unlock screen or not for 25 times.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Switch on the device by using power button.</div>
<div>
	2. Verify whether AMD Tambourine platform is able to boot completely to device unlock screen or not.</div>
<div>
	3. Repeat the above steps from 1 to 2 for 25 times.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	For each iteration,After switch on the Power button, the AMD Tambourine platform should be booting to its unlock screen without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Stress]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4569" name="Boot:Check android animation logo">
	<node_order><![CDATA[3]]></node_order>
	<externalid><![CDATA[4]]></externalid>
	<fullexternalid><![CDATA[test-4]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether android animation logo is displaying or not&nbsp;</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Switch on the device by using power button.</div>
<div>
	2. Wait for the device to boot up</div>
<div>
	3. While booting, check the display console for the boot Android animation logo whether it is clearly visible or not&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	While booting the device, the Boot Android animation logo should be shown on the display panel without any issues and also no artifacts should be observed.&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4572" name="Boot:Check device  reboot with adb reboot command">
	<node_order><![CDATA[5]]></node_order>
	<externalid><![CDATA[6]]></externalid>
	<fullexternalid><![CDATA[test-6]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether Raven board is rebooting to android screen or not with &ldquo;adb reboot&rdquo; command</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.&nbsp;</div>
<div>
	2. Raven board should boot upto android.</div>
<div>
	3. Ethernet cable should be connected to device Ethernet port from PC&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Connect the device to Ethernet IP address using the command &ldquo;adb connect &lt;IP address of the Ethernet cable&gt;.</div>
<div>
	2. Enter the &ldquo;adb reboot&rdquo; command in PC terminal.</div>
<div>
	3.Check whether device is rebooting to android or not.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. After entering the &ldquo;adb connect &lt; ip address of the Ethernet&gt;&rdquo; then device should connected to that Ethernet IP address.</div>
<div>
	2. After entering the &ldquo;adb reboot&rdquo; command in pc terminal then device should restart and boot to android screen.</div>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_adb_reboot.TestAdbreboot]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4575" name="Boot:Check device keyboard and mouse functionality immediately after booting">
	<node_order><![CDATA[8]]></node_order>
	<externalid><![CDATA[215]]></externalid>
	<fullexternalid><![CDATA[test-215]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting keyboard and mouse&nbsp; interruptions or not</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Switch on the device using power button.<br />
	2. Wait for the device to start bootup.<br />
	3. While booting try to select options using a keyboard.<br />
	4. Also try to select options using mouse while booting only.<br />
	5. After DUT gets booted try to operate keyboard.<br />
	6. Also try to operate DUT with mouse.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The keyboard should work even during booting also.<br />
	2. The mouse should not work while booting.<br />
	3. The DUT should boot upto android screen without any issues.<br />
	4. After DUT gets booted the keyboard and mouse should work.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4578" name="Boot:Check device browsing functionality immediately after booting">
	<node_order><![CDATA[9]]></node_order>
	<externalid><![CDATA[216]]></externalid>
	<fullexternalid><![CDATA[test-216]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; browsing after immediate boot or not</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android unlock screen.<br />
	3. The DUT should be connected to WiFi or ethernet.<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Immediately after the DUT showing android unlock screen , go to Browser-&gt;search and enter any URL like www.google.com.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The google window should be displayed in the browser without any issues after immediate boot of the device.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4581" name="Boot:Check device Airplane mode functionality immediately after booting">
	<node_order><![CDATA[10]]></node_order>
	<externalid><![CDATA[217]]></externalid>
	<fullexternalid><![CDATA[test-217]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; Airplane mode(ON/OFF) after immediate boot or not</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android unlock screen.<br />
	3. The DUT should be connected to WiFi or ethernet.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Immediately after the DUT showing android unlock screen , go to Settings-&gt;More-&gt;Airplane mode and try to enable and disable it.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. After immediate boot of the device, the airplane mode should be enabled and disabled successfully.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4584" name="Boot:Check device bluetooth functionality immediately after booting">
	<node_order><![CDATA[11]]></node_order>
	<externalid><![CDATA[218]]></externalid>
	<fullexternalid><![CDATA[test-218]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting BT (ON/OFF) after immediate boot or not</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android unlock screen.<br />
	3. The DUT should be connected to WiFi or ethernet.<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Immediately after the DUT showing android unlock screen , go to Settings-&gt;Bluetooth and try to on and off the bluetooth.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. After immediate boot of the device, the bluetooth should be on and off successfully without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4587" name="Boot:Check device camera functionality immediately after booting">
	<node_order><![CDATA[12]]></node_order>
	<externalid><![CDATA[219]]></externalid>
	<fullexternalid><![CDATA[test-219]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting camera capture after immediate boot or not</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android unlock screen.<br />
	3. The DUT should be connected to WiFi or ethernet.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Immediately after the DUT showing android unlock screen ,launch the camera app.<br />
	2. Capture an image.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. After immediate boot of the device, the Camera should be opened and images should be captured successfully without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4590" name="Boot:Check device camcorder functionality immediately after booting">
	<node_order><![CDATA[13]]></node_order>
	<externalid><![CDATA[220]]></externalid>
	<fullexternalid><![CDATA[test-220]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; camcorder after immediate boot or not</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android unlock screen.<br />
	3. The DUT should be connected to WiFi or ethernet.<br />
	4. The DUT should support camera.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Immediately after the DUT showing android unlock screen ,select camera.<br />
	2. Select Video option and try to record something.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. After immediate boot of the device.the video should be recorded successfully without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4593" name="Boot:Check device graphics functionality immediately after booting">
	<node_order><![CDATA[14]]></node_order>
	<externalid><![CDATA[221]]></externalid>
	<fullexternalid><![CDATA[test-221]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; graphics functionality after immediate boot or not</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android unlock screen.<br />
	3. The DUT should be connected to WiFi or ethernet.<br />
	4. GL GFX benchmark should be available in the DUT.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Immediately after the DUT showing android unlock screen, open GL GFX benchmark Apk and run it.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.After immediate boot of the device, the GFX GL Benchmark should open and run successfully without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4596" name="Boot:Check device ability to run Antutu immediately after booting">
	<node_order><![CDATA[15]]></node_order>
	<externalid><![CDATA[222]]></externalid>
	<fullexternalid><![CDATA[test-222]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is able to run&nbsp; Antutu after immediate boot or not</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android unlock screen.<br />
	3. The DUT should be connected to WiFi or ethernet.<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Immediately after the DUT showing android unlock screen, open Antutu bench mark.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.After immediate boot of the device, the Antutu benchmark should open and run successfully.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4599" name="Boot:Check device keyboard functionality after reboot">
	<node_order><![CDATA[16]]></node_order>
	<externalid><![CDATA[223]]></externalid>
	<fullexternalid><![CDATA[test-223]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting keyboard functionality after immediate reboot or not</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android unlock screen.<br />
	3. The DUT should be connected to WiFi or ethernet.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Immediately after the DUT showing android unlock screen, open notepad.<br />
	2. Press all the keys&nbsp; in the keyboard.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. After immediate boot of the device, All the keys in the keyboard should work properly without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4602" name="Boot:Check device video streaming functionality immediately after booting">
	<node_order><![CDATA[17]]></node_order>
	<externalid><![CDATA[224]]></externalid>
	<fullexternalid><![CDATA[test-224]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting video streaming in youtube&nbsp; after immediate boot or not</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android unlock screen.<br />
	3. The DUT should be connected to WiFi or ethernet.<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Immediately after the DUT showing android unlock screen, open www.youtube.com in browser.<br />
	2. Try to play any video</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. After immediate boot of the device, the video streaming in youtube should be played properly with audio and video synchronization.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4605" name="Boot:Check device gaming functionality immediately after booting">
	<node_order><![CDATA[18]]></node_order>
	<externalid><![CDATA[225]]></externalid>
	<fullexternalid><![CDATA[test-225]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is able to run Gaming after immediate boot or not</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android unlock screen.<br />
	3. The DUT should be connected to WiFi or ethernet.<br />
	4. Temple run game should be installed in the DUT.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Immediately after the DUT showing android unlock screen, open Temple Run Apk&nbsp; in the DUT.<br />
	2. Start playing the game.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. After immediate boot of the device, the Temple run game should be opened successfully without any issues and also it should run without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4608" name="Boot-Str:Check device reboot with adb reboot command for 25 times">
	<node_order><![CDATA[19]]></node_order>
	<externalid><![CDATA[226]]></externalid>
	<fullexternalid><![CDATA[test-226]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is rebooting to android scrren or not using &ldquo;adb reboot&rdquo; command for 25 times or not</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android screen.<br />
	3. Ethernet cable should be connected to device Ethernet port from PC .</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the device to Ethernet IP address using the command &ldquo;adb connect &lt;IP address of the Ethernet cable&gt;.<br />
	2. Enter the &ldquo;adb reboot&rdquo; command in PC terminal.<br />
	3. Check whether device is rebooting to android or not.<br />
	4. Repeat the steps fron 2 to 3 for 25 times.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. After entering the &ldquo;adb connect &lt; IP address of the Ethernet&gt;&rdquo; then device should connected to that Ethernet IP address.<br />
	2. After entering the &ldquo;adb reboot&rdquo; command in pc terminal then device should restart and boot to android screen for 25 times without any clashes.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_adb_reboot_25_times.TestAdbreboot]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4611" name="Boot-Str:Check all apps are opening after boot the device 25 times">
	<node_order><![CDATA[20]]></node_order>
	<externalid><![CDATA[227]]></externalid>
	<fullexternalid><![CDATA[test-227]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting all apps functioning after 25 times boot or not</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Switch on the device by using power button.<br />
	2. Verify whether AMD Tambourine platform is able to boot completely to device unlock screen or not.<br />
	3. Repeat the above steps from 1 to 2 for 25 times.<br />
	4. Now,open camera.<br />
	5. Try to capture the image and then close the camera.<br />
	6. Now, open the notepad and write something.<br />
	7. Then close the notepad.<br />
	8. Now, open the browser and search for any URL.<br />
	9. After displaying the search result, close the browser.<br />
	10. Like this, open all the APK&#39;s supported by the DUT and check their functionality.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. For each iteration,After switch on the Power button, the AMD Tambourine platform should be booting to its unlock screen without any issues.<br />
	2. Image should be captured without any issues using camera.<br />
	3. While writing something into notepad all the keys in the keyboard should work properly without failing.<br />
	4. Similarly all the availble APK&#39;s in the device should work properly without any issues..</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4614" name="Boot-Conc:Check device is rebooting after poweroff">
	<node_order><![CDATA[21]]></node_order>
	<externalid><![CDATA[228]]></externalid>
	<fullexternalid><![CDATA[test-228]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether device is re-booting properly or not after abruptly power off it.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android screen.<br />
	3. Ethernet cable should be connected to device Ethernet port from PC .</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Switch on the device by using power button.<br />
	2. While booting, turn off the power button.<br />
	3. Immediately switch on the DUT and check whether device is booting or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The DUT should boot upto android unlock screen without any issues even though is power off suddently while booting.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4617" name="Boot-Conc:Check device is playing video while pushing files immediately after booting">
	<node_order><![CDATA[22]]></node_order>
	<externalid><![CDATA[229]]></externalid>
	<fullexternalid><![CDATA[test-229]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting to play video streams after reboot the device (adb reboot) for 25 times while pushing files into DUT</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android screen.<br />
	3. Ethernet cable should be connected to device Ethernet port from PC .</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the device to Ethernet IP address using the command &ldquo;adb connect &lt;IP address of the Ethernet cable&gt;.<br />
	2. Enter the &ldquo;adb reboot&rdquo; command in PC terminal.<br />
	3. Check whether device is rebooting to android or not.<br />
	4. Repeat the steps 2 to 3 for 25 times.<br />
	5. Immediately, Go to browser and type Mp4 video download in search menu.<br />
	6. Click on any one of available links.<br />
	7. Click on any one of MP4 file you want to download.<br />
	8. Then click on download option showing there.<br />
	9. Connect the device to Ethernet IP address using the command &ldquo;adb connect &lt;IP address of the Ethernet cable&gt;.<br />
	10. Enter the &ldquo;adb push source path Destination path&rdquo;.<br />
	11. Open Mxplayer.<br />
	12. Play any video file.<br />
	<br />
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The video should be played without any stability issues.<br />
	2. Search results should be displayed without buffering.<br />
	3. Download of file should be continued in the background.<br />
	4. The file which we are pushing should be available in the destination folder without any loss of data.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="4620" name="Display" >
<node_order><![CDATA[1]]></node_order>
<details><![CDATA[<p>
	Create test suite for display module</p>
]]></details> 

<testcase internalid="4621" name="Display:Check DP detection">
	<node_order><![CDATA[1005]]></node_order>
	<externalid><![CDATA[209]]></externalid>
	<fullexternalid><![CDATA[test-209]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check DP is detected or not</p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">
	1. OS should installed properly on the device with out any issues.&nbsp;</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">
	2. Raven board should boot upto android&nbsp;</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">
	3. DP connection port should existed in the board.</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">
	4. DP display should connected to device DP port</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Enter the command &ldquo; adb shell cat /sys/class/drm/card0-DP-1/status&ldquo; in pc terminal and check whether &ldquo;connected&rdquo; message is displaying or not. If&nbsp; &ldquo;connected&rdquo; message is displayed then DP detected otherwise it is not detected.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. When the DP cable is connected the device and after entering the &ldquo; adb shell cat /sys/class/drm/card0-DP-1/status&rdquo; command in PC terminal then &ldquo;connected&rdquo; message should be displayed.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_dp_detection.TestDpDetection]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4624" name="Display:Check DP display">
	<node_order><![CDATA[1006]]></node_order>
	<externalid><![CDATA[210]]></externalid>
	<fullexternalid><![CDATA[test-210]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check DP display is coming or not after power on the device</p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">
	1. OS should installed properly on the device with out any issues.</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">
	2. DP connection port should be there on the board.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.Connect the DP display to the device DP port.</p>
<p>
	2. Power on the device and check the display screen.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.Board should bootup properly with out any issues and there should not be screen corruptions or hangs. DP display screen should be shown properly without any issues.&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4627" name="Display:Check DP display after suspend/resume">
	<node_order><![CDATA[1007]]></node_order>
	<externalid><![CDATA[309]]></externalid>
	<fullexternalid><![CDATA[test-309]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DP Display after Suspend and Resume</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.Connect the DP display to the board and then power on the board.<br />
	2. Check the display screen.<br />
	3. Disable the stay awake option in developer options.<br />
	4. Set the wake time in display to 15 seconds.<br />
	5.Suspend and resume the DUT then check the Display.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Display screen should be shown properly without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4630" name="Display:Check DP display hot-plug and hot-unplug">
	<node_order><![CDATA[1008]]></node_order>
	<externalid><![CDATA[310]]></externalid>
	<fullexternalid><![CDATA[test-310]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the Hot-plug and Hot-unplug of the DP Display</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.Connect the DP display to the board and then power on the board. Check the display screen.<br />
	2.Remove the DP cable on the board.<br />
	3.Connect the DP cable again to the board.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.Board should bootup properly with out any issues and there should not be screen corruptions or hangs.<br />
	2&amp;3.Display should off after disconnecting the cable without any corruptions and display should shown properly after connecting the device again.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4633" name="Display:Check display brightness">
	<node_order><![CDATA[1009]]></node_order>
	<externalid><![CDATA[311]]></externalid>
	<fullexternalid><![CDATA[test-311]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify adjustment of display Brightness</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Display settings -&gt; Brightness.<br />
	2. Adjust the brightness to change the back-light.<br />
	3. Move the scroll bar to its completely minimum and maximum levels and observe the change in brightness.<br />
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4636" name="Display:Check device detection of different resolutions">
	<node_order><![CDATA[1010]]></node_order>
	<externalid><![CDATA[312]]></externalid>
	<fullexternalid><![CDATA[test-312]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether DUT is detecting 1920x1080 and 1280x1080 resolution displays&nbsp; or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the DP display of resolution 1920x1080&nbsp; to the board and then power on the board.<br />
	2. Check whether DUT&nbsp; is detecting display resolution of 1920x1080.<br />
	3. Now connect DP display of resolution 1280x1080&nbsp; to the board and then power on the board.<br />
	4. Check whether DUT&nbsp; is detecting display resolution of 1280x1080.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. DUT&nbsp; should detect display resolution of 1920x1080 and 1280x1080 connected to it and it should show properly without any issues i.e. corruptions.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4639" name="Display:Check display size">
	<node_order><![CDATA[1011]]></node_order>
	<externalid><![CDATA[313]]></externalid>
	<fullexternalid><![CDATA[test-313]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the display size using adb commands</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.Connect the DP display to the board and then power on the board.<br />
	2. Check the display screen.<br />
	3. Check the display size using adb command &#39;adb shell wm size&#39;.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.Display size should appear in command line.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4642" name="Display:Check display density">
	<node_order><![CDATA[1012]]></node_order>
	<externalid><![CDATA[314]]></externalid>
	<fullexternalid><![CDATA[test-314]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the display density using adb commands</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the DP display to the board and then power on the board.<br />
	2. Check the display screen.<br />
	3. Check the display size using adb command &#39;adb shell wm density&#39;.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.Display density should appear in command line.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4645" name="Display:Check display size changing with adb commands">
	<node_order><![CDATA[1013]]></node_order>
	<externalid><![CDATA[315]]></externalid>
	<fullexternalid><![CDATA[test-315]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check if display size is changed with adb commands</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the DP display to the board and then power on the board.<br />
	2. Check the display screen.<br />
	3. Check the display size using adb command &#39;adb shell wm size&#39;.<br />
	4. Change the display size using adb command &#39;adb shell wm size 1280&times;800&#39;.<br />
	5. Check whether the DUT display size is changed or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.Display size should change with the change display size command.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4648" name="Display:Check display density changing with adb commands">
	<node_order><![CDATA[1014]]></node_order>
	<externalid><![CDATA[316]]></externalid>
	<fullexternalid><![CDATA[test-316]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check if display density is changed with adb commands</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the DP display to the board and then power on the board.<br />
	2. Check the display screen.<br />
	3. Check the display density using adb command &#39;adb shell wm density&#39;.<br />
	4. Change the display density using adb command &#39;adb shell wm density 390&#39;.<br />
	5. Check whether the DUT display density is changed or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.Display density should change with the change display size command.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4651" name="Display:Check display font changing to small">
	<node_order><![CDATA[1015]]></node_order>
	<externalid><![CDATA[317]]></externalid>
	<fullexternalid><![CDATA[test-317]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether Display Font size is changed to small</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Display settings -&gt; Font size.<br />
	2.Change the Font size to small.<br />
	3. Check whether Font size of all the displayed text is reduced to small size or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Font size of all the displayed text should be reduced to small size.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4654" name="Display:Check display font changing to large">
	<node_order><![CDATA[1016]]></node_order>
	<externalid><![CDATA[318]]></externalid>
	<fullexternalid><![CDATA[test-318]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether Display Font size is changed to large</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Display settings -&gt; Font size.<br />
	2.Change the Font size to large.<br />
	3. Check whether Font size of all the displayed text is reduced to large size or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Font size of all the displayed text should be reduced to large size.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4657" name="Display:Check display auto rotation">
	<node_order><![CDATA[1017]]></node_order>
	<externalid><![CDATA[319]]></externalid>
	<fullexternalid><![CDATA[test-319]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check if auto rotation is working or not</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Display settings.<br />
	2. Select auto rotation option.<br />
	3. Check screen is automatically rotated when the device is rotated or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Screen should automatically rotate when the device is rotated.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4660" name="Display-Str:Check DP display Hot-plug and Hot-unplug for 25 times">
	<node_order><![CDATA[1018]]></node_order>
	<externalid><![CDATA[320]]></externalid>
	<fullexternalid><![CDATA[test-320]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the Hot-plug and Hot-unplug of the DP Display 25 times</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.Connect the DP display to the board and then power on the board. Check the display screen.<br />
	2.Remove the DP cable on the board.<br />
	3.Connect the DP cable again to the board.<br />
	4. Repeat 2 &amp; 3 steps continously for 25 times and check the display.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Display should off after disconnecting the cable without any corruptions and display should shown properly after connecting the device again for every iteration.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4663" name="Display-Str:Check DP display after suspend/resume for 25 times">
	<node_order><![CDATA[1019]]></node_order>
	<externalid><![CDATA[321]]></externalid>
	<fullexternalid><![CDATA[test-321]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DP Display after Suspend and Resume for 25 times</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the DP display to the board and then power on the board.<br />
	2. Check the display screen.<br />
	3. Disable the stay awake option in developer options.<br />
	4. Set the wake time in display to 15 seconds.<br />
	5. Suspend and resume the DUT then check the Display.<br />
	6. Repeat 5th steps for 25 times and check the display.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Display screen should be shown properly without any issues for each iteration.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4666" name="Display-Str:Check is device detecting different resolutuons for 25 times">
	<node_order><![CDATA[1020]]></node_order>
	<externalid><![CDATA[322]]></externalid>
	<fullexternalid><![CDATA[test-322]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether DUT is detecting 1920x1080 and 1280x1080 resolution displays&nbsp; or not&nbsp; with changing the resolution 25 times</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	&nbsp;1.Connect the DP display of resolution 1920x1080&nbsp; to the board and then power on the board.<br />
	2. Check whether DUT&nbsp; is detecting display resolution of 1920x1080.<br />
	3.Now connect DP display of resolution 1280x1080&nbsp; to the board and then power on the board.<br />
	4. Check whether DUT&nbsp; is detecting display resolution of 1280x1080.<br />
	5. Repeat the above steps for 25 times.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. DUT&nbsp; should detect display resolution of 1920x1080 and 1280x1080 connected to it and it should show properly without any issues i.e. corruptions for every iterations.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4669" name="Display-Str:Check DP display after reboot for 25 times">
	<node_order><![CDATA[1021]]></node_order>
	<externalid><![CDATA[323]]></externalid>
	<fullexternalid><![CDATA[test-323]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DP Display after reboot for 25 times</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the DP display to the board and then power on the board. Check the display screen.<br />
	2. Reboot the device and check if the display is proper atfer rebooting the device.<br />
	3. Repeat 2nd step for 25 times and check if the display is proper atfer rebooting the device.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The display should be proper without any issues and corruption, after rebooting the device for every iteration.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4672" name="Display-Str:Check DP display size changing for 20 times">
	<node_order><![CDATA[1022]]></node_order>
	<externalid><![CDATA[324]]></externalid>
	<fullexternalid><![CDATA[test-324]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check changing resolution (display size) continously for 20 times</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.Connect the DP display to the board and then power on the board.<br />
	2. Check the display screen.<br />
	3. Check the display size using adb command &#39;adb shell wm size&#39;.<br />
	4. Change the display size using adb command &#39;adb shell wm size 1280&times;800&#39;.<br />
	5. Check whether the DUT display size is changed or not.<br />
	6. Repeat the 4th step 20 times with different other resolutions and check whether the DUT display size is changed or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Display size should change with the change display size command for differnet resolutions for every iteration.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4675" name="Display-Str:Check DP display density changing for 20 times">
	<node_order><![CDATA[1023]]></node_order>
	<externalid><![CDATA[325]]></externalid>
	<fullexternalid><![CDATA[test-325]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check changing display density continously for 20 times</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.Connect the DP display to the board and then power on the board.<br />
	2. Check the display screen.<br />
	3. Check the display density using adb command &#39;adb shell wm density&#39;.<br />
	4. Change the display density using adb command &#39;adb shell wm density 390&#39;.<br />
	5. Check whether the DUT display density is changed or not .<br />
	6. Repeat the 4th step 20 times with different other densities and check whether the DUT display size is changed or not .</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Display screen should be shown properly without any issues for each iteration.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4678" name="Display-Conc:Check image opening in different display sizes or resolutions">
	<node_order><![CDATA[1024]]></node_order>
	<externalid><![CDATA[326]]></externalid>
	<fullexternalid><![CDATA[test-326]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check image opening in different display size or resolutions</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the DP display to the board and then power on the board.<br />
	2. Check the display screen.<br />
	3. Check the display size using adb command &#39;adb shell wm size&#39;.<br />
	4. Change the display size using adb command &#39;adb shell wm size 1280&times;800&#39;.<br />
	5. Check whether the DUT display size is changed or not.<br />
	6. Open images in the gallery and check if images are displayed with the existing display size.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Images should open with the existing display size.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4681" name="Display-Conc:Check video playing in different display sizes or resolutions">
	<node_order><![CDATA[1025]]></node_order>
	<externalid><![CDATA[327]]></externalid>
	<fullexternalid><![CDATA[test-327]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check video playing with different display size or resolutions</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the DP display to the board and then power on the board.<br />
	2. Check the display screen.<br />
	3. Check the display size using adb command &#39;adb shell wm size&#39;.<br />
	4. Change the display size using adb command &#39;adb shell wm size 1280&times;800&#39;.<br />
	5. Check whether the DUT display size is changed or not.<br />
	6. Open videos in the gallery and check if videos are displayed with the existing display size.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Videos should open with the existing display size.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4684" name="Display-Conc:Check image opening in different densities">
	<node_order><![CDATA[1026]]></node_order>
	<externalid><![CDATA[328]]></externalid>
	<fullexternalid><![CDATA[test-328]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check image opening in different display densities</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the DP display to the board and then power on the board.<br />
	2. Check the display screen.<br />
	3. Check the display density using adb command &#39;adb shell wm density&#39;.<br />
	4. Change the display density using adb command &#39;adb shell wm density 390&#39;.<br />
	5. Check whether the DUT display density is changed or not .<br />
	6. Open images in the gallery and check if images are displayed with the existing display density.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Images should open with the existing display density.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4687" name="Display-Conc:Check video playing in different display densities">
	<node_order><![CDATA[1027]]></node_order>
	<externalid><![CDATA[329]]></externalid>
	<fullexternalid><![CDATA[test-329]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check video playing with different display densities</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the DP display to the board and then power on the board.<br />
	2. Check the display screen.<br />
	3. Check the display density using adb command &#39;adb shell wm density&#39;.<br />
	4. Change the display density using adb command &#39;adb shell wm density 390&#39;.<br />
	5. Check whether the DUT display density is changed or not.<br />
	6. Open videos in the gallery and check if videos are displayed with the existing display density.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Videos should open with the existing display density.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4690" name="Display-Conc:Check image opening with change in display brightness">
	<node_order><![CDATA[1028]]></node_order>
	<externalid><![CDATA[330]]></externalid>
	<fullexternalid><![CDATA[test-330]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check image opening with change in display brightness</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Display settings -&gt; Brightness.<br />
	2. Adjust the brightness to change the back-light.<br />
	3. Move the scroll bar to its completely minimum and maximum levels and observe the change in brightness.<br />
	4. Open images from the gallery and check if brightness of the image has changed or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Brightness of the image opened should change as per the changes in brightness settings.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4693" name="Display-Conc:Check video playing with change in display brightness">
	<node_order><![CDATA[1029]]></node_order>
	<externalid><![CDATA[331]]></externalid>
	<fullexternalid><![CDATA[test-331]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check video playing with change in display brightness</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Display settings -&gt; Brightness.<br />
	2. Adjust the brightness to change the back-light.<br />
	3. Move the scroll bar to its completely minimum and maximum levels and observe the change in brightness.<br />
	4. Open videos in gallery and check if brightness of the video has changed or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Brightness of the video playing should be change as per the changes in brightness settings.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="4696" name="Ethernet" >
<node_order><![CDATA[2]]></node_order>
<details><![CDATA[<p>
	Create test suite for Ethernet module</p>
]]></details> 

<testcase internalid="4697" name="Ethernet:Check Ethernet detection">
	<node_order><![CDATA[1]]></node_order>
	<externalid><![CDATA[13]]></externalid>
	<fullexternalid><![CDATA[test-13]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the Ethernet detection functionality.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Build should support Ethernet.</div>
<div>
	2. Ethernet cable should be available and it has Internet connection.</div>
<div>
	3. Boot the DUT completely to its unlock screen.</div>
<div>
	4. Connect Ethernet Cable to the Raven Board Ethernet port.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Check whether Ethernet cable is detected or not by looking at the Ethernet port. If the cable is detected&nbsp; then LED light will blink at the port.&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	The Ethernet cable should detect&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_ethernet_connection.TestEthernet]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4700" name="Ethernet:Check Ethernet connection and disconnection">
	<node_order><![CDATA[2]]></node_order>
	<externalid><![CDATA[14]]></externalid>
	<fullexternalid><![CDATA[test-14]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Ethernet Connect and Disconnect functionality</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Build should support Ethernet.</div>
<div>
	2. Ethernet cable should be available and it has Internet connection.</div>
<div>
	3. Boot the DUT completely to its unlock screen.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Connect Ethernet Cable to the Raven Board Ethernet port.</div>
<div>
	2. Check whether Ethernet cable is detected or not by looking at the Ethernet port. If the cable is detected&nbsp; then LED light will blink at the port.&nbsp;</div>
<div>
	3. Disconnect Ethernet Cable from the Raven Board Ethernet port.</div>
<div>
	4. Check again whether the LED at Ethernet port is OFF or not.</div>
<div>
	5.Enter ifconfig command on the DUT after disconnection.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1&amp;2. The Ethernet cable should detect and LED should Blink/ON&nbsp; when the Ethernet cable is connected to device Ethernet port and should able to ping &quot;google.co.in successfully.&quot;&nbsp;</div>
<div>
	&nbsp;</div>
<div>
	3&amp;4. The Ethernet LED should OFF when the Ethernet cable is disconnected from the Ethernet port.</div>
<div>
	5.IP address should not be configured to the DUT after disconnection of ethernet.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4703" name="Ethernet-Str:Check Ethernet connection and disconnection 25 times">
	<node_order><![CDATA[3]]></node_order>
	<externalid><![CDATA[15]]></externalid>
	<fullexternalid><![CDATA[test-15]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Ethernet Connect and Disconnect functionality 25 times</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Build should support Ethernet.</div>
<div>
	2. Ethernet cable should be available and it has Internet connection.</div>
<div>
	3. Boot the DUT completely to its unlock screen.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Connect Ethernet Cable to the Raven Board Ethernet port.</div>
<div>
	2. Check whether Ethernet cable is detected or not by looking at the Ethernet port. If the cable is detected&nbsp; then LED light will blink at the port.&nbsp;</div>
<div>
	3. Disconnect Ethernet Cable from the Raven Board Ethernet port.</div>
<div>
	4. Check again whether the LED at Ethernet port is OFF or not.</div>
<div>
	5. Repeat the steps from 1 to 4 for 25 times.&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1&amp;2. The Ethernet cable should detect and LED should Blink/ON&nbsp; when the Ethernet cable is connected to device Ethernet port and should able to ping &quot;google.co.in successfully.&quot;&nbsp;</div>
<div>
	&nbsp;</div>
<div>
	3&amp;4. The Ethernet LED should OFF when the Ethernet cable is disconnected from the Ethernet port.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Stress]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4706" name="Ethernet:Check Ethernet after suspend/resume">
	<node_order><![CDATA[4]]></node_order>
	<externalid><![CDATA[16]]></externalid>
	<fullexternalid><![CDATA[test-16]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Ethernet functionality after suspend/resume process is executed on the Device.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Build should support Ethernet.</div>
<div>
	2. Ethernet cable should be available and it has Internet connection.</div>
<div>
	3. Boot the DUT completely to its unlock screen.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Connect Ethernet Cable to the Raven Board Ethernet port.</div>
<div>
	2. Check whether Ethernet cable is detected or not by looking at the Ethernet port. If the cable is detected&nbsp; then LED light will blink at the port.&nbsp;</div>
<div>
	3. Now, Short press the power button to Suspend the DUT</div>
<div>
	4. Wait for some time and let the device goes into sleep mode.</div>
<div>
	5. Press the power button again to resume the device from sleep mode</div>
<div>
	6. After Resuming, verify whether Ethernet cable is detected or not by looking at the Ethernet port.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1&amp;2. The Ethernet cable should detect and LED should Blink/ON&nbsp; when the Ethernet cable is connected to device Ethernet port and should able to ping &quot;google.co.in successfully.&quot;&nbsp;</div>
<div>
	3&amp;4.DUT should enter into sleep successfully without any issues.</div>
<div>
	5. After Resuming the device from suspend state, Ethernet cable should get detected and also should be able to browse internet without any issues.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4709" name="Ethernet:Check Ethernet after power off/on">
	<node_order><![CDATA[5]]></node_order>
	<externalid><![CDATA[17]]></externalid>
	<fullexternalid><![CDATA[test-17]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Ethernet functionality after power OFF and power ON the Device.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Build should support Ethernet.</div>
<div>
	2. Ethernet cable should be available and it has Internet connection.</div>
<div>
	3. Boot the DUT completely to its unlock screen.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Connect Ethernet Cable to the Raven Board Ethernet port.</div>
<div>
	2. Check whether Ethernet cable is detected or not by looking at the Ethernet port. If the cable is detected&nbsp; then LED light will blink at the port.&nbsp;</div>
<div>
	3. Now, power OFF the DUT by using Raven Board power switch.</div>
<div>
	4. Power ON the DUT by using power switch.</div>
<div>
	5. Wait for some time for the device completely boots up to it&#39;s android screen.</div>
<div>
	6. After boots up, verify whether Ethernet cable is detected or not by looking at the Ethernet port.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1&amp;2. The Ethernet cable should detect and LED should Blink/ON&nbsp; when the Ethernet cable is connected to device Ethernet port and should able to ping &quot;google.co.in successfully.&quot;&nbsp;</div>
<div>
	3.DUT should switch off successfully without any issues.</div>
<div>
	4,5&amp;6. After Power on the device,Ethernet cable should get detected and also should be able to browse internet without any issues.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4712" name="Ethernet:Check browsing with Ethernet">
	<node_order><![CDATA[6]]></node_order>
	<externalid><![CDATA[18]]></externalid>
	<fullexternalid><![CDATA[test-18]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether the system is able to browse with Ethernet&nbsp;</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Build should support Ethernet.</div>
<div>
	2. Dynamic IP should configured to DUT.</div>
<div>
	3. Boot the DUT completely to its unlock screen.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Connect Ethernet Cable to the Raven Board Ethernet port.</div>
<div>
	2. Check whether Ethernet cable is detected or not by looking at the Ethernet port. If the cable is detected&nbsp; then LED light will blink at the port.&nbsp;</div>
<div>
	3. Open browser and try to access some web sites.&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. Ethernet cable should detect when it is connected to device Ethernet port.&nbsp;</div>
<div>
	2&amp;3.System should be able to browse the internet without any issues</div>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_browse_ethernet.TestBrowseEthernet]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4715" name="Ethernet:Check adb over Ethernet">
	<node_order><![CDATA[7]]></node_order>
	<externalid><![CDATA[19]]></externalid>
	<fullexternalid><![CDATA[test-19]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether the DUT support to adb over Ethernet functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Build should support Ethernet.</div>
<div>
	2. Ethernet cable should be available and it has Internet connection.</div>
<div>
	3. Boot the DUT completely to its unlock screen.</div>
<div>
	4. Should have Host PC.</div>
<div>
	5. should have the DUT IP Address</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Connect Ethernet Cable to the Raven Board Ethernet port.</div>
<div>
	2. Check whether Ethernet cable is detected or not by looking at the Ethernet port. If the cable is detected&nbsp; then LED light will blink at the port.&nbsp;</div>
<div>
	3. Open &ldquo;Terminal Emulator&rdquo; Apk on DUT.</div>
<div>
	4. Run &ldquo;su&rdquo; command on DUT terminal.</div>
<div>
	5. Run &ldquo;setprop service.adb.tcp.port 5555&rdquo; command on DUT terminal.</div>
<div>
	6. Run &ldquo;stop adbd&rdquo; command on DUT terminal.</div>
<div>
	7. Run &ldquo;start adbd&rdquo; command on DUT terminal.</div>
<div>
	8. Now open terminal in Host PC and Run &ldquo;adb connect &lt;DUT IP Address&gt; &rdquo;.</div>
<div>
	9. Check whether the DUT is enumerated in PC or not by entering the&nbsp; &quot;adb devices&quot; command in PC terminal.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. The Ethernet cable should detect and LED should Blink/ON&nbsp; when the Ethernet cable is connected to device Ethernet port .&nbsp;</div>
<div>
	2. The &ldquo;adb connect &lt;DUT IP Address&gt;&rdquo; command should show the &ldquo;Connected to &lt;DUT IP Address&gt;&rdquo;</div>
<div>
	3. The DUT should show under the &ldquo;adb devices&rdquo; list.</div>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_adb_detection.TestAdb]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4718" name="Ethernet:Check download a file with Ethernet">
	<node_order><![CDATA[8]]></node_order>
	<externalid><![CDATA[20]]></externalid>
	<fullexternalid><![CDATA[test-20]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether the DUT is able to download a file with Ethernet network.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Build should support Ethernet.</div>
<div>
	2. Ethernet cable should be available and it has Internet connection.</div>
<div>
	3. Boot the DUT completely to its unlock screen.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Connect Ethernet Cable to the Raven Board Ethernet port.</div>
<div>
	2. Check whether Ethernet cable is detected or not by looking at the Ethernet port. If the cable is detected&nbsp; then LED light will blink at the port.&nbsp;</div>
<div>
	3.. Open browser and try to download any file from internet.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. Ethernet cable should detect when it is connected to device Ethernet port.&nbsp;</div>
<div>
	2&amp;3.System should be able to download a file with Ethernet(some valid websites) without any issues.</div>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_downloading_files.TestEthernet]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4721" name="Ethernet:Check device re-enumeration after power off/on">
	<node_order><![CDATA[9]]></node_order>
	<externalid><![CDATA[21]]></externalid>
	<fullexternalid><![CDATA[test-21]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether the DUT able to re-enumerate after Power OFF and ON or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Build should support Ethernet.</div>
<div>
	2. Ethernet cable should be available and it has Internet connection.</div>
<div>
	3. Boot the DUT completely to its unlock screen.</div>
<div>
	4. Should have Host PC.</div>
<div>
	5. should have the DUT IP Address</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Connect Ethernet Cable to the Raven Board Ethernet port.</div>
<div>
	2. Check whether Ethernet cable is detected or not by looking at the Ethernet port. If the cable is detected&nbsp; then LED light will blink at the port.&nbsp;</div>
<div>
	3. Open &ldquo;Terminal Emulator&rdquo; Apk on DUT.</div>
<div>
	4. Run &ldquo;su&rdquo; command on DUT terminal.</div>
<div>
	5. Run &ldquo;setprop service.adb.tcp.port 5555&rdquo; command on DUT terminal.</div>
<div>
	6. Run &ldquo;stop adbd&rdquo; command on DUT terminal.</div>
<div>
	7. Run &ldquo;start adbd&rdquo; command on DUT terminal.</div>
<div>
	8. Now open terminal in Host PC and Run &ldquo;adb connect &lt;DUT IP Address&gt; &rdquo;.</div>
<div>
	9. Check whether the DUT is enumerated in PC or not by entering the&nbsp; &quot;adb devices&quot; command in PC terminal.</div>
<div>
	10. Power OFF the DUT by power switch.</div>
<div>
	11. Power ON the DUT by power switch.</div>
<div>
	12. Wait for some time for the device completely boots up to it&#39;s android screen.</div>
<div>
	13. After Boots up the DUT, repeat the above steps 8 and 9.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. The Ethernet cable should detect and LED should Blink/ON&nbsp; when the Ethernet cable is connected to device Ethernet port .&nbsp;</div>
<div>
	2. The &ldquo;adb connect &lt;DUT IP Address&gt;&rdquo; command should show the &ldquo;Connected to &lt;DUT IP Address&gt;&rdquo;</div>
<div>
	3. The DUT should show under the &ldquo;adb devices&rdquo; list.</div>
<div>
	4. After reboot also, the DUT should show under the &ldquo;adb devices&rdquo; list.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4724" name="Ethernet:Check adb commands over Ethernet">
	<node_order><![CDATA[10]]></node_order>
	<externalid><![CDATA[22]]></externalid>
	<fullexternalid><![CDATA[test-22]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify the adb commands(DUT connected over ethernet) functionality i.e. adb push, adb pull and adb install</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Build should support Ethernet.</div>
<div>
	2. Ethernet cable should be available and it has Internet connection.</div>
<div>
	3. Connect the Device to host over the Ethernet.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Run the ADB commands like adb pull and push,adb install, adb logcat etc., commands in the host.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.All the ADB commands should work properly without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_adb_commands.Testadbcommand]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4727" name="Ethernet:Check downloading of large file with Ethernet">
	<node_order><![CDATA[11]]></node_order>
	<externalid><![CDATA[23]]></externalid>
	<fullexternalid><![CDATA[test-23]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether the DUT is able to download large size&nbsp; files with Ethernet network or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Build should support Ethernet.</div>
<div>
	2. Ethernet cable should be available and it has Internet connection.</div>
<div>
	3. Boot the DUT completely to its unlock screen.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Connect Ethernet Cable to the Raven Board Ethernet port.</div>
<div>
	2. Check whether Ethernet cable is detected or not by looking at the Ethernet port. If the cable is detected&nbsp; then LED light will blink at the port.&nbsp;</div>
<div>
	3.. Open browser and try to download any large size file from internet.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. Ethernet cable should detect when it is connected to device Ethernet port.&nbsp;</div>
<div>
	2&amp;3.System should be able to download large size files file with Ethernet without any issues.</div>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_downloading_large_files.TestEthernet]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4730" name="Ethernet:Check Ethernet IPV4">
	<node_order><![CDATA[12]]></node_order>
	<externalid><![CDATA[24]]></externalid>
	<fullexternalid><![CDATA[test-24]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether Ethernet is supporting IPV4 or not</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Build should support Ethernet.</div>
<div>
	2. Ethernet cable should be there and it has Internet connection.</div>
<div>
	3. Boot the device completely to its unlock screen.</div>
<div>
	4. Install network info app in the device</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Connect the Ethernet cable which is having the static IP address to the device Ethernet port.</div>
<div>
	2. Open the network info app, click on Get IP</div>
<div>
	3. Observe the external IP address in the device</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Ethernet should be able to get detected and the IPV4 address will be same as original ethernet cable address</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_ethernet_ipv4_support.TestEthernetIpv4]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4733" name="Ethernet:Check Ethernet IPV6">
	<node_order><![CDATA[13]]></node_order>
	<externalid><![CDATA[25]]></externalid>
	<fullexternalid><![CDATA[test-25]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether Ethernet is supporting IPV6 or not</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Build should support Ethernet.</div>
<div>
	2. Ethernet cable should be there and it has Internet connection.</div>
<div>
	3. Boot the device completely to its unlock screen.</div>
<div>
	4. Install network info app in the device</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Connect the Ethernet cable which is having the static IP address to the device Ethernet port.</div>
<div>
	2. Open the network info app, click on Get IP</div>
<div>
	3. Observe the external IP address in the device</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Ethernet should be able to get detected and the IPV6 address will be same as original ethernet cable address</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Performance]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4736" name="Ethernet:Check Ethernet speed">
	<node_order><![CDATA[14]]></node_order>
	<externalid><![CDATA[26]]></externalid>
	<fullexternalid><![CDATA[test-26]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check Ethernet speed</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Build should support Ethernet.</div>
<div>
	2. Ethernet cable should be there and it has Internet connection.</div>
<div>
	3. Boot the device completely to its unlock screen.</div>
<div>
	4. WiFi&nbsp; router should be available and it has internet connection.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Set the WiFi router net-speed to 10Mbps and 100Mbps.</div>
<div>
	2. Connect the Ethernet cable from WiFi router to Device Ethernet Port.</div>
<div>
	3. Check whether Ethernet cable is detected or not by looking at the Ethernet port. If the cable is detected then LED light will blink at the port.&nbsp;</div>
<div>
	4. Open the browser.</div>
<div>
	5. Open the speed test and check the internet speed is same as set in wifi router.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. After connecting the Ethernet cable to device, the Ethernet cable should be detected&nbsp;</div>
<div>
	2. In the browser, speed test should show the same internet speed which is set in the wifi router.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4739" name="Ethernet:Check data loss using ping command">
	<node_order><![CDATA[15]]></node_order>
	<externalid><![CDATA[332]]></externalid>
	<fullexternalid><![CDATA[test-332]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify data loss using ping command on local networks(In progress)</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Connected router should have Internet.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect Ethernet Cable to the Raven Board Ethernet port.<br />
	2. Check whether Ethernet cable is detected or not by looking at the Ethernet port. If the cable is detected &nbsp;then LED light will blink at the port.<br />
	3. Ping ip address of local network ex- ping 10.50.75.177&nbsp; in command line and press ctrl+c after 10 seconds and check whether any data loss is there</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. No data loss should be there when ping command is used.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_data_loss_ping_ethernet.TestPing]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4742" name="Ethernet:Check data loss using ping flood command">
	<node_order><![CDATA[16]]></node_order>
	<externalid><![CDATA[333]]></externalid>
	<fullexternalid><![CDATA[test-333]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify data loss using ping flood command on local networks</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Connected router should have Internet.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect Ethernet Cable to the Raven Board Ethernet port.<br />
	2. Check whether Ethernet cable is detected or not by looking at the Ethernet port. If the cable is detected &nbsp;then LED light will blink at the port.<br />
	3. Ping flood ip address of local network ex- ping -f 10.50.75.177&nbsp; in command line and press ctrl+c after 10 seconds and check whether any data loss is there.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. No data loss should be there when ping flood command is used.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_data_loss_flood_ping_ethernet.TestPing]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4745" name="Ethernet:Check Ethernet priority when compared wifi">
	<node_order><![CDATA[17]]></node_order>
	<externalid><![CDATA[334]]></externalid>
	<fullexternalid><![CDATA[test-334]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Ethernet is given high priority than WiFi or not</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Build should support Ethernet.<br />
	2. Ethernet cable should be there and it has Internet connection.<br />
	3. Boot the device completely to its unlock screen.<br />
	4. Install network info app in the device.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to settings &rarr; Enable WiFi and connect to router.<br />
	2. Connect the Ethernet cable which is having internet.<br />
	3. Verify whether WiFi is got disconnected or not.<br />
	4. Now disconnect the Ethernet cable from device and check whether WiFi is automatically connected to previously connected APN.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. When Ethernet cable connected to device then WiFi should be disconnect because Ethernet is high priority than WiFi.<br />
	2. When Ethernet&nbsp; is disconnect from the device then WiFi should be automatically connected to previously connected APN.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_ethernet_wifi_priority.TestWiFiEthernetPriority]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4748" name="Ethernet-Neg:Check ethernet connection when fault in cable">
	<node_order><![CDATA[18]]></node_order>
	<externalid><![CDATA[335]]></externalid>
	<fullexternalid><![CDATA[test-335]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify ethernet connection when ethernet cable is not working</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Build should support Ethernet.<br />
	2. Ethernet cable shouldnot be working.<br />
	3. Boot the DUT completely to its unlock screen.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect Ethernet Cable to the Raven Board Ethernet port.<br />
	2. Check whether Ethernet cable is detected or not by looking at the Ethernet port. If the cable is detected &nbsp;then LED light will blink at the port.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Ethernet should not be detected as the cable is non functional.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4751" name="Ethernet-Str:Check Ethernet connection after 25 times reboot">
	<node_order><![CDATA[19]]></node_order>
	<externalid><![CDATA[336]]></externalid>
	<fullexternalid><![CDATA[test-336]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Ethernet Connection after reboot 25 times</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Build should support Ethernet.<br />
	2. Ethernet cable should be there and it has Internet connection.<br />
	3. Boot the device completely to its unlock screen.<br />
	4. Install network info app in the device.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect Ethernet Cable to the Raven Board Ethernet port.<br />
	2. Check whether Ethernet cable is detected or not by looking at the Ethernet port. If the cable is detected &nbsp;then LED light will blink at the port.<br />
	3. Reboot the device 25 times and check whether device is connected to ethernet.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1&amp;2. The Ethernet cable should detect and LED should Blink/ON&nbsp; when the Ethernet cable is connected to device Ethernet port after booting the device for each iteration.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_ethernet_reboot_25_times.TestAdbEthernetReboot25times]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4754" name="Ethernet-Str:Check Ethernet connection after 25 times suspend/resume">
	<node_order><![CDATA[20]]></node_order>
	<externalid><![CDATA[337]]></externalid>
	<fullexternalid><![CDATA[test-337]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Ethernet Connection after suspend resume 25 times</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Build should support Ethernet.<br />
	2. Ethernet cable should be there and it has Internet connection.<br />
	3. Boot the device completely to its unlock screen.<br />
	4. Install network info app in the device.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect Ethernet Cable to the Raven Board Ethernet port.<br />
	2. Check whether Ethernet cable is detected or not by looking at the Ethernet port. If the cable is detected &nbsp;then LED light will blink at the port.<br />
	3. Suspend and resume the device 25 times and check whether device is connected to ethernet.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	For each iteration:<br />
	1. Ethernet cable should be detected and LED should blink/on at ethernet port after suspend/ resume the device.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4757" name="Ethernet-Conc:Check file transfer while ethernet(Connect/Disconnect)">
	<node_order><![CDATA[21]]></node_order>
	<externalid><![CDATA[338]]></externalid>
	<fullexternalid><![CDATA[test-338]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify BT file transfer when ethernet connect and disconnect</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Build should support Ethernet.<br />
	2. Ethernet cable should be there and it has Internet connection.<br />
	3. Boot the device completely to its unlock screen.<br />
	4. Install network info app in the device.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect Ethernet Cable to the Raven Board Ethernet port.<br />
	2. Check whether Ethernet cable is detected or not by looking at the Ethernet port. If the cable is detected &nbsp;then LED light will blink at the port.<br />
	3. Connect to other android device with BT connection.<br />
	4. Transfer files using BT connection.<br />
	6. Disconnect and connect back ethernet connection and observe its behavior.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Files should be transferred and should not be effected by ethernet connection/disconnection.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4760" name="Ethernet-Conc:Check ethernet connection while browsing and airplane mode(On/Off)">
	<node_order><![CDATA[22]]></node_order>
	<externalid><![CDATA[339]]></externalid>
	<fullexternalid><![CDATA[test-339]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify ethernet connection web browsing and airplane mode on/off</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Build should support Ethernet.<br />
	2. Ethernet cable should be there and it has Internet connection.<br />
	3. Boot the device completely to its unlock screen.<br />
	4. Install network info app in the device.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect Ethernet Cable to the Raven Board Ethernet port.<br />
	2. Check whether Ethernet cable is detected or not by looking at the Ethernet port. If the cable is detected &nbsp;then LED light will blink at the port.<br />
	3. Browse any url (ex Wikipedia) in the web browser application.<br />
	4. Enable and disable airplane mode.<br />
	5. Observe its behaviour.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Web browsing using ethernet connection should not be effected by airplane mode on/off.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_ethernet_browsing_airplane_mode.TestethernetAirplaneBrowsing]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4763" name="Ethernet-Conc:Check audio/video streaming on USB/BT headset">
	<node_order><![CDATA[23]]></node_order>
	<externalid><![CDATA[340]]></externalid>
	<fullexternalid><![CDATA[test-340]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	&nbsp;Verify online audio/video streaming on usb headsets and Bt headsets</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Build should support Ethernet.<br />
	2. Ethernet cable should be there and it has Internet connection.<br />
	3. Boot the device completely to its unlock screen.<br />
	4. Install network info app in the device.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect Ethernet Cable to the Raven Board Ethernet port and connect BT and USB headset to the device<br />
	2. Check whether Ethernet cable is detected or not by looking at the Ethernet port. If the cable is detected &nbsp;then LED light will blink at the port.<br />
	3. Play some audio/video online through USB and BT headsets and check if audio is coming from BT headsets.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Audio should come on BT headsets when both USB and BT headsets are connected.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4766" name="Ethernet-Conc:Check adb push/pull with suspend and resume">
	<node_order><![CDATA[24]]></node_order>
	<externalid><![CDATA[341]]></externalid>
	<fullexternalid><![CDATA[test-341]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify adb push/pull with suspend and resume functionality</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Build should support Ethernet.<br />
	2. Ethernet cable should be there and it has Internet connection.<br />
	3. Boot the device completely to its unlock screen.<br />
	4. Install network info app in the device.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.Push some large files to the device.<br />
	2. Disable the stay awake option in developer options.<br />
	3. Set the wake time in display to 15 seconds.<br />
	4.Suspend and resume the DUT then check whether files are getting pushed or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Files should not be pushed when device goes to suspend state.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="4769" name="USB" >
<node_order><![CDATA[3]]></node_order>
<details><![CDATA[<p>
	Create test suite for USB host mode</p>
]]></details> 

<testcase internalid="4770" name="USB:Check USB Keyboard detection">
	<node_order><![CDATA[1000]]></node_order>
	<externalid><![CDATA[27]]></externalid>
	<fullexternalid><![CDATA[test-27]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the USB Keyboard Functionality</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.</div>
<div>
	2. USB should work as a host.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Connect the USB Keyboard to USB port on the device and then power on the System.</div>
<div>
	2.Press F12 or DEL to enter into BIOS settings/Boot Menu.</div>
<div>
	3.After bootup,Open any notepad kind of application and enter all the keys,check the functionality.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. USB should detect properly without any issues.</div>
<div>
	2.Keyboard should work properly without any issues and system should enter into BIOS/BootMenu.</div>
<div>
	3.All keys in the Keyboard should work properly without any issues.</div>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_usb_keyboard.TestUsbKeyboard]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4773" name="USB:Check USB Mouse detection">
	<node_order><![CDATA[1001]]></node_order>
	<externalid><![CDATA[28]]></externalid>
	<fullexternalid><![CDATA[test-28]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the USB Mouse Functionality</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.</div>
<div>
	2. USB should work as a host.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Connect the USB Keyboard to USB port on the device and then power on the System.</div>
<div>
	2.Press F12 or DEL to enter into BIOS settings/Boot Menu.</div>
<div>
	3.After bootup,Use mouse options(Leftclick and Right click ,etc.,) to open application and perform actions.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. USB should detect properly without any issues.</div>
<div>
	2.Keyboard And Mouse should work properly without any issues.</div>
<div>
	3.Mouse functionality should work properly without any issues.</div>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_usb_mouse.TestUsbMouse]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4776" name="USB:Check USB storage detection">
	<node_order><![CDATA[1002]]></node_order>
	<externalid><![CDATA[29]]></externalid>
	<fullexternalid><![CDATA[test-29]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the USB Storage device Functionality</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.</div>
<div>
	3. USB should work as a host.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	&nbsp;</div>
<div>
	1. Connect a USB storage device (e.g.: USB 2.0/3.0 Flash device/Pen drives) to USB host port.</div>
<div>
	2. Go to settings -&gt; Storage -&gt; USB disk.</div>
<div>
	3. Now check whether USB 2.0 flash device is detected or not with out any issues. .&nbsp;</div>
<div>
	&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. USB Storage should detect in USB host port and also device display screen should not rotate when the USB 2.0 devices connected to host port.USb storage device data should display properly without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_usb_storage.TestUsbStorage]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4779" name="USB:Check USB detection after suspend/resume">
	<node_order><![CDATA[1003]]></node_order>
	<externalid><![CDATA[30]]></externalid>
	<fullexternalid><![CDATA[test-30]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the USB Host functionality after suspend and resume</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.</div>
<div>
	4. USB should work as a host.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Connect the USB Keyboard,Mouse and storage device to the DUT.</div>
<div>
	2.Suspend and Resume the device.</div>
<div>
	3.Check the USB Keyboard,mouse and storage device functionality on the Platform.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1.USB Keyboard,Mouse and storage device should detect properly without any issues.</div>
<div>
	2.DUT should enter into the sleep mode and resume properly without any issues.</div>
<div>
	3.All USB devices should be functional with out any issues.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4782" name="USB-Str:Check USB Keyboard detection 25 times">
	<node_order><![CDATA[1004]]></node_order>
	<externalid><![CDATA[31]]></externalid>
	<fullexternalid><![CDATA[test-31]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the USB Keyboard functionality for 25 times</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.</div>
<div>
	2. USB should work as a host.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Connect the USB Keyboard to USB port on the device and then power on the System.</div>
<div>
	2. Press Esc continuously to enter into BIOS settings/Boot Menu.</div>
<div>
	3. After bootup,Open any notepad kind of application and enter all the keys,check the functionality.</div>
<div>
	4. Repeat the above steps 25 times.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	For each iteration:</div>
<div>
	1. USB should detect properly without any issues.</div>
<div>
	2. Keyboard should work properly without any issues and system should enter into BIOS/BootMenu.</div>
<div>
	3. All keys in the Keyboard should work properly without any issues.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Stress]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4785" name="USB-Str:Check USB Mouse detection 25 times">
	<node_order><![CDATA[1005]]></node_order>
	<externalid><![CDATA[32]]></externalid>
	<fullexternalid><![CDATA[test-32]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the USB Mouse Functionality for&nbsp; 25 times</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.</div>
<div>
	2. USB should work as a host.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Connect the USB Keyboard to USB port on the device and then power on the System.</div>
<div>
	2.Press Esc continuously to enter into BIOS settings/Boot Menu.</div>
<div>
	3.After bootup,Use mouse options(Leftclick and Right click ,etc.,) to open application and perform actions.</div>
<div>
	4. Repeat the above steps 25 times.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	For each iteration:</div>
<div>
	1. USB should detect properly without any issues.</div>
<div>
	2. Mouse should work properly without any issues.</div>
<div>
	3. Mouse functionality should work properly without any issues.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Stress]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4788" name="USB-Str:Check USB flash drive detection 25 times">
	<node_order><![CDATA[1006]]></node_order>
	<externalid><![CDATA[33]]></externalid>
	<fullexternalid><![CDATA[test-33]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the USB flash drive Functionality for 25 times</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.</div>
<div>
	2. USB should work as a host.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Connect a USB storage device (e.g.: USB 2.0/3.0 Flash device/Pen drives) to USB host port.</div>
<div>
	2. Go to settings -&gt; Storage -&gt; USB disk.</div>
<div>
	3. Now check whether USB 2.0 flash device is detected or not with out any issues.&nbsp;</div>
<div>
	4. Repeat the above steps 25 times.</div>
<div>
	&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	For each iteration:</div>
<div>
	1. USB Storage should detect in USB host port and also device display screen should not rotate when the USB 2.0 devices connected to host port.USb storage device data should display properly without any issues.</div>
<div>
	&nbsp;</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Stress]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4791" name="USB:Check USB detection in all 4 ports">
	<node_order><![CDATA[1007]]></node_order>
	<externalid><![CDATA[34]]></externalid>
	<fullexternalid><![CDATA[test-34]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether USB mouse/keyboard/flash drives are detecting or not in all the 4 USB host ports.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.</div>
<div>
	2. DUT should have USB host ports.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Boot the device to android lock screen.</div>
<div>
	2. Connect the USB mouse/keyboard/flash drive to all the 4 USB host ports.</div>
<div>
	3. Check whether USB mouse and USB keyboards are detected or not in all the 4 ports and also check DUT is able to operate with USB mouse and keyboard.</div>
<div>
	4. Check USB flash drive is detected or not and also flash drive data is mounted in device or not.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. USB mouse and keyboard should detect in all the 4 USB host ports and also DUT should able to operate with USB mouse and keyboard.</div>
<div>
	2. USB flash drive should detect in all the 4 USB host ports and also flash drive data should mount in the device.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4794" name="USB-Neg:Check USB detection when USB drive is not working">
	<node_order><![CDATA[1008]]></node_order>
	<externalid><![CDATA[342]]></externalid>
	<fullexternalid><![CDATA[test-342]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify USB detection when USB drive is not working</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. USB should not be working.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect a non functional USB storage device (e.g.: USB 2.0/3.0 Flash device/Pen drives) to USB host port.<br />
	2. Go to settings -&gt; Storage.<br />
	3. Check if device is detected or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	USB should not be detected as USB drive is non functional</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4797" name="USB-Conc:Check accessing and playing audio/video from USB">
	<node_order><![CDATA[1009]]></node_order>
	<externalid><![CDATA[343]]></externalid>
	<fullexternalid><![CDATA[test-343]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify file accessing and playing audio/video from USB</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. USB should work as a host.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect a USB storage device (e.g.: USB 2.0/3.0 Flash device/Pen drives) with media files to USB host port.<br />
	2. Go to settings -&gt; Storage -&gt; USB disk.<br />
	3. Now check whether USB 2.0 flash device is detected or not with out any issues.<br />
	4. Try to access the media files from the pen drive and play audio or video files.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Files should be accesible from USB.<br />
	2. Audio/Video files should play from USB.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_usb_storage_audio_play.TestUsbStorageAudioPlay]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4800" name="USB-Conc:Check file accessing and playing from USB simultaneously opening DUT gallery">
	<node_order><![CDATA[1010]]></node_order>
	<externalid><![CDATA[344]]></externalid>
	<fullexternalid><![CDATA[test-344]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify file accessing and playing audio from USB and simultaneusly opening DUT Gallery contents</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. USB should work as a host.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect a USB storage device (e.g.: USB 2.0/3.0 Flash device/Pen drives) with media files to USB host port.<br />
	2. Go to settings -&gt; Storage -&gt; USB disk.<br />
	3. Now check whether USB 2.0 flash device is detected or not with out any issues.<br />
	4. Try to play audio from pendrive and open the Gallery contents of the device.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Gallery contents should open and audio should be playing from USB in background.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_usb_storage_audio_play_open_gallery.TestUsbStorageAudioPlayOpenGallery]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4803" name="USB-Conc:Check USB connection with suspend and resume">
	<node_order><![CDATA[1011]]></node_order>
	<externalid><![CDATA[345]]></externalid>
	<fullexternalid><![CDATA[test-345]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	USB&nbsp; connect and disconnect with Suspend and resume</p>
<p>
	&nbsp;</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. USB should work as a host.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect a USB storage device (e.g.: USB 2.0/3.0 Flash device/Pen drives) with media files to USB host port.<br />
	2. Go to settings -&gt; Storage -&gt; USB disk.<br />
	3. Now check whether USB 2.0 flash device is detected or not with out any issues.<br />
	4. Disable the stay awake option in developer options.<br />
	5. Set the wake time in display to 15 seconds.<br />
	6.Suspend and resume the DUT then check whether USB is connected.<br />
	7.Remove USB and suspend and resume the DUT ,then check whether USB is disconnected.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. USB should be connected after suspend and resume when USB is actually connected.<br />
	2. USB should be disconnected after suspend and resume when USB is removed.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4806" name="USB-Conc:Check USB by connecting to DUT play media and remove inbetween">
	<node_order><![CDATA[1012]]></node_order>
	<externalid><![CDATA[346]]></externalid>
	<fullexternalid><![CDATA[test-346]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	USB pen drive connect , play media and remove pendrive in between</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. USB should work as a host.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect a USB storage device (e.g.: USB 2.0/3.0 Flash device/Pen drives) with media files to USB host port.<br />
	2. Go to settings -&gt; Storage -&gt; USB disk.<br />
	3. Now check whether USB 2.0 flash device is detected or not with out any issues.<br />
	4. Try to access the media files from the pen drive and play audio or video files.<br />
	5.Remove the pendrive and check if media has stopped playing.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Audio/Video files should play from USB when connected and should not play when removed.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4809" name="USB-Conc:Check USB to play media through BT speakers while using adb push/pull">
	<node_order><![CDATA[1013]]></node_order>
	<externalid><![CDATA[347]]></externalid>
	<fullexternalid><![CDATA[test-347]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Push/Pull functionality and play media from USB through BT speakers</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. USB should work as a host.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.Push some audio/video/image files to the device using ethernet.<br />
	2. Connect a USB storage device (e.g.: USB .0/3.0 Flash device/Pen drives) with media files to USB host port.<br />
	3. Go to settings -&gt; Storage -&gt; USB disk.<br />
	4. Now check whether USB 2.0 flash device is detected or not with out any issues.Connect BT headset to the device.<br />
	5. Try to access the media files from the pen drive and play audio or video files from USB using BT speakers.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Audio/video files from usb should be playing through BT speakers.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4812" name="USB-Conc:Check media play from USB through BT speakers while downloading file">
	<node_order><![CDATA[1014]]></node_order>
	<externalid><![CDATA[348]]></externalid>
	<fullexternalid><![CDATA[test-348]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Push/Pull functionality and play media from USB trough BT speakers ,when downloading file is in progress</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. USB should work as a host.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.Push some audio/video/image files to the device using ethernet<br />
	2. Connect a USB storage device (e.g.: USB .0/3.0 Flash device/Pen drives) with media files to USB host port.<br />
	3. Go to settings -&gt; Storage -&gt; USB disk.<br />
	4. Now check whether USB 2.0 flash device is detected or not with out any issues.Connect BT headset to the device.<br />
	5.Download some large files from website.<br />
	6. Try to access the media files from the pen drive and play audio or video files from USB using BT speakers when downloading is in progress.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Audio/video files from usb should be playing through BT speakers while downloading is in progress.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4815" name="USB-Conc:Check media access through USB while alarm is set">
	<node_order><![CDATA[1015]]></node_order>
	<externalid><![CDATA[349]]></externalid>
	<fullexternalid><![CDATA[test-349]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify media access functionality when alarm is set</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. USB should work as a host.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.Go to settings and set an alarm in 3 minutes and connect a USB storage device (e.g.: USB 2.0/3.0 Flash device/Pen drives) with media files to USB host port.<br />
	2. Go to settings -&gt; Storage -&gt; USB disk.<br />
	3. Now check whether USB 2.0 flash device is detected or not with out any issues.<br />
	4. Try to access the media files from the pen drive and play audio or video files for 3 minutes and check if media is playing without getting effected from alarms.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Audio and video should be played without getting effected by alarms.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="4818" name="WiFi" >
<node_order><![CDATA[4]]></node_order>
<details><![CDATA[<p>
	Create test suite for WiFi module</p>
]]></details> 

<testcase internalid="4819" name="WiFi:Check WiFi option enable/disable">
	<node_order><![CDATA[1000]]></node_order>
	<externalid><![CDATA[35]]></externalid>
	<fullexternalid><![CDATA[test-35]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify WiFi option enabling/disabling functionality</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Wi-Fi functionality should be supported in the build</div>
<div>
	3. WiFi module should be present on device.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings</div>
<div>
	2. Enable WiFi option and verify whether WiFi option is ON or not.</div>
<div>
	3. Disable WiFi option and check whether WiFi is OFF or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. WiFi should be ON when WiFi option is checked and WiFi should be off when the WiFi option is unchecked.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_wifi_on_off.TestWiFiOnOff]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4822" name="WiFi:Check WiFi scan functionality">
	<node_order><![CDATA[1001]]></node_order>
	<externalid><![CDATA[36]]></externalid>
	<fullexternalid><![CDATA[test-36]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether device is able to scan and show all the available supported WiFi frequency networks or not.&nbsp;</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Wi-Fi functionality should be supported in the build</div>
<div>
	3. WiFi module should be present on device.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Enable Wi-Fi option on DUT</div>
<div>
	2. Verify whether Wi-Fi is able to scan and show all the supported frequency bands available networks when the WiFi option is enabled.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Wi-Fi should scan and show all the supported frequency bands available networks when the WiFi option is enabled.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_wifi_scan.TestWiFiScan]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4825" name="WiFi:Check browse with WiFi">
	<node_order><![CDATA[1002]]></node_order>
	<externalid><![CDATA[37]]></externalid>
	<fullexternalid><![CDATA[test-37]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether tester is able to browse on the target DUT using the WiFi network or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Wi-Fi functionality should be supported in the build</div>
<div>
	3. WiFi module should be present on device.</div>
<div>
	4. Connected router should have Internet.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings</div>
<div>
	2. Check Wi-Fi option and wait for few seconds.</div>
<div>
	3. Verify whether WiFi is ON , and let the DUT find out all available APs or not.</div>
<div>
	4. Connect to the known router by providing proper authentication</div>
<div>
	5. Open browser app, type any URL and start browsing</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. WiFi option should be enabled after selecting the option and WiFi should be connected to the known network after providing the credentials. The DUT should be able to access all available websites in the browser.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_browse_wifi.TestWiFiBrowsing]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4828" name="WiFi:Check WiFi is supporting WPA2 security protocol">
	<node_order><![CDATA[1003]]></node_order>
	<externalid><![CDATA[38]]></externalid>
	<fullexternalid><![CDATA[test-38]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<div>
	Verify Wi-Fi connect with WPA2 security enabled</div>
<div>
	&nbsp;</div>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Wi-Fi functionality should be supported by the build</div>
<div>
	3. WiFi module should be present on device.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Switch on the Wi-Fi Router</div>
<div>
	2. Enable 802.11 b/g/n auto mode.</div>
<div>
	3. Set the router security mode as WPA and also set the router password and save the router settings.</div>
<div>
	4. Enable Wi-Fi on DUT</div>
<div>
	5. Scan for routers available in the vicinity</div>
<div>
	6. Connect to the known router by providing proper authentication of WPA2</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	WiFi&nbsp; should connect to the WPA2 security&nbsp; router and signal strength should be shown on DUT</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_wifi_wpa2.TestWifiWpa2]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4831" name="WiFi-Str:Check WiFi option enable/disable 25 times">
	<node_order><![CDATA[1004]]></node_order>
	<externalid><![CDATA[63]]></externalid>
	<fullexternalid><![CDATA[test-63]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify WiFi option enabling/disabling functionality 25 times</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Wi-Fi functionality should be supported in the build</div>
<div>
	3. WiFi module should be present on device.</div>
<div>
	4. Connected router should have Internet.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings</div>
<div>
	2. Enable WiFi option and verify whether WiFi option is ON or not.</div>
<div>
	3. Disable WiFi option and check whether WiFi is OFF or not.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4. Repeat this step for multiple times 25 times and check whether WIFI is becoming ON/OFF based on WIFI enabled/disabled</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	For each iteration:</div>
<div>
	WiFi should be ON when WiFi option is checked and WiFi should be off when the WiFi option is unchecked.</div>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Stress]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_wifi_on_off_25times.TestWiFiOnOff]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4834" name="WiFi:Check WiFi option connect and disconnect with APN">
	<node_order><![CDATA[1005]]></node_order>
	<externalid><![CDATA[64]]></externalid>
	<fullexternalid><![CDATA[test-64]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify WiFi option disconnect and connect to other WIFI network</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Wi-Fi functionality should be supported in the build</div>
<div>
	3. WiFi module should be present on device.</div>
<div>
	4. Connected router should have Internet.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings</div>
<div>
	2. Enable WiFi option and verify whether WiFi option is ON or not.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3.Check whether WiFi listed all the available WiFi networks&nbsp;</div>
<div>
	4. Connect to&nbsp; a WiFi network by providing proper authentication.</div>
<div>
	5. Disconnect the WiFi network and connect to some other WiFi network&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	After disconnected the WiFi from APN, WiFi should be able to connect other APN.&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_wifi_connect_disconnect_apn.TestWiFiConnectDisconnectApn]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4837" name="WiFi:Check WiFi browsing when APN has connected with many devices">
	<node_order><![CDATA[1006]]></node_order>
	<externalid><![CDATA[65]]></externalid>
	<fullexternalid><![CDATA[test-65]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether DUT is able to browse when many devices are connected to the same WiFi</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Wi-Fi functionality should be supported in the build</div>
<div>
	3. WiFi module should be present on device.</div>
<div>
	4. Connected router should have Internet.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Go to Settings-&gt;More-&gt;Aeroplane mode and enable aeroplane mode&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings</div>
<div>
	3. Enable WiFi option and verify whether WiFi option is ON or not.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;4.Check whether WiFi listed all the available WiFi networks&nbsp;</div>
<div>
	5. Connect to&nbsp; a WiFi network by proving proper authentication&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 6.Connect many other devices to the same WiFi network&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;6.Check whether DUT is able to browse any URL in Browser app without any issue in connectivity speed</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	The DUT should be able to accessed browse the websites without issue in connectivity speed</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4840" name="WiFi:Check WiFi connection when it is in beyond the APN range">
	<node_order><![CDATA[1007]]></node_order>
	<externalid><![CDATA[66]]></externalid>
	<fullexternalid><![CDATA[test-66]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether DUT is not able to connect WiFi when the router is placed beyond its range</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Wi-Fi functionality should be supported in the build</div>
<div>
	3. WiFi module should be present on device.</div>
<div>
	4. Connected router should have Internet.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Go to Settings-&gt;More-&gt;Aeroplane mode and enable aeroplane mode&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings</div>
<div>
	3. Enable WiFi option and verify whether WiFi option is ON or not.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;4.Check whether WiFi listed the network for the router which was moved beyond its range</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	DUT should not able to connect WiFi when the router is placed beyond its range</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4843" name="WiFi:Check able to download a file with WiFi network">
	<node_order><![CDATA[1008]]></node_order>
	<externalid><![CDATA[67]]></externalid>
	<fullexternalid><![CDATA[test-67]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Downloading functionality when WiFi is connected</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Wi-Fi functionality should be supported in the build</div>
<div>
	3. WiFi module should be present on device.</div>
<div>
	4. Connected router should have Internet.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings</div>
<div>
	2. Enable WiFi option and verify whether WiFi option is ON or not.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3.Check whether WiFi listed all the available WiFi networks.</div>
<div>
	4. Connect to&nbsp; a WiFi network by proving proper authentication.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5.Check whether the device is able to browse any URL in Browser app.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 6.Try to download any files from internet.&nbsp; &nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	Files should be downloaded when WiFi is connected</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_downloading_files_wifi.TestWiFiDownloadinglargefiles]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4846" name="WiFi:Check able to download large file with WiFi network">
	<node_order><![CDATA[1009]]></node_order>
	<externalid><![CDATA[68]]></externalid>
	<fullexternalid><![CDATA[test-68]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Downloading large files functionality when WiFi is connected</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Wi-Fi functionality should be supported in the build</div>
<div>
	3. WiFi module should be present on device.</div>
<div>
	4. Connected router should have Internet.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings</div>
<div>
	2. Enable WiFi option and verify whether WiFi option is ON or not.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;3.Check whether WiFi listed all the available WiFi networks&nbsp;</div>
<div>
	4. Connect to&nbsp; a WiFi network by proving proper authentication&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;5.Check whether the device is able to browse any URL in Browser app.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;6.Try to download large files&nbsp; (5-10GB) from internet&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	Files should be downloaded when WiFi is connected</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_downloading_large_files_wifi.TestWiFiDownloadinglargefiles]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4849" name="WiFi:Check WiFi network is supporting B,G,N modes">
	<node_order><![CDATA[1010]]></node_order>
	<externalid><![CDATA[69]]></externalid>
	<fullexternalid><![CDATA[test-69]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether WiFi is supporting B,G and N Network Modes or not</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Wi-Fi functionality should be supported in the build</div>
<div>
	3. WiFi module should be present on device.</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Switch on the Wi-Fi Router</div>
<div>
	&nbsp;</div>
<div>
	&quot;Wireless-B only&quot; mode&nbsp;</div>
<div>
	2. Go to Router&#39;s Wireless settings and change the Network mode to &quot;Wireless-B only&quot; mode and&nbsp;</div>
<div>
	3. Enable Wi-Fi on DUT</div>
<div>
	4. Scan for routers available in the vicinity</div>
<div>
	5. Connect to the known router by providing proper authentication of WPA2</div>
<div>
	&nbsp;</div>
<div>
	&quot;Wireless-G only&quot; mode :</div>
<div>
	6. Go to Router&#39;s Wireless settings and change the Network mode to &quot;Wireless-G only&quot; mode</div>
<div>
	7. Repeat the steps from 3 to 5</div>
<div>
	&nbsp;</div>
<div>
	&quot;Wireless-B/G only&quot; mode:&nbsp;</div>
<div>
	8. Go to Router&#39;s Wireless settings and change the Network mode to &quot;Wireless-B/G only&quot; mode</div>
<div>
	9. Repeat the steps from 3 to 5</div>
<div>
	&nbsp;</div>
<div>
	&quot;Wireless-N only&quot; mode:&nbsp;</div>
<div>
	10. Go to Router&#39;s Wireless settings and change the Network mode to &quot;Wireless-N only&quot; mode</div>
<div>
	11. Repeat the steps from 3 to 5</div>
<div>
	12. Verify whether WiFi is automatically disconnected and re-connected whenever router modes get changed.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. Wi-Fi connection should be established to router and signal strength should be shown on DUT. Device should be compatible and work in all the B,G and N modes without any issues.&nbsp;</div>
<div>
	2. Wi-Fi should automatically disconnect and re-connect whenever router modes get changed.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4852" name="WiFi:Check WiFi supports WEP security protocol">
	<node_order><![CDATA[1011]]></node_order>
	<externalid><![CDATA[70]]></externalid>
	<fullexternalid><![CDATA[test-70]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Wi-Fi connect with WEP security enabled</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Wi-Fi functionality should be supported in the build</div>
<div>
	3. WiFi module should be present on device.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Switch on the Wi-Fi&nbsp; Router</div>
<div>
	2. Enable 802.11 b/g/n auto mode</div>
<div>
	3. Select security mode as WEP.</div>
<div>
	4. Select Encryption option as 64bit.</div>
<div>
	5. Enter 10digit hexadecimal value in Key column and save the settings.</div>
<div>
	6. Enable Wi-Fi on DUT</div>
<div>
	7. Scan for routers available in the vicinity</div>
<div>
	8. Connect to the known router by providing proper authentication of WEP i.e., Key value</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. Connection should be established to router and signal strength should be shown on DUT.</div>
<div>
	2. Security mode should be shown on network under Wi-Fi settings.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4855" name="WiFi:Check WiFi supports WPA security protocol">
	<node_order><![CDATA[1012]]></node_order>
	<externalid><![CDATA[71]]></externalid>
	<fullexternalid><![CDATA[test-71]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<div>
	Verify Wi-Fi connect with WPA security enabled</div>
<div>
	&nbsp;</div>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Wi-Fi functionality should be supported in the build</div>
<div>
	3. WiFi module should be present on device.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Switch on the Wi-Fi Router</div>
<div>
	2. Enable 802.11 b/g/n auto mode.</div>
<div>
	3. Set the router security mode as WPA and also set the router password and save the router settings.</div>
<div>
	4. Enable Wi-Fi on DUT</div>
<div>
	5. Scan for routers available in the vicinity</div>
<div>
	6. Connect to the known router by providing proper authentication of WPA</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	WiFi should connect to the WPA security router and signal strength should be shown on DUT</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_wifi_wpa.TestWifiWpa]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4858" name="WiFi:Check WiFi is auto connected to previously established network after restart">
	<node_order><![CDATA[1015]]></node_order>
	<externalid><![CDATA[74]]></externalid>
	<fullexternalid><![CDATA[test-74]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Wi-Fi auto connect&nbsp; to the previously established network after DUT is re-started</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Wi-Fi functionality should be supported in the build</div>
<div>
	3. WiFi module should be present on device.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Switch on the Wi-Fi Router</div>
<div>
	2. Enable 802.11 b/g/n auto mode</div>
<div>
	3. Enable Wi-Fi on DUT</div>
<div>
	4.&nbsp; Scan for routers available in the vicinity</div>
<div>
	5.&nbsp; Connect to the known router by providing proper authentication</div>
<div>
	6. Restart the target. Wait until the device booting upto unlock screen.</div>
<div>
	7. Verify whether Wi-Fi is connected to previously established router automatically&nbsp; or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	Wi-Fi should automatically be connected to previously established network after re-starting the device and signal strength should be shown on DUT</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_wifi_connect_after_restart.TestWiFiConnectAfterRestart]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4861" name="WiFi:Check WiFi is reconnected to the remembered network">
	<node_order><![CDATA[1016]]></node_order>
	<externalid><![CDATA[75]]></externalid>
	<fullexternalid><![CDATA[test-75]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether WiFi is automatically re-connecting to the remembered network when the WIFi is in enabled state.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Wi-Fi functionality should be supported in the build</div>
<div>
	3. WiFi module should be present on device.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Enable Wi-Fi on DUT</div>
<div>
	2.&nbsp; Scan for routers available in the vicinity area of the device</div>
<div>
	3.&nbsp; Connect to the known router by providing proper authentication.</div>
<div>
	4. Now disable the WiFi option from the WIRELESS &amp; NETWORKS settings.</div>
<div>
	5. Now try to turn the WiFi from the WIRELESS &amp; NETWORKS settings</div>
<div>
	6. Verify whether Wi-Fi is connected to previously established router automatically&nbsp; or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	WiFi should automatically re-connect to the remembered network when the WIFi is in enabled state.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_wifi_connect_after_off_and_on.TestWiFiConnectAfterOffAndOn]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4864" name="WiFi:Check WiFi auto connection when moving from non-coverage area to signal area">
	<node_order><![CDATA[1017]]></node_order>
	<externalid><![CDATA[76]]></externalid>
	<fullexternalid><![CDATA[test-76]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Auto Connect to the router on moving from No-Coverage area to signal area</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Wi-Fi should be enabled in the build</div>
<div>
	3. Boot up should not have any issues</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Enable Wi-Fi on DUT</div>
<div>
	2. Scan for routers available in the vicinity area of the device</div>
<div>
	3. Connect to the known router by providing proper authentication</div>
<div>
	4. Keep moving away from the router until device reaches WiFi disconnected area.</div>
<div>
	5. Now return back to the router vicinity area and check whether wifi is auto connected to the router or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Device should be Auto Connected to the router on moving from No-Coverage area to signal area</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4867" name="WiFi:Check file downloading while Wifi is disabled">
	<node_order><![CDATA[1019]]></node_order>
	<externalid><![CDATA[350]]></externalid>
	<fullexternalid><![CDATA[test-350]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Downloading functionality when WiFi is connected</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.<br />
	4. Connected router should have Internet.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings<br />
	2. Enable WiFi option and verify whether WiFi option is ON or not.<br />
	3. Check whether WiFi listed all the available WiFi networks.<br />
	4. Connect to&nbsp; a WiFi network by proving proper authentication.<br />
	5. Check whether the device is able to browse any URL in Browser app.<br />
	6. Disable WiFi in the Settings.<br />
	7. Try to download any files from internet.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Files should not be downloaded when WiFi is disabled.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_downloading_files_wifi_disabled.TestDownloadingfilesWiFiDisabled]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4870" name="WiFi:Check WiFi browsing using URL's">
	<node_order><![CDATA[1020]]></node_order>
	<externalid><![CDATA[351]]></externalid>
	<fullexternalid><![CDATA[test-351]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether the DUT is able to browse web sites using URL&#39;s or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. The&nbsp; DUT should have the internet facility (Wi-Fi / 3G / Ethernet).</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.Open the Browser Apk,<br />
	2. Open the &ldquo;www.msn.com&rdquo; URL.<br />
	3. Check whether the MSN website open or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The DUT should be able to browse web sites using URL&#39;s and able to access the &ldquo;www.msn.com&rdquo; website.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_browse_url.TestBrowseUrl]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4873" name="WiFi:Check audio streaming through WiFi">
	<node_order><![CDATA[1021]]></node_order>
	<externalid><![CDATA[352]]></externalid>
	<fullexternalid><![CDATA[test-352]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether the DUT is able to play streaming audio or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. The&nbsp; DUT should have the internet facility (Wi-Fi / 3G / Ethernet).</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.Open the Browser Apk.<br />
	2. Open the &ldquo;https://gaana.com/&rdquo; URL.<br />
	3. Play any Audio.<br />
	4. Check whether the Audio is playing without any issues or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The DUT should be able to play streaming audio with out any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_audio_ganna_play.TestAudio_ganna_play]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4876" name="WiFi:Check video streaming through WiFi">
	<node_order><![CDATA[1022]]></node_order>
	<externalid><![CDATA[353]]></externalid>
	<fullexternalid><![CDATA[test-353]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether the DUT is able to play streaming video or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. The&nbsp; DUT should have the internet facility (Wi-Fi / 3G / Ethernet).</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.Open the Browser Apk.<br />
	2. Open the &ldquo;https://m.youtube.com&rdquo; URL.<br />
	3. Play any Video.<br />
	4. Check whether the video is playing without any issues or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The DUT should be able to play streaming video with out any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_wifi_youtube_play.TestVideo_youtube_play]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4879" name="WiFi:Check network time through WiFi">
	<node_order><![CDATA[1023]]></node_order>
	<externalid><![CDATA[354]]></externalid>
	<fullexternalid><![CDATA[test-354]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether the DUT is able to get network time or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. The&nbsp; DUT should have the internet facility (Wi-Fi / 3G / Ethernet).</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Disable the WiFi/3G/Ethernet options.<br />
	2. Go to Settings &rarr; Date &amp; time.<br />
	3. Disable the &ldquo;Automatic date &amp; time&rdquo; and set the incorrect time in the device.<br />
	4. Enable the WiFi/3G/Ethernet in the device.<br />
	5. Enable the &ldquo;Automatic date &amp; time&rdquo; option under &ldquo;Date &amp; time&rdquo; settings.<br />
	6. Check whether correct time is showing by the device or not by using the network.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The DUT should be updated to correct time using network when the device has incorrect time.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_date_time.Test_Date_time]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4882" name="WiFi:Check by disconnecting and connecting WiFi network during file download">
	<node_order><![CDATA[1024]]></node_order>
	<externalid><![CDATA[355]]></externalid>
	<fullexternalid><![CDATA[test-355]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify disconnect and connect back the WiFi network during downloading files</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. The&nbsp; DUT should have the internet facility (Wi-Fi / 3G / Ethernet).</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings<br />
	2. Enable WiFi option and verify whether WiFi option is ON or not.<br />
	3. Check whether WiFi listed all the available WiFi networks<br />
	4. Connect to&nbsp; a WiFi network by proving proper authentication.<br />
	5. Check whether the device is able to browse any URL in Browser app.<br />
	6. Try to download any files from internet<br />
	7. Disconnect the WiFi network in between anc connect back again.<br />
	8. Observe the files downloading.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Files should resume downloading when Wifi is connected again.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_wifi_download_resume_disconnect_connect_apn.TestWiFiConnectDisconnectApn]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4885" name="WiFi:Check data loss using ping command">
	<node_order><![CDATA[1025]]></node_order>
	<externalid><![CDATA[356]]></externalid>
	<fullexternalid><![CDATA[test-356]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify data loss using ping command on local networks</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.<br />
	4. Connected router should have Internet.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings.<br />
	2. Enable WiFi option and verify whether WiFi option is ON or not.<br />
	3. Check whether WiFi listed all the available WiFi networks<br />
	4. Connect to&nbsp; a WiFi network by proving proper authentication.<br />
	5. Ping ip address of local network ex- ping 10.50.75.177&nbsp; in command line and press ctrl+c after 10 seconds and check whether any data loss is there.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. No data loss should be there when ping command is used.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_data_loss_ping_WiFi.TestPing]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4888" name="WiFi:Check data loss using ping flood command">
	<node_order><![CDATA[1026]]></node_order>
	<externalid><![CDATA[357]]></externalid>
	<fullexternalid><![CDATA[test-357]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify data loss using ping flood command on local networks</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.<br />
	4. Connected router should have Internet.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings.<br />
	2. Enable WiFi option and verify whether WiFi option is ON or not.<br />
	3. Check whether WiFi listed all the available WiFi networks<br />
	4. Connect to&nbsp; a WiFi network by proving proper authentication.<br />
	5. Ping flood ip address of local network ex- ping -f 10.50.75.177&nbsp; in command line and press ctrl+c after 10 seconds and check whether any data loss is there.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. No data loss should be there when ping flood command is used.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_data_loss_flood_ping_WiFi.TestPing]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4891" name="WiFi:Check WiFi with 2.4GHZ frequency">
	<node_order><![CDATA[1027]]></node_order>
	<externalid><![CDATA[358]]></externalid>
	<fullexternalid><![CDATA[test-358]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify 2.4Ghz band frequency</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.<br />
	4. Connected router should have Internet.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings.<br />
	2. Go to router settings and set the wifi radi mode as 2.4Ghz.<br />
	3. Check whether the bandwidth has set to 2.4Ghz.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Router bandwidth should be set to 2.4Ghz.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_wifi_2dot4ghz.TestWifi2dot4GhzFrequency]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4894" name="WiFi:Check WiFi with 5GHZ frequency">
	<node_order><![CDATA[1028]]></node_order>
	<externalid><![CDATA[359]]></externalid>
	<fullexternalid><![CDATA[test-359]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify 5Ghz band frequency</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.<br />
	4. Connected router should have Internet.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings.<br />
	2. Go to router settings and set the wifi radi mode as 5 Ghz.<br />
	3. Check whether the bandwidth has set to 5 Ghz.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Router bandwidth should be set to 5Ghz.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_wifi_5ghz.TestWifi5GhzFrequency]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4897" name="WiFi:Check WiFi 20MHZ channel for 2.4GHZ frequency">
	<node_order><![CDATA[1029]]></node_order>
	<externalid><![CDATA[360]]></externalid>
	<fullexternalid><![CDATA[test-360]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify 20MHz channel for&nbsp; 2.4Ghz band frequency</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.<br />
	4. Connected router should have Internet.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings.<br />
	2. Go to router settings and set the wifi radi mode as 2.4Ghz.<br />
	3. Set the channel as 20 Mhz.<br />
	4. Observe its performance and reliability.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Performance and reliability issues should not be observed.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4900" name="WiFi:Check WiFi 40MHZ channel for 2.4GHZ frequency">
	<node_order><![CDATA[1030]]></node_order>
	<externalid><![CDATA[361]]></externalid>
	<fullexternalid><![CDATA[test-361]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify 40MHz channel for&nbsp; 2.4Ghz band frequency</p>
]]></summary>
	<preconditions><![CDATA[<p>
	3. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.<br />
	4. Connected router should have Internet.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings.<br />
	2. Go to router settings and set the wifi radi mode as 2.4Ghz.<br />
	3. Set the channel as 40 Mhz<br />
	4. Observe its performance and reliability.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. 40MHz channels in the 2.4GHz band can cause performance and reliability issues with your network.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4903" name="WiFi:Check WiFi 20MHZ channel for 5GHZ frequency">
	<node_order><![CDATA[1031]]></node_order>
	<externalid><![CDATA[362]]></externalid>
	<fullexternalid><![CDATA[test-362]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify 20MHz channel for&nbsp; 5 Ghz band frequency</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.<br />
	4. Connected router should have Internet.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings.<br />
	2. Go to router settings and set the wifi radi mode as 5 Ghz.<br />
	3. Set the channel as 20 Mhz.<br />
	4. Observe its performance and reliability.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Performance and reliability issues should be observed.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4906" name="WiFi:Check WiFi 40MHZ channel for 5GHZ frequency">
	<node_order><![CDATA[1032]]></node_order>
	<externalid><![CDATA[363]]></externalid>
	<fullexternalid><![CDATA[test-363]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify 40MHz channel for&nbsp; 5 Ghz band frequency</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.<br />
	4. Connected router should have Internet.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings.<br />
	2. Go to router settings and set the wifi radi mode as&nbsp; 5 Ghz.<br />
	3. Set the channel as 40 Mhz.<br />
	4. Observe its performance and reliability.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. 40MHz or 80 Mhz channels in the 5 Ghz is supported.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4909" name="WiFi-Neg:Check WiFi to connect a network without password">
	<node_order><![CDATA[1033]]></node_order>
	<externalid><![CDATA[364]]></externalid>
	<fullexternalid><![CDATA[test-364]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify trying connecting to a WiFi network without password</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings.<br />
	2. Check Wi-Fi option and wait for few seconds.<br />
	3. Verify whether WiFi is ON , and let the DUT find out all available APs or not.<br />
	4. Try connecting to the network without&nbsp; providing any authorization.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Wifi should not be connected to the network with out providing authorization.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_wifi_connect_without_pwd.TestWiFiConnectWithoutPwd]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4912" name="WiFi-Neg:Check WiFi to connect a network which has no password">
	<node_order><![CDATA[1034]]></node_order>
	<externalid><![CDATA[365]]></externalid>
	<fullexternalid><![CDATA[test-365]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify connecting to a WiFi network which has no password</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings.<br />
	2. Check Wi-Fi option and wait for few seconds.<br />
	3. Verify whether WiFi is ON , and let the DUT find out all available APs or not.<br />
	4. Try connecting to the network which has no password restriction.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. WiFi should be connected without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_wifi_open_network.TestWiFiOpenNetwork]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4915" name="WiFi-Neg:Check to connect to a network when WiFi module is removed">
	<node_order><![CDATA[1035]]></node_order>
	<externalid><![CDATA[366]]></externalid>
	<fullexternalid><![CDATA[test-366]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify connecting when WiFi module is removed</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be removed.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings.<br />
	2. Check Wi-Fi option and wait for few seconds.<br />
	3. Verify whether WiFi is ON , and let the DUT find out all available APs or not.<br />
	4. Check whether any APNs are listed or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. APNs should not be displayed as WiFi module is removed.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4918" name="WiFi-Str:Check WiFi to connect and disconnect for 25 times">
	<node_order><![CDATA[1036]]></node_order>
	<externalid><![CDATA[367]]></externalid>
	<fullexternalid><![CDATA[test-367]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify WiFi option enabling/disabling&nbsp;functionality 25 times</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.<br />
	4. Connected router should have Internet.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings.<br />
	2. Enable WiFi option and verify whether WiFi option is ON or not.<br />
	3. Disable WiFi option and check whether WiFi is OFF or not.<br />
	4. Repeat this step for multiple times 25 times and check whether WIFI is becoming ON/OFF based on WIFI enabled/disabled.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	For each iteration:<br />
	1. WiFi should be ON when WiFi option is checked and WiFi should be off when the WiFi option is unchecked.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_wifi_connect_disconnect_apn_25times.TestWiFiConnect]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4921" name="WiFi-Str:Check download through WiFi for 15 files">
	<node_order><![CDATA[1037]]></node_order>
	<externalid><![CDATA[368]]></externalid>
	<fullexternalid><![CDATA[test-368]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify downloading multiple files (15 ) continously</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.<br />
	4. Connected router should have Internet.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings.<br />
	2. Enable WiFi option and verify whether WiFi option is ON or not.<br />
	3. Connect WiFi to the network available.<br />
	4. Download multiple files(15) continously.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. All the files should be downloaded without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_downloading_15_files_wifi.TestWiFiDownloadingfiles]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4924" name="WiFi-Str:Check download through WiFi  15 small and large files">
	<node_order><![CDATA[1038]]></node_order>
	<externalid><![CDATA[369]]></externalid>
	<fullexternalid><![CDATA[test-369]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify downloading multiple files small and large both(15 ) continously</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.<br />
	4. Connected router should have Internet.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings<br />
	2. Enable WiFi option and verify whether WiFi option is ON or not.<br />
	3. Connect WiFi to the network available.<br />
	4. Download multiple files both small and large files (15) continously.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. All the files should be downloaded without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_downloading_15_large_small_files.TestWiFiDownloadinglargesmallfiles]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4927" name="WiFi-Conc:Check BT on/off while downloading files using WiFi">
	<node_order><![CDATA[1039]]></node_order>
	<externalid><![CDATA[370]]></externalid>
	<fullexternalid><![CDATA[test-370]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check BT on/off functionality when downloading files are in progress using WiFi</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings.<br />
	2. Enable WiFi option and verify whether WiFi option is ON or not.<br />
	3. Check whether WiFi listed all the available WiFi networks.<br />
	4. Connect to&nbsp; a WiFi network by proving proper authentication.<br />
	5. Check whether the device is able to browse any URL in Browser app.<br />
	6. Try to download any files from internet.<br />
	7. Enable and disable BT during downloading files.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. All the files should be downloaded and BT on/off should not effect downloading.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_downloading_files_BT_on_off.TestWiFiDownloadingfilesBT]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4930" name="WiFi-Conc:Check Airplane mode on/off while downloading files using ethernet">
	<node_order><![CDATA[1040]]></node_order>
	<externalid><![CDATA[371]]></externalid>
	<fullexternalid><![CDATA[test-371]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Airplane mode on/off functionality when downloading files are in progress using Ethernet not WiFi</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings.<br />
	2. Disable WiFi option and verify whether WiFi option is disabled or not.<br />
	3. Check whether the device is able to browse any URL in Browser app using ethernet connection.<br />
	4. Try to download any files from internet.<br />
	5. Enable and disable airplane mode during downloading files.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. All the files should be downloaded and airplane mode on/off should not effect downloading.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_downloading_files_Aiplanemode_on_off.TestDownloadingfiles_airplane]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4933" name="WiFi-Conc:Check Ethernet connection(on/off) while downloading using WiFi">
	<node_order><![CDATA[1041]]></node_order>
	<externalid><![CDATA[372]]></externalid>
	<fullexternalid><![CDATA[test-372]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify ethernet on/off connection downloading is in progress using WiFi</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings.<br />
	2. Enable WiFi option and verify whether WiFi option is ON or not.<br />
	3. Check whether WiFi listed all the available WiFi networks<br />
	4. Connect to&nbsp; a WiFi network by proving proper authentication.<br />
	5. Check whether the device is able to browse any URL in Browser app.<br />
	6. Try to download any files from internet.<br />
	7. Disconnect and connect ethernet while downloading files.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. All the files should be downloaded and ethernet on/off should not effect downloading.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4936" name="WiFi-Conc:Check video streaming during WiFi or Ethernet in (on/off)">
	<node_order><![CDATA[1042]]></node_order>
	<externalid><![CDATA[373]]></externalid>
	<fullexternalid><![CDATA[test-373]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify video streaming when WiFi and Ethernet are in on/off state</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings.<br />
	2. Enable WiFi option and verify whether WiFi option is ON or not.<br />
	3. Check whether WiFi listed all the available WiFi networks.<br />
	4. Connect to&nbsp; a WiFi network by proving proper authentication.<br />
	5. Check whether the device is able to browse any URL in Browser app.<br />
	6. Try playing some videos in youtube.<br />
	7. Disconnect and connect ethernet and wifi also whille video streaming.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Video should resume streaming when WiFi or Ethernet is connected again.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4939" name="WiFi-Conc:Check WiFi browsing when alarm is set">
	<node_order><![CDATA[1043]]></node_order>
	<externalid><![CDATA[374]]></externalid>
	<fullexternalid><![CDATA[test-374]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify WiFi Browsing functionality when alarm is set</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to settings-&gt;Alarms and set alarm in 3 minutes.<br />
	2. Enable WiFi option and verify whether WiFi option is ON or not.<br />
	3. Check whether WiFi listed all the available WiFi networks.<br />
	4. Connect to&nbsp; a WiFi network by proving proper authentication.<br />
	5.Check whether the device is able to browse any URL in Browser app for 3 minutes without getting effected by alarms.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Web browsing should be working properly without getting effected by alarms.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="4942" name="BT" >
<node_order><![CDATA[5]]></node_order>
<details><![CDATA[<p>
	Create test suite for BlueTooth module</p>
]]></details> 

<testcase internalid="4943" name="BT:Check BlueTooth option enable/disable functionality">
	<node_order><![CDATA[1000]]></node_order>
	<externalid><![CDATA[39]]></externalid>
	<fullexternalid><![CDATA[test-39]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Turn ON/OFF of Bluetooth functionality</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. BT h/w module should be present on the device&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to settings &gt; wireless &amp; networks &gt; Bluetooth&nbsp;</div>
<div>
	2. Turn On Bluetooth. Verify whether it is turned ON or not.&nbsp;</div>
<div>
	3. Turn OFF Bluetooth. Check whether it is turned OFF or not</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. BT should be turned ON when enabling the BT option and it should be turned OFF when the BT option is unchecked</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_bt_on_off.TestBTOnOff]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4946" name="BT:Check Bluettoth scan functionality">
	<node_order><![CDATA[1001]]></node_order>
	<externalid><![CDATA[40]]></externalid>
	<fullexternalid><![CDATA[test-40]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Scan for devices functionality.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. BT h/w module should be present on the device&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to settings &gt; Wireless &amp; Networks &gt; Bluetooth Settings&nbsp;</div>
<div>
	2. Turn On Bluetooth.</div>
<div>
	3. Turn on Bluetooth in other device and make it as discoverable by other Bluetooth devices</div>
<div>
	4. Select scan for the devices to check for the available Bluetooth devices around.</div>
<div>
	5. Turn on Bluetooth in some other device and make sure it is discoverable by other devices.&nbsp;</div>
<div>
	6. Select &quot;scan for devices&quot; in DUT.&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. on selecting &quot;scan for devices&quot;, device should run the scan again and the available device list should refresh and show the list.&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4949" name="BT:Check BT is pairing to FTP device">
	<node_order><![CDATA[1002]]></node_order>
	<externalid><![CDATA[41]]></externalid>
	<fullexternalid><![CDATA[test-41]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Pair and Connect to FTP Device</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. BT h/w module should be present on the device&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to settings &gt; Wireless &amp; Networks &gt; Bluetooth Settings&nbsp;</div>
<div>
	2. Turn On Bluetooth.</div>
<div>
	3. Check the &quot;discoverable&quot; option.</div>
<div>
	4. Turn the Bluetooth on on another FTP device and make sure it is discoverable</div>
<div>
	5. Scan for the Bluetooth devices around</div>
<div>
	6. Pair with another FTP device&nbsp;</div>
<div>
	7. Check for any issues.&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. DUT should be paired and connected with another FTP device.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4952" name="BT:Check BT is transferring files to FTP devices">
	<node_order><![CDATA[1003]]></node_order>
	<externalid><![CDATA[42]]></externalid>
	<fullexternalid><![CDATA[test-42]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check for FTP functionality, transfer of file to and from device</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. BT h/w module should be present on the device&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to settings &gt; Wireless &amp; Networks &gt; Bluetooth Settings&nbsp;</div>
<div>
	2. Turn On Bluetooth.</div>
<div>
	3. Check the &quot;discoverable&quot; option.</div>
<div>
	4. Turn the Bluetooth on on another FTP device and make sure it is discoverable</div>
<div>
	5. Scan for the Bluetooth devices around</div>
<div>
	6. Pair with another FTP device&nbsp;</div>
<div>
	7. Check the FTP functionality by transferring the files to and from the device.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. DUT should be paired and connected with another FTP device and files should be transferred to and from the DUT without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4955" name="BT:Check BT supports A2DP functionality">
	<node_order><![CDATA[1004]]></node_order>
	<externalid><![CDATA[78]]></externalid>
	<fullexternalid><![CDATA[test-78]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check for A2DP functionality</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. BT h/w module should be present on the device.</div>
<div>
	3.Wireless headset/earphones should be present for pairing</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to settings &gt; Wireless &amp; Networks &gt; Bluetooth Settings&nbsp;</div>
<div>
	2. Turn On Bluetooth.</div>
<div>
	3. Check the &quot;discoverable&quot; option.</div>
<div>
	4. Turn the Bluetooth on on another FTP device and make sure it is discoverable</div>
<div>
	5. Scan for the Bluetooth devices around</div>
<div>
	6. Pair and connect with the wireless earphone/headset&nbsp;</div>
<div>
	7.Play the music on the device from the paired headset&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 8.Check whether music is streamed from device to wireless headset</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	DUT should be paired and connected with the wireless headset and music should be played from the connected headset.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4958" name="BT:Check maximum range for BT">
	<node_order><![CDATA[1005]]></node_order>
	<externalid><![CDATA[79]]></externalid>
	<fullexternalid><![CDATA[test-79]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify maximum range for bluetooth.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. BT h/w module should be present on the device&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to settings &gt; Wireless &amp; Networks &gt; Bluetooth Settings&nbsp;</div>
<div>
	2. Turn On Bluetooth.</div>
<div>
	3. Turn on Bluetooth in other device and make it as discoverable by other Bluetooth devices</div>
<div>
	4. Select scan for the devices to check for the available Bluetooth devices around.</div>
<div>
	5. Turn on Bluetooth in some other device and make sure it is discoverable by other devices.&nbsp;</div>
<div>
	6. Select &quot;scan for devices&quot; in DUT.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;7. Take the other bluetooth device beyond the maximum bluetooth range. 8.Check whether the moved bluetooth device is detected or not&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	The moved bluetooth should not be detected by DUT once it is moved beyond its maximum range.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4961" name="BT:Check pair and connect to HID Mouse">
	<node_order><![CDATA[1006]]></node_order>
	<externalid><![CDATA[80]]></externalid>
	<fullexternalid><![CDATA[test-80]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Pair and Connect to HID Mouse</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. BT h/w module should be present on the board.</div>
<div>
	3. Bluetooth wireless mouse</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to settings &gt; Wireless &amp; Networks &gt; Bluetooth Settings&nbsp;</div>
<div>
	2. Turn On Bluetooth.</div>
<div>
	3. Check the &quot;discoverable&quot; option.</div>
<div>
	4. Turn on Bluetooth wireless mouse</div>
<div>
	5. Make sure that wireless mouse is getting detected by the DUT and should appear in the available devices list.&nbsp;</div>
<div>
	6. Pair with the Mouse</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. DUT should be paired and connected with HID mouse without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4964" name="BT:Check pair and connect to HID Keyboard">
	<node_order><![CDATA[1007]]></node_order>
	<externalid><![CDATA[81]]></externalid>
	<fullexternalid><![CDATA[test-81]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Pair and Connect to HID Keyboard</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. BT h/w module should be present on the board.</div>
<div>
	3. Bluetooth wireless Keyboard</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to settings &gt; Wireless &amp; Networks &gt; Bluetooth Settings&nbsp;</div>
<div>
	2. Turn On Bluetooth.</div>
<div>
	3. Check the &quot;discoverable&quot; option.</div>
<div>
	4. Turn on Bluetooth wireless Keyboard</div>
<div>
	5. Make sure that wireless Keyboard is getting detected by the DUT and should appear in the available devices list.&nbsp;</div>
<div>
	6. Pair with the Keyboard</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. DUT should be paired and connected with HID Keyboard without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4967" name="BT-Str:Check connect/disconnect of HID Mouse 10 times">
	<node_order><![CDATA[1008]]></node_order>
	<externalid><![CDATA[82]]></externalid>
	<fullexternalid><![CDATA[test-82]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Connect/Disconnect HID Mouse 10 times&nbsp;</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. BT h/w module should be present on the board.</div>
<div>
	3. Bluetooth wireless HID (mouse or keyboard)</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to settings &gt; wireless &amp; networks &gt; Bluetooth setting</div>
<div>
	2. Turn On Bluetooth.</div>
<div>
	3. Enable &quot;Visible to all nearby Bluetooth devices&quot; option.</div>
<div>
	4. Press on &quot;scan for devices&quot; .</div>
<div>
	5. Pair the device with HID Mouse.</div>
<div>
	6. Unpair the device with HID mouse.</div>
<div>
	7. Repeat the above steps from 4 to 6 for 10 times.</div>
<div>
	&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. There should not be any issues while pairing and Unpaired the HID Mouse 10 times.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Stress]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4970" name="BT-Str:Check BT option enable/disable 25 times">
	<node_order><![CDATA[1009]]></node_order>
	<externalid><![CDATA[83]]></externalid>
	<fullexternalid><![CDATA[test-83]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify user is able to Turn ON/OFF of Bluetooth option 25 times or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. BT h/w module should be present on the device&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to settings &gt; wireless &amp; networks &gt; Bluetooth&nbsp;</div>
<div>
	2. Turn On Bluetooth. Verify whether it turned ON or not.&nbsp;</div>
<div>
	3. Turn OFF Bluetooth. Check whether it turned off or not</div>
<div>
	4. Repeat the steps from the 1 to 3 for 25 times.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. BT should be turned ON when enabling the BT option and it should get turned OFF when BT option is unchecked for each iteration despite 25 iterations.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Stress]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_bt_on_off_25times.TestBTOnOff]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4973" name="BT:Check auto connection of BT after restart the device">
	<node_order><![CDATA[1010]]></node_order>
	<externalid><![CDATA[84]]></externalid>
	<fullexternalid><![CDATA[test-84]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Auto connect of Bluetooth paired devices after restart of the target</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. BT h/w module should be present on the board.</div>
<div>
	3. Should have Bluetooth wireless keyboard or mouse.</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to Settings &gt; Wireless &amp; Networks &gt; Bluetooth settings&nbsp;</div>
<div>
	2. Turn On Bluetooth.</div>
<div>
	3. Turn on the wireless keyboard or mouse</div>
<div>
	4. From the DUT, scan for the Bluetooth devices around</div>
<div>
	5. Pair and connect to wireless Mouse/ Keyboard.</div>
<div>
	<div>
		6). After Bluetooth devices connected, shut-down the device using power button.&nbsp;</div>
	<div>
		7). Boot up the device again.&nbsp;</div>
	<div>
		8). After boot up completes, check whether all the previously paired devices are auto connected or not.&nbsp;</div>
</div>
<div>
	&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. After reboot, device should auto connect to previously paired HID devices.</div>
<div>
	&nbsp;</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4976" name="BT:Check BT automatically connected to the previously paired device after disable and enable it">
	<node_order><![CDATA[1011]]></node_order>
	<externalid><![CDATA[85]]></externalid>
	<fullexternalid><![CDATA[test-85]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether DUT is automatically connected to the previously paired BT devices or not after enabling and disabling the BT option.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. BT h/w module should be present on the board.</div>
<div>
	3. Should have Bluetooth wireless keyboard or mouse.</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to settings &gt; wireless &amp; networks &gt; Bluetooth&nbsp; settings</div>
<div>
	2. Turn On Bluetooth.</div>
<div>
	3. Scan for the Bluetooth devices around.</div>
<div>
	4. Turn on the wireless keyboard or mouse</div>
<div>
	5. From the DUT, scan for the Bluetooth devices around</div>
<div>
	6. Pair and connect to wireless Mouse/ Keyboard.</div>
<div>
	<div>
		7. Turn off the Bluetooth.</div>
	<div>
		8. Now, again Turn on the Bluetooth.</div>
</div>
<div>
	&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. After Turn OFF/ON the BT, the device should auto connect to the previously paired HID devices without any issues.</div>
<div>
	&nbsp;</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4979" name="BT:Check BT automatically connected to previously paired device when DUT entered into vicinity area">
	<node_order><![CDATA[1012]]></node_order>
	<externalid><![CDATA[86]]></externalid>
	<fullexternalid><![CDATA[test-86]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether the DUT is automatically connected to the previously paired BT device when the DUT has entered into the vicinity area of the device</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. BT h/w module should be present on the board.</div>
<div>
	3. Should have Bluetooth wireless keyboard or mouse.</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to settings &gt; wireless &amp; networks &gt; Bluetooth&nbsp; settings</div>
<div>
	2. Turn On Bluetooth.</div>
<div>
	3. Scan for the Bluetooth devices around.</div>
<div>
	4. Turn on the wireless keyboard or mouse</div>
<div>
	5. From the DUT, scan for the Bluetooth devices around</div>
<div>
	6. Pair and connect to wireless Mouse/ Keyboard.</div>
<div>
	<div>
		7. Now Take away the above devices from V200 device Vicinity area.</div>
	<div>
		8. Now come back to within the vicinity range and check whether previously paired HID devices are reconnected or not.&nbsp;</div>
</div>
<p>
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. The device should auto connect to the previously paired HID devices without any issues.</div>
<div>
	&nbsp;</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4982" name="BT:Check BT visibility time out">
	<node_order><![CDATA[1013]]></node_order>
	<externalid><![CDATA[87]]></externalid>
	<fullexternalid><![CDATA[test-87]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify able to set the&nbsp; BT visibility timeout on DUT or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. BT h/w module should be present on the board.</div>
<div>
	3. Bluetooth capable peripheral device.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to settings &gt; Wireless &amp; Networks &gt; Bluetooth Settings&nbsp;</div>
<div>
	2. Turn On Bluetooth.</div>
<div>
	3. Go to BT settings.</div>
<div>
	4. Try to Set&nbsp; the Visibility time out to 2 minutes and set DUT to &ldquo;Visible to all nearby Bluetooth devices&rdquo;.&nbsp;</div>
<div>
	5. Turn on Bluetooth on another bluetooth capable device.</div>
<div>
	6. Make sure that the V200 Device is get detected by the bluetooth capable device and check the DUT is visible on it till the visibility time out.</div>
<div>
	7. Repeat above steps 4 to 6 for setting the Visibility timeout of &ldquo;5 minutes&rdquo;, &ldquo;1 hour&rdquo; and &ldquo;never time out&rdquo; options.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Should be able to set&nbsp; the visibility timeout on DUT according to user choice. And also the DUT should be visible to other Bluetooth capable devices in range, till the visibility is timed out.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4985" name="BT:Check number of FTP devices connected to BT">
	<node_order><![CDATA[1015]]></node_order>
	<externalid><![CDATA[89]]></externalid>
	<fullexternalid><![CDATA[test-89]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify number of FTP devices connected to bluetooth.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. BT h/w module should be present on the device&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to settings &gt; Wireless &amp; Networks &gt; Bluetooth Settings&nbsp;</div>
<div>
	2. Turn On Bluetooth.</div>
<div>
	3. Turn on Bluetooth in other device and make it as discoverable by other Bluetooth devices</div>
<div>
	4. Select scan for the devices to check for the available Bluetooth devices around.</div>
<div>
	5. Turn on Bluetooth in some other device and make sure it is discoverable by other devices.&nbsp;</div>
<div>
	6. Select &quot;scan for devices&quot; in DUT.&nbsp; &nbsp; 7. Connect to one of the scanned devices and check whether device is connected&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;8.Try connecting more than 1 FTP devices&nbsp;&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1 Device should be able to connect more than one FTP devices at a time.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Stress]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4988" name="BT:Check number of FTP devices paired to BT">
	<node_order><![CDATA[1016]]></node_order>
	<externalid><![CDATA[90]]></externalid>
	<fullexternalid><![CDATA[test-90]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify number of FTP devices paired to bluetooth.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. BT h/w module should be present on the device&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to settings &gt; Wireless &amp; Networks &gt; Bluetooth Settings&nbsp;</div>
<div>
	2. Turn On Bluetooth.</div>
<div>
	3. Turn on Bluetooth in other device and make it as discoverable by other Bluetooth devices</div>
<div>
	4. Select scan for the FTP devices to check for the available Bluetooth devices around.</div>
<div>
	5. Turn on Bluetooth in some other FTP device and make sure it is discoverable by other devices.&nbsp;</div>
<div>
	6. Select &quot;scan for devices&quot; in DUT.</div>
<div>
	7. Pair to one of the scanned FTP devices .</div>
<div>
	&nbsp;8.Try to pairing more FTP devices(4-5)&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. DUT should support pairing of multiple devices.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Stress]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4991" name="BT:Check FTP functionality and transfer movie from/to the device">
	<node_order><![CDATA[1017]]></node_order>
	<externalid><![CDATA[375]]></externalid>
	<fullexternalid><![CDATA[test-375]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check FTP functionality and transfer movie of(1 or 2GB) to and from the device</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. BT h/w module should be present on the device.<br />
	3. Make sure enough space is available in the hardisk of the devices.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to settings &gt; Wireless &amp; Networks &gt; Bluetooth Settings .<br />
	2. Turn On Bluetooth.<br />
	3. Check the &quot;discoverable&quot; option.<br />
	4. Turn the Bluetooth on on another FTP device and make sure it is discoverable.<br />
	5. Scan for the Bluetooth devices around.<br />
	6. Pair with another FTP device .<br />
	7. Check the FTP functionality by transferring large files of 1GB or 2GB like movies to and from the device.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. DUT should be paired and connected with another FTP device and large files of 1 or 2 GB should be transferred to and from the DUT without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4994" name="BT:Check FTP functionality and transfer a playing media file">
	<node_order><![CDATA[1018]]></node_order>
	<externalid><![CDATA[376]]></externalid>
	<fullexternalid><![CDATA[test-376]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check FTP functionality and transfer a playing media file</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. BT h/w module should be present on the device.<br />
	3. Make sure enough space is available in the hardisk of the devices.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to settings &gt; Wireless &amp; Networks &gt; Bluetooth Settings.<br />
	2. Turn On Bluetooth.<br />
	3. Check the &quot;discoverable&quot; option.<br />
	4. Turn the Bluetooth on on another FTP device and make sure it is discoverable.<br />
	5. Scan for the Bluetooth devices around.<br />
	6. Pair with another FTP device<br />
	7. Play some audio/video files available in Gallery.<br />
	7. Check the FTP functionality by transferring the playing files to and from the device.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. DUT should be paired and connected with another FTP device and playing files should be transferred to and from the DUT without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="4997" name="BT:Check music streaming whhen BT headset powered off">
	<node_order><![CDATA[1019]]></node_order>
	<externalid><![CDATA[377]]></externalid>
	<fullexternalid><![CDATA[test-377]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify music streaming from the device when the headset is powered off.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. BT h/w module should be present on the device.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to settings &gt; Wireless &amp; Networks &gt; Bluetooth Settings.<br />
	2. Turn On Bluetooth.<br />
	3. Check the &quot;discoverable&quot; option.<br />
	4. Turn the Bluetooth on on another FTP device and make sure it is discoverable.<br />
	5. Scan for the Bluetooth devices around.<br />
	6. Pair and connect with the wireless earphone/headset.<br />
	7. Play music on phone and check if it is audible in headset.<br />
	8. Power off the headset and check if music is still played on headset.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Music will stop streaming to headset device once it is powered off.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5000" name="BT:Check FTP when BT is off">
	<node_order><![CDATA[1020]]></node_order>
	<externalid><![CDATA[378]]></externalid>
	<fullexternalid><![CDATA[test-378]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify FTP when BT is Off</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. BT h/w module should be present on the device .</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to settings &gt; Wireless &amp; Networks &gt; Bluetooth Settings.<br />
	2. Turn On Bluetooth.<br />
	3. Turn on Bluetooth in other device and make it as discoverable by other Bluetooth devices.<br />
	4. Select scan for the devices to check for the available Bluetooth devices around.<br />
	5. Turn on Bluetooth in some other device and make sure it is discoverable by other devices.<br />
	6. Select &quot;scan for devices&quot; in DUT.<br />
	7. Connect to one of the scanned devices and check whether device is connected&nbsp; and disable BT 8.Try transferring files when BT is off.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Files should not transfer when BT is in Off state.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5003" name="BT:Check handsfree functionality">
	<node_order><![CDATA[1021]]></node_order>
	<externalid><![CDATA[379]]></externalid>
	<fullexternalid><![CDATA[test-379]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check for Hands free functionality</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. BT h/w module should be present on the device.<br />
	3. Wireless headset/earphones should be present for pairing.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to settings &gt; Wireless &amp; Networks &gt; Bluetooth Settings.<br />
	2. Turn On Bluetooth.<br />
	3. Check the &quot;discoverable&quot; option.<br />
	4. Turn the Bluetooth on on another FTP device and make sure it is discoverable.<br />
	5. Scan for the Bluetooth devices around.<br />
	6. Pair and connect with the wireless earphone/headset.<br />
	7.Try to make and recieve any messenger calls using Ethernet.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. User should be able to make and recieve calls using Hands free profile.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5006" name="BT-Neg:Check BT by connecting it to unsupported device">
	<node_order><![CDATA[1022]]></node_order>
	<externalid><![CDATA[380]]></externalid>
	<fullexternalid><![CDATA[test-380]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify connecting not supported BT Device</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. BT h/w module should be present on the device .</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to settings &gt; wireless &amp; networks &gt; Bluetooth.<br />
	2. Turn On Bluetooth, Verify whether it is turned ON or not.<br />
	3. Try connecting to a non supporting device.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. BT should not connect to other device if it is not supported.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5009" name="BT-Neg:Check BT by connecting it when BT module is removed">
	<node_order><![CDATA[1023]]></node_order>
	<externalid><![CDATA[381]]></externalid>
	<fullexternalid><![CDATA[test-381]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify connecting when BT module is removed</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. BT h/w module should be removed.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to settings &gt; wireless &amp; networks &gt; Bluetooth.<br />
	2. Turn On Bluetooth. Verify whether it is turned ON or not.<br />
	3. Check if any BT devices are listed or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Other BT devices should not be listed as BT module is removed.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5012" name="BT-Str:Check A2DP headset connect and disconnect for 10 times">
	<node_order><![CDATA[1024]]></node_order>
	<externalid><![CDATA[382]]></externalid>
	<fullexternalid><![CDATA[test-382]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Connect/Disconnect A2DP headset 10 times</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. BT h/w module should be present on the board.<br />
	3. A2DP headset should be available.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to settings &gt; wireless &amp; networks &gt; Bluetooth setting.<br />
	2. Turn On Bluetooth.<br />
	3. Enable &quot;Visible to all nearby Bluetooth devices&quot; option.<br />
	4. Press on &quot;scan for devices&quot; .<br />
	5. Pair the device with A2DP Headset.<br />
	6. Unpair the device with A2DP Headset.<br />
	7. Repeat the above steps from 4 to 6 for 10 times.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. There should not be any issues while pairing and Unpaired the A2DP devices 10 times..</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5015" name="BT-Str:Check to transfer 20 audio files through FTP only">
	<node_order><![CDATA[1025]]></node_order>
	<externalid><![CDATA[383]]></externalid>
	<fullexternalid><![CDATA[test-383]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Multiple (20) audio file transfer using FTP continously</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. BT h/w module should be present on the device.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to settings &gt; Wireless &amp; Networks &gt; Bluetooth Settings .<br />
	2. Turn On Bluetooth.<br />
	3. Check the &quot;discoverable&quot; option.<br />
	4. Turn the Bluetooth on on another FTP device and make sure it is discoverable.<br />
	5. Scan for the Bluetooth devices around.<br />
	6. Pair with another FTP device .<br />
	7. Transfer multiple audio files (20) continously.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. All the files should be transferred without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5018" name="BT-Str:Check to transfer 20 video files through FTP only">
	<node_order><![CDATA[1026]]></node_order>
	<externalid><![CDATA[384]]></externalid>
	<fullexternalid><![CDATA[test-384]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Multiple (20) video file transfer using FTP continously</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. BT h/w module should be present on the device.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to settings &gt; Wireless &amp; Networks &gt; Bluetooth Settings.<br />
	2. Turn On Bluetooth.<br />
	3. Check the &quot;discoverable&quot; option.<br />
	4. Turn the Bluetooth on on another FTP device and make sure it is discoverable.<br />
	5. Scan for the Bluetooth devices around.<br />
	6. Pair with another FTP device.<br />
	7. Transfer multiple video&nbsp; files (20) continously.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. All the files should be transferred without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5021" name="BT-Str:Check to transfer 20 image or text files through FTP only">
	<node_order><![CDATA[1027]]></node_order>
	<externalid><![CDATA[385]]></externalid>
	<fullexternalid><![CDATA[test-385]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Multiple (20) images or text files transfer using FTP continously</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. BT h/w module should be present on the device .</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to settings &gt; Wireless &amp; Networks &gt; Bluetooth Settings.<br />
	2. Turn On Bluetooth.<br />
	3. Check the &quot;discoverable&quot; option.<br />
	4. Turn the Bluetooth on on another FTP device and make sure it is discoverable.<br />
	5. Scan for the Bluetooth devices around.<br />
	6. Pair with another FTP device.<br />
	7. Transfer multiple images or text files (20) continously.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. All the files should be transferred without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5024" name="BT-Conc:Check file transfer using FTP when WiFi(on/off)">
	<node_order><![CDATA[1028]]></node_order>
	<externalid><![CDATA[386]]></externalid>
	<fullexternalid><![CDATA[test-386]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Veriffy Wifi on/off during file transfer using FTP</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. BT h/w module should be present on the device .</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to settings &gt; Wireless &amp; Networks &gt; Bluetooth Settings.<br />
	2. Turn On Bluetooth.<br />
	3. Check the &quot;discoverable&quot; option.<br />
	4. Turn the Bluetooth on on another FTP device and make sure it is discoverable.<br />
	5. Scan for the Bluetooth devices around.<br />
	6. Pair with another FTP device.<br />
	7. Transfer multiple large video files continously.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 8.Enable and disable WiFi connection during file transfer.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. All the files should be transferred without any issues and WiFi enabling/disabling should not effect it.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5027" name="BT-Conc:Check browsing during file transfer">
	<node_order><![CDATA[1029]]></node_order>
	<externalid><![CDATA[387]]></externalid>
	<fullexternalid><![CDATA[test-387]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify web browsing during file transfer</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. BT h/w module should be present on the device.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to settings &gt; Wireless &amp; Networks &gt; Bluetooth Settings.<br />
	2. Turn On Bluetooth.<br />
	3. Check the &quot;discoverable&quot; option.<br />
	4. Turn the Bluetooth on on another FTP device and make sure it is discoverable.<br />
	5. Scan for the Bluetooth devices around.<br />
	6. Pair with another FTP device.<br />
	7. Transfer multiple large video files continously.<br />
	8.Open any web url and start brwsing and observe file transfer.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. All the files should be transferred without any issues and Web Browsing should not effect it.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5030" name="BT-Conc:Check audio and video playing while transfering files">
	<node_order><![CDATA[1030]]></node_order>
	<externalid><![CDATA[388]]></externalid>
	<fullexternalid><![CDATA[test-388]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify audio and video playing while file transfer using FTP</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. BT h/w module should be present on the device.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to settings &gt; Wireless &amp; Networks &gt; Bluetooth Settings.<br />
	2. Turn On Bluetooth.<br />
	3. Check the &quot;discoverable&quot; option.<br />
	4. Turn the Bluetooth on on another FTP device and make sure it is discoverable.<br />
	5. Scan for the Bluetooth devices around.<br />
	6. Pair with another FTP device.<br />
	7. Transfer multiple large video files continously.<br />
	8. Play audio and video files in the device&nbsp; and observe file transfer.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Audio and video should be played without any issues and file transferring should not effect it.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5033" name="BT-Conc:Check online audio and video streaming while transfering files">
	<node_order><![CDATA[1031]]></node_order>
	<externalid><![CDATA[389]]></externalid>
	<fullexternalid><![CDATA[test-389]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify online audio and video streaming ,while transfering&nbsp; files usig FTP</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. BT h/w module should be present on the device.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to settings &gt; Wireless &amp; Networks &gt; Bluetooth Settings.<br />
	2. Turn On Bluetooth.<br />
	3. Check the &quot;discoverable&quot; option.<br />
	4. Turn the Bluetooth on on another FTP device and make sure it is discoverable.<br />
	5. Scan for the Bluetooth devices around.<br />
	6. Pair with another FTP device.<br />
	7. Transfer multiple video files (15-20) continously.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. All the files should be transferred without any issues while online audio and video streaming is going on.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5036" name="BT-Conc:Check FTP during downloading files">
	<node_order><![CDATA[1032]]></node_order>
	<externalid><![CDATA[390]]></externalid>
	<fullexternalid><![CDATA[test-390]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify FTP while downloading files are in progress</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. BT h/w module should be present on the device.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings.<br />
	2. Enable WiFi option and verify whether WiFi option is ON or not.<br />
	3. Check whether WiFi listed all the available WiFi networks.<br />
	4. Connect to&nbsp; a WiFi network by proving proper authentication.<br />
	5. Check whether the device is able to browse any URL in Browser app.<br />
	6. Try to download any large files(1GB) from internet.<br />
	7. Go to settings &gt; Wireless &amp; Networks &gt; Bluetooth Settings.<br />
	8. Turn On Bluetooth.<br />
	9. Check the &quot;discoverable&quot; option.<br />
	10. Turn the Bluetooth on on another FTP device and make sure it is discoverable.<br />
	11. Scan for the Bluetooth devices around.<br />
	12. Pair with another FTP device.<br />
	13. Transfer multiple files continously when downloading is in progress.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. All the files should be downloaded from the website and all the files should be transferred from one FTP device to another.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5039" name="BT-Conc:Check FTP during dwnloading files and playing audio/video">
	<node_order><![CDATA[1033]]></node_order>
	<externalid><![CDATA[391]]></externalid>
	<fullexternalid><![CDATA[test-391]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify FTP,while downloading files are in progress and Audio/Video is played</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. BT h/w module should be present on the device.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings.<br />
	2. Enable WiFi option and verify whether WiFi option is ON or not.<br />
	3. Check whether WiFi listed all the available WiFi networks.<br />
	4. Connect to&nbsp; a WiFi network by proving proper authentication.<br />
	5. Check whether the device is able to browse any URL in Browser app.<br />
	6. Try to download any large files(1GB) from internet.<br />
	7. Go to settings &gt; Wireless &amp; Networks &gt; Bluetooth Settings.<br />
	8. Turn On Bluetooth.<br />
	9. Check the &quot;discoverable&quot; option.<br />
	10. Turn the Bluetooth on on another FTP device and make sure it is discoverable.<br />
	11. Scan for the Bluetooth devices around.<br />
	12. Pair with another FTP device.<br />
	13. Transfer multiple files continously when downloading is in progress.<br />
	14. Play some audio/video files available in Gallery.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. All the files should be downloaded from the website and all the files should be transferred from one FTP device to another.<br />
	2. DUT should play audio/ video songs simultaneously.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5042" name="BT-Conc:Check BT and WiFi on/off">
	<node_order><![CDATA[1034]]></node_order>
	<externalid><![CDATA[392]]></externalid>
	<fullexternalid><![CDATA[test-392]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify BT and Wifi On/Off functionality</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. BT h/w module should be present on the device.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.Go to settings &gt; wireless &amp; networks &gt; Bluetooth.<br />
	2. Turn On Bluetooth. Verify whether it is turned ON or not.<br />
	3. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings.<br />
	4. Enable WiFi option and verify whether WiFi option is ON or not.<br />
	5. Turn OFF Bluetooth and WiFi. Check whether BT and Wifi is turned Off.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. WiFi should be ON when WiFi option is checked and WiFi should be off when the WiFi option is unchecked.<br />
	2. BT should be turned ON when enabling the BT option and it should be turned OFF when the BT option is unchecked.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5045" name="BT-Conc:Check FTP when alarm is set">
	<node_order><![CDATA[1035]]></node_order>
	<externalid><![CDATA[393]]></externalid>
	<fullexternalid><![CDATA[test-393]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify FTP functionlaity when alarm is set</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. BT h/w module should be present on the device.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to settings and set an alarm in 3 minutes<br />
	2. Go to settings &gt; Wireless &amp; Networks &gt; Bluetooth Settings.<br />
	3. Turn On Bluetooth.<br />
	4. Check the &quot;discoverable&quot; option.<br />
	5. Turn the Bluetooth on on another FTP device and make sure it is discoverable.<br />
	6. Scan for the Bluetooth devices around.<br />
	7. Pair with another FTP device.<br />
	8. Transfer multiple files continously for 3 minutes or more and check whether files are getting transferred without getting effected by alarm.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. All the files should be transferred without getting effected from alarms.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5048" name="BT-Str:Check connect/disconnect of HID Keyboard 10 times">
	<node_order><![CDATA[1036]]></node_order>
	<externalid><![CDATA[505]]></externalid>
	<fullexternalid><![CDATA[test-505]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Connect/Disconnect HID Keyboard 10 times&nbsp;</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. BT h/w module should be present on the board.</div>
<div>
	3. Bluetooth wireless HID (mouse or keyboard)</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to settings &gt; wireless &amp; networks &gt; Bluetooth setting</div>
<div>
	2. Turn On Bluetooth.</div>
<div>
	3. Enable &quot;Visible to all nearby Bluetooth devices&quot; option.</div>
<div>
	4. Press on &quot;scan for devices&quot; .</div>
<div>
	5. Pair the device with HID Keyboard.</div>
<div>
	6. Unpair the device with HID Keyboard.</div>
<div>
	7. Repeat the above steps from 4 to 6 for 10 times..</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. There should not be any issues while pairing and Unpaired the HID devices 10 times..</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="5051" name="Airplane mode" >
<node_order><![CDATA[6]]></node_order>
<details><![CDATA[<p>
	Create test suite for Airplane mode</p>
]]></details> 

<testcase internalid="5052" name="Airplane mode:Check Airplane mode enable/disable functionality">
	<node_order><![CDATA[1000]]></node_order>
	<externalid><![CDATA[394]]></externalid>
	<fullexternalid><![CDATA[test-394]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether system is able to enable and disable Airplane mode or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.<br />
	4. Connected router should have Internet.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Goto settings.<br />
	2. Goto wireless &amp; network settings &rarr; More.<br />
	3. Check whether system is able to enable the Airplane option or not. And also check whether able to disable the Airplane option or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Should be able to enable/disable the Airplane option.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_airplane_on_off.TestAirplaneOnOff]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5055" name="Airplane mode:Check Airplane mode functionality when WiFi is on">
	<node_order><![CDATA[1001]]></node_order>
	<externalid><![CDATA[395]]></externalid>
	<fullexternalid><![CDATA[test-395]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check Ariplane mode functionality When WIFI is in enabled state</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.<br />
	4. Connected router should have Internet.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings.<br />
	2. Enable WiFi option and verify whether WiFi option is ON or not.<br />
	3. Check whether WiFi listed all the available WiFi networks.<br />
	4. Go to Settings-&gt;More-&gt;Aeroplane mode and enable aeroplane mode.<br />
	5. Observe the WIFI connection.<br />
	6. Go to Settings-&gt;More-&gt;Aeroplane mode and disable&nbsp; aeroplane mode.<br />
	7. Check whether WIFI is re-connected again or not.&nbsp;&nbsp;&nbsp;&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. WiFi should be off when Airplane mode is enabled and WiFi should be reconnected after Airplane mode option is disabled.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_airplane_on_of_wifi_enabled.Testairplane_on_off_Wifi_enabled]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5058" name="Airplane mode:Check Airplane mode functionality when BT is on">
	<node_order><![CDATA[1002]]></node_order>
	<externalid><![CDATA[396]]></externalid>
	<fullexternalid><![CDATA[test-396]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check Ariplane mode functionality When BT is in enabled state.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.<br />
	4. Connected router should have Internet.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to settings &gt; wireless &amp; networks &gt; Bluetooth.<br />
	2. Turn On Bluetooth. Verify whether it is turned ON or not.<br />
	3. Go to Settings-&gt;More-&gt;Aeroplane mode and enable aeroplane mode .<br />
	4. Check BT is disabled or not.<br />
	5. Go to Settings-&gt;More-&gt;Aeroplane mode and disable aeroplane mode.<br />
	6. Check whether BT is re-enabled or not.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. BT should be off when Airplane mode is enabled and BT should be re-enabled after Airplane mode option is disabled.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_airplane_on_of_BT_enabled.Testairplane_on_BT_enabled]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5061" name="Airplane mode-Str:Check Airplane mode enable/disable functionality for 25 times">
	<node_order><![CDATA[1003]]></node_order>
	<externalid><![CDATA[397]]></externalid>
	<fullexternalid><![CDATA[test-397]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether airplane mode enable/disable 25 times continously</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.<br />
	4. Connected router should have Internet.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Goto settings.<br />
	2. Goto wireless &amp; network settings &rarr; More.<br />
	3. Check whether system is able to enable the Airplane option or not.And also check whether able to disable the Airplane option or not.<br />
	4. Try enabling and disabling multiple times(25 times) .</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Should be able to enable/disable the Airplane option for each iteration.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_airplane_on_off_25_times.TestAirplaneOnOff25times]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5064" name="Airplane mode-Str:Check Airplane mode after reboot for 25 times">
	<node_order><![CDATA[1004]]></node_order>
	<externalid><![CDATA[398]]></externalid>
	<fullexternalid><![CDATA[test-398]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify airplane mode functionality after reboot 25 times</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.<br />
	4. Connected router should have Internet.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Goto settings.<br />
	2. Goto wireless &amp; network settings &rarr; More.<br />
	3. Check whether system is able to enable the Airplane option or not.<br />
	4. Reboot the device 25 times and check whether Airplane mode is enabled or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Airplane mode should be enabled after booting the device each time.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_airplane_reboot_25times.TestAirplanereboot25times]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5067" name="Airplane mode-Conc:Check able to turn-on BT when Airplane option is in enabled state">
	<node_order><![CDATA[1005]]></node_order>
	<externalid><![CDATA[399]]></externalid>
	<fullexternalid><![CDATA[test-399]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	When the system in Air plane mode, check whether BT is able to turned ON/OFF or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. BT h/w module should be present on the device.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.&nbsp; Go-to settings - &gt; Wireless &amp; Networks &rarr; More &rarr; enable the Air plane mode option.<br />
	2. Now the system is in Airplane mode.<br />
	3. Goto &rarr; Settings &rarr; select the Bluetooth option and check whether BT option is enabled or not..<br />
	4. Un-select the Bluetooth option and check whether BT option is disabled or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. When the system in Airplane mode, and after click on Bluetooth option, the BT option should be enabled.<br />
	2. When un-select the Bluetooth option, the BT option should be disabled.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_bt_on_off_when_airplane_enabled.TestBtOnOffAirplane_enabled]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5070" name="Airplane mode-Conc:Check able to turn-on WiFi when Airplane option is in enabled state">
	<node_order><![CDATA[1006]]></node_order>
	<externalid><![CDATA[400]]></externalid>
	<fullexternalid><![CDATA[test-400]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	When the system in Air plane mode, check whether Wi-Fi is able to turned ON/OFF or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.<br />
	4. Connected router should have Internet.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;More-&gt;Aeroplane mode and enable aeroplane mode.<br />
	2. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings.<br />
	3. Enable WiFi option and verify whether WiFi option is ON or not.<br />
	4. Check whether WiFi listed all the available WiFi networks<br />
	5. Connect to&nbsp; a WiFi network by proving proper authentication.<br />
	6. Check whether the device is able to browse any URL in Browser app.&nbsp;&nbsp;&nbsp;&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. WIFI should be ON , connected to the network and should be able to browse URLs even when aeroplane mode is enabled.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_wifi_on_off_airplane_enabled.TestWifiOnOffAirplaneEnabled]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5073" name="Airplane mode-Conc:Check Audio/video streaming using ethernet when Airplane mode is on">
	<node_order><![CDATA[1007]]></node_order>
	<externalid><![CDATA[401]]></externalid>
	<fullexternalid><![CDATA[test-401]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify when airplane mode is enabled, online audio/video streaming is working using ethernet</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.<br />
	4. Connected router should have Internet.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;More-&gt;Aeroplane mode and enable aeroplane mode.<br />
	2. Try Web browsing and play audio/video streams online using ethernet connection.<br />
	3. Check whether audio/video online streaming is working when airplane mode is enabled.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Audio/video online streaming should be working using ethernet even when airplane mode is enabled.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_airplane_video_streaming.TestAirplaneVideostreaming]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5076" name="Airplane mode-Conc:Check Airplane mode functionality when BT and WiFi connected to other device">
	<node_order><![CDATA[1008]]></node_order>
	<externalid><![CDATA[402]]></externalid>
	<fullexternalid><![CDATA[test-402]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Airplane mode On/Off continously when BT is connected to other device and WIFi is connected to network</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.<br />
	4. Connected router should have Internet.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings.<br />
	2. Enable WiFi option and verify whether WiFi option is ON or not.<br />
	3. Check whether WiFi listed all the available WiFi networks.<br />
	4. Go to settings &gt; wireless &amp; networks &gt; Bluetooth.<br />
	5. Turn On Bluetooth. Verify whether it is turned ON or not.<br />
	6. Go to Settings-&gt;More-&gt;Aeroplane mode and enable aeroplane mode.<br />
	7. Observe the WIFI and BT connection.<br />
	8. Go to Settings-&gt;More-&gt;Aeroplane mode and disable&nbsp; aeroplane mode.<br />
	9. Check whether WIFI and BT is re-connected again or not.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. WiFi and BT should be off when Airplane mode is enabled and WiFi and BT should be reconnected after Airplane mode option is disabled.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_airplane_on_of_BT_wifi_enabled.Testairplane_on_BT_wifi_enabled]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5079" name="Airplane mode-Conc:Check Airplane mode functionality with USB">
	<node_order><![CDATA[1009]]></node_order>
	<externalid><![CDATA[403]]></externalid>
	<fullexternalid><![CDATA[test-403]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Airplane mode functionality with USB</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.<br />
	4. Connected router should have Internet.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Goto settings.<br />
	2. Goto wireless &amp; network settings &rarr; More.<br />
	3. Check whether system is able to enable the Airplane option or not.<br />
	4. Connect and disconnect USB and check whether Airplane mode is still enabled.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Airplane mode should not be effected by USB connection/disconnection.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5082" name="Airplane mode-Conc:Check Airplane mode functionality with suspend and resume">
	<node_order><![CDATA[1010]]></node_order>
	<externalid><![CDATA[404]]></externalid>
	<fullexternalid><![CDATA[test-404]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Airplane mode functionality with Suspend and resume</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.<br />
	4. Connected router should have Internet.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Goto settings.<br />
	2. Goto wireless &amp; network settings &rarr; More.<br />
	3. Check whether system is able to enable the Airplane option or not.<br />
	4. Disable the stay awake option in developer options.<br />
	5. Set the wake time in display to 15 seconds.<br />
	6. Suspend and resume the DUT then check Airplane mode.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Airplane mode should be enabled after suspend and resume.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5085" name="Airplane mode-Conc:Check Airplane mode functionality when alarm is set">
	<node_order><![CDATA[1011]]></node_order>
	<externalid><![CDATA[405]]></externalid>
	<fullexternalid><![CDATA[test-405]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Airplane mode functionality when alarm is set</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Wi-Fi functionality should be supported in the build.<br />
	3. WiFi module should be present on device.<br />
	4. Connected router should have Internet.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Alarms and set an alarm in 3 minutes.<br />
	2. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings.<br />
	3. Enable WiFi option and verify whether WiFi option is ON or not.<br />
	4. Check whether WiFi listed all the available WiFi networks.<br />
	5. Go to Settings-&gt;More-&gt;Aeroplane mode and enable aeroplane mode.<br />
	6. Observe the WIFI connection.<br />
	7. Wait for 3 minutes and observe.<br />
	8.Check if airplane mode is enabled and wifi is still disabled without being effected by alarms.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Airplane mode should not be effected by alarms.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="5088" name="Multimedia" >
<node_order><![CDATA[7]]></node_order>
<details><![CDATA[<p>
	Create test suite for Multimedia module</p>
]]></details> 
<testsuite id="5089" name="Audio" >
<node_order><![CDATA[1]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="5090" name="Multimedia:Check Audeo decode functionality of .mp3 format">
	<node_order><![CDATA[0]]></node_order>
	<externalid><![CDATA[53]]></externalid>
	<fullexternalid><![CDATA[test-53]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<div>
	Verify whether the DUT is supporting the Playback of MP3(.mp3) Audio format with the following constant and variable bit rates:</div>
<div>
	a) Mono 8 Kbps, 128kbps and&nbsp; 320kbps CBR(constant bit rates)&nbsp;</div>
<div>
	b) Stereo 8 Kbps,128kbps and 320kbps CBR(constant bit rates)&nbsp;</div>
<div>
	c) Mono and stereo VBR(variable bit rate)</div>
<div>
	&nbsp;</div>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Boot DUT up to Android Main menu.</div>
<div>
	2. Should be available the following MP3(.mp3) audio codec format files</div>
<div>
	&nbsp;a) Mono 8 Kbps,&nbsp; 128kbps and 320kbps CBR(constant bit rates)&nbsp;</div>
<div>
	&nbsp;b) Stereo 8 Kbps,&nbsp; 128kbps and&nbsp; 320kbps CBR(constant bit rates)&nbsp;</div>
<div>
	c) Mono and stereo VBR(variable bit rate)</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Copy the MP3(.mp3) Audio decode format files with the CBR of Mono 8 Kbps, 128kbps and 320kbps into the device.</div>
<div>
	2. Open the Music Apk.</div>
<div>
	3. Select and Playback the above copied mono channel with various bit rate files from the device and Check whether DUT is playing mono files without any issues or not.</div>
<div>
	4. Copy the MP3(.mp3) Audio decode format file with the CBR of Stereo 8 Kbps, 128kbps and 320kbps into the device.</div>
<div>
	5. Open the Music Apk.&nbsp;</div>
<div>
	6. Select and playback the above copied Stereo channel with various bit rate files from the device and Check whether the DUT&nbsp; is playing stereo files without any issues or not.</div>
<div>
	7. Copy the downloaded MP3(.mp3) Audio decode format files with the VBR of Mono and stereo into the device.</div>
<div>
	8. Open the Music Apk.</div>
<div>
	9. Select and Playback the above copied mono and stereo channel VBR files from the device and Check whether DUT is playing mono and stereo files without any issues or not.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1.The DUT should support the Playback of MP3(.mp3) Audio format with the CBR of Mono 8kbps, 128kbps and 320Kbps files without any issues.</div>
<div>
	2.The DUT should support the Playback of MP3(.mp3) Audio format with the CBR of Stereo 8kbps, 128kbps and 320Kbps files without any issues.</div>
<div>
	3.The DUT should support the Playback of MP3(.mp3) Audio format with the VBR of Mono &amp; Stereo files without any issues.</div>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_audio_mp3_diff_channels.TestAudioMp3Regression]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5093" name="Multimedia:Check Audio decode functionality of .wav format">
	<node_order><![CDATA[1009]]></node_order>
	<externalid><![CDATA[54]]></externalid>
	<fullexternalid><![CDATA[test-54]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<div>
	Check the DUT is supporting the playback of WAVE(.wav) Audio format with the following sample rates or not.</div>
<div>
	a).8-bit linear PCM with sampling rate 8000HZ.</div>
<div>
	b).8-bit linear PCM with sampling rate 16000HZ.</div>
<div>
	c).8-bit linear PCM with sampling rate 44100HZ.</div>
<div>
	d).8-bit linear PCM with sampling rate 48000HZ.</div>
<div>
	e).16-bit linear PCM with sampling rate 8000HZ</div>
<div>
	f).16-bit linear PCM with sampling rate 16000HZ.</div>
<div>
	g).16-bit linear PCM with sampling rate 44100HZ.</div>
<div>
	h).16-bit linear PCM with sampling rate 48000HZ.</div>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android Main menu.</div>
<div>
	2. Should be available the 8-bit PCM with sampling rates of 8KHZ, 16KHZ,44.1KHZ and 48KHZ PCM/WAVE audio codec files for testing.</div>
<div>
	3.Should have the 16-bit PCM with sampling rates of 8KHZ, 16KHZ,44.1KHZ and 48KHZ PCM/WAVE audio codec files ready.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Copy the 8-bit linear PCM with Sampling rates of 8000 Hz, 16000 Hz, 44100 Hz and 48000 Hz WAVE(.wav) Audio decode format files into the device.&nbsp;&nbsp;</div>
<div>
	2. Open the Music Apk.</div>
<div>
	3. Select and Playback the above copied files from the device and Check whether DUT is playing without any issues or not.</div>
<div>
	4. Copy the 16-bit linear PCM with Sampling rates of 8000 Hz, 16000 Hz, 44100 Hz and 48000 Hz WAVE(.wav) Audio decode format files into the device.</div>
<div>
	5. Open the Music Apk.</div>
<div>
	6. Playback the above copied files from the device and Check whether DUT is playing without any issues or not.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	<div>
		1. The DUT should support the Playback of 8-bit linear PCM with Sampling rates at 8000 Hz, 16000 Hz, 44100 Hz and 48000 Hz WAVE(.wav) Audio decode format files without any issues.</div>
	<div>
		2. The DUT should support the Playback of 16-bit linear PCM with Sampling rates at 8000 Hz, 16000 Hz, 44100 Hz and 48000 Hz WAVE(.wav) Audio decode format files without any issues.</div>
</div>
<p>
	&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_audio_wav_diff_sample_rates.TestAudioWavRegression]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5096" name="Multimedia:Check playback of  Audio streaming">
	<node_order><![CDATA[1025]]></node_order>
	<externalid><![CDATA[121]]></externalid>
	<fullexternalid><![CDATA[test-121]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether DUT is supporting the playback of&nbsp; Audio streaming or not</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu<br />
	2. DUT should have the internet facility (Wi-Fi /Ethernet)</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open the Browser Apk,<br />
	2. Open the &ldquo;https://gaana.com/&rdquo; URL.<br />
	3. Play any Audio.<br />
	4. Check whether the Audio is playing without any issues or not</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	The DUT&nbsp; should be able to play streaming Audio with out any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_audio_streaming.TestAudio_streaming]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5099" name="Multimedia:Check Audio Play and Stop functionality">
	<node_order><![CDATA[1028]]></node_order>
	<externalid><![CDATA[124]]></externalid>
	<fullexternalid><![CDATA[test-124]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Audio file Stop/Play functionality</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1.DUT should boot up to Android Main menu<br />
	2. Build should support playback of Audio .</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open Music app<br />
	2. Play any audio file<br />
	3. Stop the file while Playback.<br />
	4. Play the file after stopping it.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Audio Should be heard without any distortions or corruptions.<br />
	2. The file should be Stop when pressing on Stop button<br />
	3. while playing the Audio and The file should be played after unstopped.<br />
	4. The file should be played from the specified position where it is Stopped.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5102" name="Multimedia:Check Audio Progress bar functionality">
	<node_order><![CDATA[1029]]></node_order>
	<externalid><![CDATA[125]]></externalid>
	<fullexternalid><![CDATA[test-125]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Audio Progress bar functionality</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1.DUT should boot up to Android Main menu<br />
	2. Build should support playback of Audio .</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Launch Music app, and Play any audio file<br />
	2. Check whether the sound is clear without any distortions or corruptions<br />
	3. Try to playback the audio from specific position.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.&nbsp; The audio should be heard without any distortions or corruptions<br />
	2. Should be able to playback the audio from specified position.<br />
	3. Progress bar movement is in sync with the time.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_audio_progressbar.TestAudioProgressbarFunction]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5105" name="Multimedia:Check Audio recording functionality">
	<node_order><![CDATA[1032]]></node_order>
	<externalid><![CDATA[128]]></externalid>
	<fullexternalid><![CDATA[test-128]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Audio Encoding functionality</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1.DUT should boot up to Android Main menu<br />
	2. Build should support playback of Audio .</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open Sound Recorder app and start for recording.<br />
	2.Stop recording and save the recorded file into device.<br />
	3. Now play the Recorded Audio file and check recorded audio file is playing fine or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Should be able to record the audio and the recorded Audio should not have any distortions.<br />
	2. Recording should stop without any problem and file should save into device.<br />
	3. Should be able to playback the recorded audio and playback audio time is same as while recording, Recorded file is equal to the sound while recording</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5108" name="Audio:Check Audio play and pause functionality">
	<node_order><![CDATA[1033]]></node_order>
	<externalid><![CDATA[230]]></externalid>
	<fullexternalid><![CDATA[test-230]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting the audio play and pause functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu<br />
	2. Build should support playback of Audio .</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy the supported different audio streams to DUT.<br />
	2. Open Music app, playback any audio file.<br />
	3. Now try to pause the audio playback.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. DUT should be able to playback the stream without any issues.<br />
	2. Audio Should be heard without any distortions or corruptions and noise added<br />
	3. Audio file should be paused when pause button is pressed and it should be resumed after play again where it paused.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_audio_play_pause.TestAudioPlayPause]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5111" name="Audio:Check Audio suspend and resume functionality">
	<node_order><![CDATA[1034]]></node_order>
	<externalid><![CDATA[231]]></externalid>
	<fullexternalid><![CDATA[test-231]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting the audio suspend and resume functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu<br />
	2. Build should support playback of Audio .</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy the supported different audio streams to DUT.<br />
	2. Open Music app, playback any audio file.<br />
	3. Now try to suspend&nbsp; the audio playback by setting sleep sound for some time.<br />
	4. After DUT went into sleep mode try to invoke the DUT by using any key in keyboard or mouse.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. DUT should be able to playback the stream without any issues.<br />
	2. Audio Should be heard without any distortions or corruptions and noise added<br />
	3. Audio file should be&nbsp; continued to play even when we suspend or resume.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5114" name="Audio:Check Audio next and previous functionality">
	<node_order><![CDATA[1035]]></node_order>
	<externalid><![CDATA[232]]></externalid>
	<fullexternalid><![CDATA[test-232]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the audio next and previous functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu<br />
	2. Build should support playback of Audio .</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open the music app.<br />
	2. Playback any audio file.<br />
	3. Click on next button.<br />
	4. Click on previous button.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The audio should be heard without any distortions or corruptions.<br />
	2. While we press the next button it should play the next song immediately.<br />
	3. when&nbsp; we press the previous button it should&nbsp; play the previous song without any delay.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_audio_next_previous.TestAudioNextandPreviousFunction]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5117" name="Audio:Check Audio details functionality">
	<node_order><![CDATA[1036]]></node_order>
	<externalid><![CDATA[233]]></externalid>
	<fullexternalid><![CDATA[test-233]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting the audio details functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu<br />
	2. Build should support playback of Audio .</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open the music app.<br />
	2. Playback any audio file.<br />
	3. Go to menu and click on details option.&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. It should display the complete details such as storage,codec etc., without any issue.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5120" name="Audio:Check Audio shuffle functionality">
	<node_order><![CDATA[1037]]></node_order>
	<externalid><![CDATA[234]]></externalid>
	<fullexternalid><![CDATA[test-234]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting the audio shuffle functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu<br />
	2. Build should support playback of Audio .</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open the music app.<br />
	2. Set the shuffle mode in DUT.<br />
	3. Play any audio file.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. After the completion of current song it should not play the just next song.<br />
	2. It should play the song which is far next song from the previous one.<br />
	3. When we press the next or previous option it should play the other song than the just next or just previous songs.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_audio_shuffle.TestAudioShuffleFunction]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5123" name="Audio:Check Audio repeat functionality">
	<node_order><![CDATA[1038]]></node_order>
	<externalid><![CDATA[235]]></externalid>
	<fullexternalid><![CDATA[test-235]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting the audio repeat(Repeat current song,Repeat all songs)functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu<br />
	2. Build should support playback of Audio .</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open the music app.<br />
	2. Set repeat current song option.<br />
	3. Play any audio file.<br />
	4. Now,set repeat all songs option.<br />
	5. Play any audio file.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. When we set the repeat current song it will repeat that song until we play another song or reset that option.<br />
	2. When we set repeat all songs option,first it will play all the songs in the respective folder.<br />
	3. After that it will repeat all the songs in that respective folder.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_audio_repeat.TestAudioRepeatFunction]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5126" name="Audio:Check Audio volume functionality">
	<node_order><![CDATA[1039]]></node_order>
	<externalid><![CDATA[236]]></externalid>
	<fullexternalid><![CDATA[test-236]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the audio volume(Up/Down) functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu<br />
	2. Build should support playback of Audio .</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open Music app.<br />
	2. Play any audio file.<br />
	3. Vary the volume by&nbsp; go to -&gt;settings-&gt;sound-&gt;Media volume-&gt;by increasing and decreasing.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. While increasing or decreasing the volume the song should be played&nbsp; according to the volume without any distortions.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_audio_volume_up_and_down.TestVolume_Up_Down]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5129" name="Audio:Check device playing large audio files functionality">
	<node_order><![CDATA[1040]]></node_order>
	<externalid><![CDATA[237]]></externalid>
	<fullexternalid><![CDATA[test-237]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check&nbsp; the DUT is able to play&nbsp; the large audio files or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu<br />
	2. Build should support playback of Audio .<br />
	3. The DUT should support playback of large audio files also.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy large duration&nbsp; audio files to DUT.<br />
	2. Open music app.<br />
	3. Play the large audio files.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The large audio file should be played without any distortions or corruptions.<br />
	2. The file should be played upto its duration.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5132" name="Audio:Check Audio playing through USB functionality">
	<node_order><![CDATA[1041]]></node_order>
	<externalid><![CDATA[238]]></externalid>
	<fullexternalid><![CDATA[test-238]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the audio playing through USB&nbsp; functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Audio.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy some files into USB.<br />
	2. Connect the USB to the DUT.<br />
	3. Play any audio file which is in USB only.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The DUT should detect USB without any issues.<br />
	2. The file should be played and it should be audible without any glitches and other disturbances.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_audio_play_from_usb_storage.TestAudioPlayFromUsbStorage]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5135" name="Audio:Check Audio to display error message functionality">
	<node_order><![CDATA[1042]]></node_order>
	<externalid><![CDATA[239]]></externalid>
	<fullexternalid><![CDATA[test-239]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; to display an error message while playing the corrupted files/invalid formats or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu<br />
	2. Build should support playback of Audio .</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open Music app.<br />
	2. Copy some corrupted and invalid files into DUT.<br />
	3. Play above copied corrupted file and invalid files.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. When we try to play a corrpted file it should show an error message that &ldquo;can&#39;t play the file&rdquo;.<br />
	2. When we are trying to play an invalid file it should show an error message &ldquo;file format unsupported&rdquo;.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_audio_corrupted_file.TestAudioCorruptedFile]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5138" name="Audio:Check Audio playing through USB headset functionality">
	<node_order><![CDATA[1044]]></node_order>
	<externalid><![CDATA[241]]></externalid>
	<fullexternalid><![CDATA[test-241]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the audio playing through USB headset(plugin/plugout) functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu<br />
	2. Build should support playback of Audio .</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the USB headset to the target device and check whether USB headset is detected or not.<br />
	2. Open&nbsp; music player app and play any audio file.<br />
	3. After some time&nbsp; Plug-out the headset.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Target device&nbsp; should&nbsp; detect the connected USB headset when plugged-in.<br />
	2. The file should be heared through USB headset without any glitches.<br />
	3. when we plugout the headset the audio should be stopped.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5141" name="Audio:Check Audio playing through audio jack functionality">
	<node_order><![CDATA[1045]]></node_order>
	<externalid><![CDATA[242]]></externalid>
	<fullexternalid><![CDATA[test-242]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the audio playing through Audio jack(plugin/plugout) functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Audio.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the&nbsp; headset to the target device and check whether&nbsp; headset is detected or not.<br />
	2. Open&nbsp; music player app and play any audio file.<br />
	3. After some time&nbsp; Plug-out the headset.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Target device&nbsp; should&nbsp; detect the connected&nbsp; headset when plugged-in.<br />
	2. The file should be heared through headset without any glitches.<br />
	3. When we plugout the headset the audio should be stopped playing through headset.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5144" name="Audio:Check Audio playing through BT headset functionality">
	<node_order><![CDATA[1046]]></node_order>
	<externalid><![CDATA[243]]></externalid>
	<fullexternalid><![CDATA[test-243]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the audio playing through BT headset(plugin/plugout) functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Audio.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Turn on the bluetooth.<br />
	2. Pair the bluetooth headset with DUT.<br />
	3. Open music app and play any audio file.<br />
	4. Disconnect the bluetooth with DUT.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. DUT&nbsp; should pair with&nbsp; bluetooth headset without any issues.<br />
	2. Audio played should be audible through bluetooth headset.<br />
	3. When bluetooth headset is disconnected from the DUT the audio will be continued to play through speakers.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5147" name="Audio:Check Audio playing using speakers">
	<node_order><![CDATA[1047]]></node_order>
	<externalid><![CDATA[244]]></externalid>
	<fullexternalid><![CDATA[test-244]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; Audio Out through Speakers</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Audio.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect Audio Out to wired headset.<br />
	2. Copy supported audio files into device.<br />
	3. Open &quot;Music&quot; app.<br />
	4. Play the music files - check audio on Wired headset.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The audio should be audible througgh the speakers without any glitches and disturbances.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5150" name="Audio:Check Audio extension changing functionality">
	<node_order><![CDATA[1048]]></node_order>
	<externalid><![CDATA[245]]></externalid>
	<fullexternalid><![CDATA[test-245]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check&nbsp; the DUT is supporting to change file extensions/names such as MP3 to AMR or vice versa or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Audio.<br />
	3. DUT should contain file manager APK.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open File manager app.<br />
	2. Right click on any one of the audio file.<br />
	3. Click on rename option.<br />
	4. Change the extension of file as you want.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The extension/name of the file should change successfully.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5153" name="Audio:Check Audio playback of pushed file">
	<node_order><![CDATA[1049]]></node_order>
	<externalid><![CDATA[246]]></externalid>
	<fullexternalid><![CDATA[test-246]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting to play the audio file which is pushed into DUT through adb push command</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Audio.<br />
	3. The DUT should have ethernet connection.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the device to Ethernet IP address using the command &ldquo;adb connect &lt;IP address of the Ethernet cable&gt;.<br />
	2. Enter the &ldquo;adb push source path Destination path&rdquo; command in PC terminal.<br />
	3. Check whether file is copying into the DUT or not.<br />
	4. Open Music app.<br />
	5. Then, search the pushed file.<br />
	6. Play the file.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The audio file&nbsp; which has pushed into the DUT should play without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_audio_push_play.TestAudioPush_Play]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5156" name="Audio:Check Audio playing after USB plugged out">
	<node_order><![CDATA[1050]]></node_order>
	<externalid><![CDATA[247]]></externalid>
	<fullexternalid><![CDATA[test-247]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting to play the audio file through USB even after it is plugged out</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Audio.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the USB to the DUT.<br />
	2. Go to Files.<br />
	3. Play any audio file.<br />
	4. After sometime plugout the USB.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The DUT should detect the USB successfully.<br />
	2. The file should be heared clearly without any issues.<br />
	3. While we plug out the USB the file should stop playing showing message can&#39;t play the audio.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5159" name="Audio-Str:Check the Audio playbck for 25 times">
	<node_order><![CDATA[1051]]></node_order>
	<externalid><![CDATA[248]]></externalid>
	<fullexternalid><![CDATA[test-248]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting playing and recording 25 audio records continuously&nbsp; or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Audio.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open Sound Recorder app and start for recording.<br />
	2. Stop recording and save the recorded file into device.<br />
	3. Try to record 25 audio clips.<br />
	4. Now play the Recorded Audio files and check recorded audio files are&nbsp; playing fine or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Should be able to record all the audio files&nbsp; and the recorded Audios&nbsp; should not have any distortions.<br />
	2. Recording should stop without any problem and files should save into device.<br />
	3. Should be able to playback the recorded audios and playback audio time is same as while recording, Recorded files must synchronize&nbsp; to the sound while recording</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5162" name="Audio-Str:Check Audio playing of 100 files">
	<node_order><![CDATA[1052]]></node_order>
	<externalid><![CDATA[249]]></externalid>
	<fullexternalid><![CDATA[test-249]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the audio playing 100 songs continuously or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Audio.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy 100 audio files into DUT.<br />
	2. Open Music app.<br />
	3. Playback any one of the audio file .</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. All the copied 100 songs should play one after another without any issues.<br />
	2. The files should be Stop when pressing on Stop button only.<br />
	3. As long as we didnot stop the songs it should play songs continuously without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5165" name="Audio-Str:Check plugin and plugout of any headset 25 times">
	<node_order><![CDATA[1053]]></node_order>
	<externalid><![CDATA[250]]></externalid>
	<fullexternalid><![CDATA[test-250]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; Plug-in and Plug-out any one of(BT,USB,Audio jack)&nbsp; headset for 25 times functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Audio.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the Audio jack to the DUT.<br />
	2. Open music app and play an audio file.<br />
	3. Now,remove the audio jack and connect the USB headset.<br />
	4. After some time, turn on the bluetooth.<br />
	5. Pair the DUT with BT headset and then remove USB headset.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. DUT&nbsp; should be able to detect the connected headset whether it is Audio jack or BT headset or USB headset.<br />
	2. While switching from one type of headset to another for ex:while listening through audio jack the audio file should be heared without any disturbances, while we remove audio headset the audio file should not stop playing and immediately after connecting USB headset the audio file should continue to play, while pairing the DUT with BT headset it should be paired without any issues and while we remove USB headset we should not be able to listen the audio,we should select bluetooth headset to listen the audio file then only the we will hear the audio.<br />
	3. Even though we repeat this procedure the audio file should be played as described above without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5168" name="Audio-Str:Check Audio playing of 25 invalid files">
	<node_order><![CDATA[1054]]></node_order>
	<externalid><![CDATA[251]]></externalid>
	<fullexternalid><![CDATA[test-251]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting to play 25 invalid or corrupted files continuously</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Audio.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open Music app.<br />
	2. Copy 25 corrupted and 25 invalid files into DUT.<br />
	3. Play above copied corrupted files and invalid files.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. When we try to play a corrupted file it should show an error message that &ldquo;can&#39;t play the file&rdquo;.<br />
	2. When we are trying to play an invalid file it should show an error message &ldquo;file format unsupported&rdquo;.<br />
	3. As long as we play any number of files,for ex:25 files the DUT should show the same message every time without any clashes.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5171" name="Audio-Conc:Check Audio play while browsing">
	<node_order><![CDATA[1055]]></node_order>
	<externalid><![CDATA[252]]></externalid>
	<fullexternalid><![CDATA[test-252]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the browsing while playing an audio file.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot upto android main menu.<br />
	2. The DUT should support playback of audio file.<br />
	3. The DUT should have WiFi or Ethernet connection.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy audio files into device.<br />
	2. Open music app and play any audio file.<br />
	3. Open the browser and search for anything like www.google.com.&nbsp;&nbsp;&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The audio should be heard without any distortions or corruptions even though browsing is going on.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_browsing_audio_play.TestBrowsingWhilePlayingAudio]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5174" name="Audio-Conc:Check Audio play while playing video">
	<node_order><![CDATA[1056]]></node_order>
	<externalid><![CDATA[253]]></externalid>
	<fullexternalid><![CDATA[test-253]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; to play video while playing an audio file.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot upto android main menu.<br />
	2. The DUT should support playback of audio file and it should contain Mxplayer Apk.<br />
	3. The DUT should have WiFi or Ethernet connection.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy audio and video files into device.<br />
	2. Open music app and play any audio file.<br />
	3. Open Mxplayer and try to play video.&nbsp;&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The audio should be stop playing while playing video.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_audio_play.TestAudioplayDuringVideoplay]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5177" name="Audio-Conc:Check Audio play during Airplanemode(ON/OFF)">
	<node_order><![CDATA[1057]]></node_order>
	<externalid><![CDATA[254]]></externalid>
	<fullexternalid><![CDATA[test-254]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the audio while airplane mode in(ON/OFF) conditions or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Audio.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy audio files into device.<br />
	2. Open music app and play any audio file.<br />
	3. Turn on the airplane mode.<br />
	4. After sometime turn off the airplane mode.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The audio should be heard without any distortions or corruptions even though turn on/off the airplane mode.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_audio_airplane_mode.TestAudioPlayDuringAirplaneMode]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5180" name="Audio-Conc:Check Audio play during BT(ON/OFF)">
	<node_order><![CDATA[1058]]></node_order>
	<externalid><![CDATA[255]]></externalid>
	<fullexternalid><![CDATA[test-255]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the audio while bluetooth in(ON/OFF) conditions or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Audio.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy audio files into device.<br />
	2. Open music app and play any audio file.<br />
	3. Turn on the bluetooth.<br />
	4. After sometime turn off the bluetooth.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The audio should be heard without any distortions or corruptions even though turn on/off the bluetooth&nbsp; without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5183" name="Audio-Conc:Check Audio playing through USB storage">
	<node_order><![CDATA[1059]]></node_order>
	<externalid><![CDATA[256]]></externalid>
	<fullexternalid><![CDATA[test-256]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the audio playing through USB storage&nbsp; functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Audio.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy some files into USB storage.<br />
	2. Connect the USB storage to the DUT.<br />
	3. Play any audio file which is in USB storage.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The DUT should detect USB storage without any issues.<br />
	2. The file should be played and it should be audible without any glitches and other disturbances.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5186" name="Audio-Conc:Check Audio play during other apps usage">
	<node_order><![CDATA[1060]]></node_order>
	<externalid><![CDATA[257]]></externalid>
	<fullexternalid><![CDATA[test-257]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the audio playback with other apps interruptions or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Audio.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open Music app.<br />
	2. Play any audio file.<br />
	3. Open all other apps concurrently&nbsp; with musis player app.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. When we play music with all apps except with video player the audio should be heared without any clutches or disturbances.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5189" name="Audio-Conc:Check Audio play during image slideshow">
	<node_order><![CDATA[1061]]></node_order>
	<externalid><![CDATA[258]]></externalid>
	<fullexternalid><![CDATA[test-258]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting image slideshow while palying an MP3 file</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Audio.<br />
	3. The DUT should support Gallery apk.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open Music app.<br />
	2. Play any audio file.<br />
	3. Go to gallery APK.<br />
	4. View any image.<br />
	5. Go to Menu-&gt;slideshow.<br />
	6. Click on slideshow option.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The audio should be heared clearly without any disturbances.<br />
	2. When we click on slideshow option, the images in that respective folder should come one after one without any blur.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5192" name="Audio-Conc:Check Audio play during alarm time">
	<node_order><![CDATA[1062]]></node_order>
	<externalid><![CDATA[259]]></externalid>
	<fullexternalid><![CDATA[test-259]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting alarm while playing MP3 file</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Audio.<br />
	3. The DUT should support&nbsp; alarm Apk.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to alarm.<br />
	2. Set alam after 30 seconds.<br />
	3. Go to Music app.<br />
	4. Play any audio file.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The alarm should set successfully without any issues.<br />
	2. The song should be heared without any glitches.<br />
	3. After 30 seconds the audio should be paused.<br />
	4. The alarm should start.<br />
	5. After the alarm completes ranging the audio should be again heared clearly.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5195" name="Audio-Conc:Check Audio play while running some other APK's">
	<node_order><![CDATA[1063]]></node_order>
	<externalid><![CDATA[260]]></externalid>
	<fullexternalid><![CDATA[test-260]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting image slideshow while downloading through wifi,playing an MP3 file and pushing a file using adb push command</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Audio.<br />
	3. The DUT should support Gallery apk.<br />
	4. The DUT should have Ethernet and WiFi connection.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open Music app.<br />
	2. Play an audio file.<br />
	3. Go to browser and type Mp3 song download in search menu.<br />
	4. Click on any one of available links.<br />
	5. Click on any one of MP3 file you want to download.<br />
	6. Then click on download option showing there.<br />
	7. Connect the device to Ethernet IP address using the command &ldquo;adb connect &lt;IP address of the Ethernet cable&gt;.<br />
	8. Enter the &ldquo;adb push source path Destination path&rdquo;.<br />
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The audio should be heared clearly without any glitches.<br />
	2. Search results should be displayed without buffering.<br />
	3. Download of file should be continued in the background.<br />
	4. The file which we are pushing should be available in the destination folder without any loss of data.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5198" name="Audio-Conc:Check Audio play through BT while running some other APK's">
	<node_order><![CDATA[1064]]></node_order>
	<externalid><![CDATA[261]]></externalid>
	<fullexternalid><![CDATA[test-261]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting image slideshow while downloading through wifi,playing an MP3 file through BT headset and pushin a file using adb push command</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Audio.<br />
	3. The DUT should support Gallery apk.<br />
	4. The DUT should have Ethernet and WiFi connection.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to settings-&gt;bluetooth.<br />
	2. Enable the bluetooth.<br />
	3. Pair the DUT with available bluetooth headset.<br />
	4. Open Music app.<br />
	5. Play an audio file.<br />
	6. Go to browser and type Mp3 song download in search menu.<br />
	7. Click on any one of available links.<br />
	8. Click on any one of MP3 file you want to download.<br />
	9. Then click on download option showing there.<br />
	10. Connect the device to Ethernet IP address using the command &ldquo;adb connect &lt;IP address of the Ethernet cable&gt;.<br />
	11. Enter the &ldquo;adb push source path Destination path&rdquo;.<br />
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The bluetooth headset should be paired with DUT without any issues.<br />
	2. The audio should be heared clearly in the bluetooth headset without any glitches.<br />
	3. Search results should be displayed without buffering.<br />
	4. Download of file should be continued in the background.<br />
	5. The file which we are pushing should be available in the destination folder without any loss of data.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5201" name="Audio-Conc:Check Audio play during adb push/pull">
	<node_order><![CDATA[1065]]></node_order>
	<externalid><![CDATA[262]]></externalid>
	<fullexternalid><![CDATA[test-262]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting to play an MP3 file while adb push/pull</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. DUT should have Ethernet connection.<br />
	3. Build should support playback of Audio .</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open Music app.<br />
	2. Play an audio file.<br />
	3. Connect the device to Ethernet IP address using the command &ldquo;adb connect &lt;IP address of the Ethernet cable&gt;.<br />
	4. Enter the &ldquo;adb push source path Destination path&rdquo; command in the DUT terminal.<br />
	5. Check whether he file is copying to DUT&nbsp; or not.<br />
	6. Repeat 4th step by replacing push with pull.<br />
	7. Observe whether the file is copying from the DUT or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The audio should be heared clearly without any glitches.<br />
	2. The file should be copied into DUT without any loss of data.<br />
	3. The file should be copied from&nbsp; DUT without any loss of data.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_audio_play_adb_push_pull.TestAudioPlayDuringAdbPushPull]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5204" name="Audio-Conc:Check Audio paly of big file using USB speakers while adb push/pull">
	<node_order><![CDATA[1066]]></node_order>
	<externalid><![CDATA[263]]></externalid>
	<fullexternalid><![CDATA[test-263]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting to play a big MP3 file through USB speakers while adb push/pull</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. DUT should have Ethernet connection.<br />
	3. Build should support playback of Audio .</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect USB headset speakers to the DUT.<br />
	2. Open Music app.<br />
	3. Play an audio file.<br />
	4. Connect the device to Ethernet IP address using the command &ldquo;adb connect &lt;IP address of the Ethernet cable&gt;.<br />
	5. Enter the &ldquo;adb push source path Destination path&rdquo; command in the DUT terminal.<br />
	6. Check whether he file is copying to DUT&nbsp; or not.<br />
	6. Repeat 4th step by replacing push with pull.<br />
	7. Observe whether the file is copying from the DUT or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The audio should be heared clearly through USB speakers without any glitches.<br />
	2. The file should be copied into DUT without any loss of data.<br />
	3. The file should be copied from&nbsp; DUT without any loss of data.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="5207" name="Video" >
<node_order><![CDATA[2]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="5208" name="Multimedia:Check H263 video codec with 3GPP container">
	<node_order><![CDATA[0]]></node_order>
	<externalid><![CDATA[46]]></externalid>
	<fullexternalid><![CDATA[test-46]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether DUT is supporting the H.263 Video codec format with the 3GPP(.3gp) container files or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Boot the DUT up to Android Main menu.</div>
<div>
	2. The H.263 video codec supported files of .3gp container should be available for testing.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Copy the H.263 video codec supported of the .3gp container files into the device.</div>
<div>
	2. Open the Gallery Apk.</div>
<div>
	3. Select and Playback the above copied files from the device and check whether they are playing without any issues or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The device should playback the H.263 video codec supported of the .3gp container files without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_H263_3GPP.TestVideoH263_3GPP]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5211" name="Multimedia:Check H263 video codec with MPEG-4 container">
	<node_order><![CDATA[1]]></node_order>
	<externalid><![CDATA[47]]></externalid>
	<fullexternalid><![CDATA[test-47]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether DUT is supporting the H.263 Video codec format with the MPEG-4 (.mp4) container files or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Boot the DUT up to Android Main menu.</div>
<div>
	2. The H.263 video codec supported files of .mp4 container should be available for testing.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Copy the H.263 video codec supported of the .mp4 container files into the device.</div>
<div>
	2. Open the Gallery Apk.</div>
<div>
	3. Playback the above copied files from the device and check whether they are playing without any issues or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The device should playback the H.263 video codec supported of the .mp4 container files without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_H263_MPEG_mp4.TestVideoH263_MPEG_MP4]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5214" name="Multimedia:Check H264 video codec with .3gp container">
	<node_order><![CDATA[2]]></node_order>
	<externalid><![CDATA[48]]></externalid>
	<fullexternalid><![CDATA[test-48]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether DUT is supporting the H.264 AVC video codec with the container of&nbsp; .3gp files or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Boot the DUT up to Android Main menu.</div>
<div>
	2. The H.264 AVC video codec supported files of .3gp container should be available for testing.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Copy the H.264 AVC video codec supported of the .3gp container files into the device.</div>
<div>
	2. Open the Gallery Apk.</div>
<div>
	3. Playback the above copied files from the device and check whether they are playing without any issues or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The device should playback the H.264 AVC video codec supported of the .3gp container files without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_H264_AVC_3gp.TestVideoH264_AVC_3GP]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5217" name="Multimedia:Check H264 video codec with .mp4 container">
	<node_order><![CDATA[3]]></node_order>
	<externalid><![CDATA[49]]></externalid>
	<fullexternalid><![CDATA[test-49]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>Verify whether DUT is supporting the H.264 AVC video codec with the container of .mp4 files or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>1. Boot the DUT up to Android Main menu.</div>

<div>2. The H.264 AVC video codec supported files of .mp4 container should be available for testing.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Copy the H.264 AVC video codec supported of the .mp4 container files&nbsp; into the device.</div>
<div>
	2. Open the Gallery Apk.</div>
<div>
	3. Playback the above copied files from the device and check whether they are playing without any issues or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The device should playback the H.264 AVC video codec supported of the .mp4 container files without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional ]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_H264_AVC_mp4.TestVideoH264AvcMp4]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5220" name="Multimedia:Check Video aspect ratio">
	<node_order><![CDATA[4]]></node_order>
	<externalid><![CDATA[50]]></externalid>
	<fullexternalid><![CDATA[test-50]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether video files are able to be displayed in full screen mode(full aspect ratio)</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android Main menu.</div>
<div>
	2. DUT supported video codec files should be available for testing.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Copy the Video files into device.</div>
<div>
	2. Open Gallery Apk.</div>
<div>
	3. Select any Video and play the video.</div>
<div>
	4. Verify whether the video file is playing in full screen mode display or not, with out any issues.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. DUT device should support playback of Video.</div>
<div>
	2. The files playing should be working fine in full screen mode with expected aspect ratio</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5223" name="Multimedia:Check H.264 AVC video codec with the container of the MPEG-TS(.ts)">
	<node_order><![CDATA[5]]></node_order>
	<externalid><![CDATA[106]]></externalid>
	<fullexternalid><![CDATA[test-106]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether DUT is supporting the H.264 AVC video codec and AAC audio codec with the container of the MPEG-TS(.ts) file&nbsp; or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT up to Android Main menu.<br />
	2. The H.264 AVC video codec and AAC audio codec supported file with the MPEG-TS(.ts) container should be available for testing.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy the H.264 AVC video codec and AAC audio codec supported file with the MPEG-TS(.ts) container into the device.<br />
	2. Open the Gallery Apk.<br />
	3. Playback the above copied files from the device and check whether they are playing without any issues or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The device should playback the H.264 AVC video codec and AAC audio codec supported file with the MPEG-TS(.ts) container without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_H264_AVC_ts.TestVideoH264_AVC_TS]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5226" name="Multimedia:Check H.265 HEVC video codec with the container of .mp4">
	<node_order><![CDATA[6]]></node_order>
	<externalid><![CDATA[107]]></externalid>
	<fullexternalid><![CDATA[test-107]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether DUT is supporting the H.265 HEVC video codec with the container of .mp4 files or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT up to Android Main menu.<br />
	2. The H.265 HEVC video codec supported files of .mp4 container should be available for testing.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy the H.265 HEVC video codec supported of the .mp4 container files&nbsp; into the device.<br />
	2. Open the Gallery Apk.<br />
	3. Playback the above copied files from the device and check whether they are playing without any issues or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The device should playback the H.265 HEVC video codec supported of the .mp4 container files without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_H265_mp4.TestVideoH265_MP4]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5229" name="Multimedia:Check VP8 codec with the container of the .webm">
	<node_order><![CDATA[7]]></node_order>
	<externalid><![CDATA[108]]></externalid>
	<fullexternalid><![CDATA[test-108]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether DUT is supporting the VP8 codec with the container of the .webm file or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT up to Android Main menu.<br />
	2. The VP8&nbsp; codec supported file of .webm container should be available for testing.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy the VP8 codec supported container of the .webm file into the device.<br />
	2. Open the Gallery Apk.<br />
	3. Playback the above copied files from the device and check whether they are playing without any issues or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The device should playback the VP8 codec supported container of the&nbsp; .webm file without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_VP8_webm.TestVideoVP8_WEBM]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5232" name="Multimedia:Check VP8 codec with the container of the .mkv">
	<node_order><![CDATA[8]]></node_order>
	<externalid><![CDATA[109]]></externalid>
	<fullexternalid><![CDATA[test-109]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether DUT is supporting the VP8 codec with the container of the .mkv file or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT up to Android Main menu.<br />
	2. The VP8&nbsp; codec supported file of .mkv container should be available for testing.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy the VP8 codec supported container of the .mkv file into the device.<br />
	2. Open the Gallery Apk.<br />
	3. Playback the above copied files from the device and check whether they are playing without any issues or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The device should playback the VP8 codec supported container of the&nbsp; .mkv file without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_VP8_mkv.TestVideoVP8_MKV]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5235" name="Multimedia:Check VP9 codec with the container of the .webm">
	<node_order><![CDATA[9]]></node_order>
	<externalid><![CDATA[110]]></externalid>
	<fullexternalid><![CDATA[test-110]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether DUT is supporting the VP9 codec with the container of the .webm file or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT up to Android Main menu.<br />
	2. The VP9&nbsp; codec supported file of .webm container should be available for testing.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy the VP9 codec supported container of the .webm file into the device.<br />
	2. Open the Gallery Apk.<br />
	3. Playback the above copied files from the device and check whether they are playing without any issues or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The device should playback the VP9 codec supported container of the&nbsp; .webm file without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_VP9_webm.TestVideoVP9_WEBM]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5238" name="Multimedia:Check playback of Video streaming">
	<node_order><![CDATA[10]]></node_order>
	<externalid><![CDATA[111]]></externalid>
	<fullexternalid><![CDATA[test-111]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether DUT is supporting the playback of Video streaming or not</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu<br />
	2. DUT should have the internet facility (Wi-Fi / Ethernet)</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.Open the Browser Apk,<br />
	2. Open the &ldquo;https://m.youtube.com&rdquo; URL.<br />
	3. Play any Video.<br />
	4. Check whether the video is playing without any issues or not<br />
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	The DUT device should be able to play the streaming video without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_youtube_play.TestVideo_youtube_play]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5241" name="Multimedia:Check Video Pause and Play functionality">
	<node_order><![CDATA[11]]></node_order>
	<externalid><![CDATA[113]]></externalid>
	<fullexternalid><![CDATA[test-113]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify video file Pause/Play functionality.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1.DUT should boot up to Android Main menu<br />
	2. Build should support playback of Audio and Video streams</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy video streams to DUT<br />
	2. Open Gallery and select any video file and playback it.<br />
	3. Pause the video while playing<br />
	4. Try to resume/play the video after pause<br />
	<br />
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Video playback should work fine, Audio video sync should be maintained.<br />
	2. Pause/Play functions should work fine<br />
	3. The file should be played from the specified position where it is paused<br />
	&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_pause_play.TestVideo_play_pause]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5244" name="Multimedia:Check Video progress bar functionality">
	<node_order><![CDATA[12]]></node_order>
	<externalid><![CDATA[213]]></externalid>
	<fullexternalid><![CDATA[test-213]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the video progress bar seek functionality.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1.DUT should boot up to Android Main menu</div>
<div>
	2. Build should support playback of Audio and Video streams</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Copy video streams to DUT&nbsp;</div>
<div>
	2. Open Gallery and select any video file and playback it.</div>
<div>
	3. While video playback is going on, seek the progress bar and check whether it is playing as per the user seek place or not.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. Gallery should open successfully and video playback should work fine.</div>
<div>
	2. When user seek the progress bar, video should be played from the seek position without any issues.</div>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_progressbar_seek.TestVideoProgressbarSeek]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5247" name="Video:Check AV1 video codec files">
	<node_order><![CDATA[13]]></node_order>
	<externalid><![CDATA[272]]></externalid>
	<fullexternalid><![CDATA[test-272]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the&nbsp; AV1&nbsp; video codec format&nbsp; files or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot&nbsp; up to Android Main menu.<br />
	2. The AV1&nbsp; codec supported file&nbsp; should be available for testing.<br />
	3. DUT should contain MX player apk.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy the AV1 codec supported container of the .webm file into the device.<br />
	2. Open the Mxplayer Apk.<br />
	3. Playback the above copied files from the device and check whether they are playing without any issues or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The device should playback the AV1 codec supported&nbsp; file without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_AV1.TestVideoAVI]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5250" name="Video:Check video with QVGA resolution">
	<node_order><![CDATA[14]]></node_order>
	<externalid><![CDATA[273]]></externalid>
	<fullexternalid><![CDATA[test-273]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the&nbsp; video with QVGA resolution functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Audio and Video streams.<br />
	3. The DUT should support QVGA (320x240)resolution videos.<br />
	4. DUT should contain MX player apk.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy QVGA resolution videos into DUT.<br />
	2. Open Mxplayer app and play the QVGA video file.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.The DUT should playback the QVGA resolution video file without any glitches and audio &amp; video should be synced.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_QVGA.TestVideoQVGA]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5253" name="Video:Check video with VGA resolution">
	<node_order><![CDATA[15]]></node_order>
	<externalid><![CDATA[274]]></externalid>
	<fullexternalid><![CDATA[test-274]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the&nbsp; video with VGA resolution functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Audio and Video streams.<br />
	3. The DUT should support VGA (640x480)resolution videos.<br />
	4. DUT should contain MX player apk.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy VGA resolution videos into DUT.<br />
	2. Open Mxplayer app and play the VGA video file.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The DUT should playback the VGA resolution video file without any glitches and audio &amp; video should be synced.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_VGA.TestVideoVGA]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5256" name="Video:Check video with 720p resolution">
	<node_order><![CDATA[16]]></node_order>
	<externalid><![CDATA[275]]></externalid>
	<fullexternalid><![CDATA[test-275]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the&nbsp; video with 720p resolution functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of&nbsp; Video streams.<br />
	3. The DUT should support 720p (1280x720)resolution videos.<br />
	4. DUT should contain MX player apk.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy 720p resolution videos into DUT.<br />
	2. Open Mxplayer app and play the 720p video file.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The DUT should playback the 720p resolution video file without any glitches and audio &amp; video should be synced.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_720p.TestVideo720p]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5259" name="Video:Check video with 1080p resolution">
	<node_order><![CDATA[17]]></node_order>
	<externalid><![CDATA[276]]></externalid>
	<fullexternalid><![CDATA[test-276]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the&nbsp; video with 1080p resolution functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of&nbsp; Video streams.<br />
	3.The DUT should support&nbsp; 1080p (1920x1080)resolution videos.<br />
	4.DUT should contain MX player apk.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy 1080p resolution videos into DUT.<br />
	2. Open Mxplayer app and play the 1080p video file.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The DUT should playback the 1080p resolution video file without any glitches and audio &amp; video should be synced.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_1080p.TestVideo1080p]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5262" name="Video:Check video with 4k resolution">
	<node_order><![CDATA[18]]></node_order>
	<externalid><![CDATA[277]]></externalid>
	<fullexternalid><![CDATA[test-277]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the&nbsp; video with 4k resolution functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of&nbsp; Video streams.<br />
	3.The DUT should support&nbsp; 4k(4096x2160) resolution videos.<br />
	4.DUT should contain MX player apk.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy 4k resolution videos into DUT.<br />
	2. Open Mxplayer app and play the 4k video file.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The DUT should playback the 4k resolution video file without any glitches and audio &amp; video should be synced.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_4k.TestVideo4k]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5265" name="Video:Check video play and stop functionality">
	<node_order><![CDATA[19]]></node_order>
	<externalid><![CDATA[278]]></externalid>
	<fullexternalid><![CDATA[test-278]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting the video&nbsp; play and stop functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of&nbsp; Video streams.<br />
	3. DUT should contain MX player apk.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy video streams to DUT.<br />
	2. Open Mxplayer Apk and select any video file and playback it.<br />
	3. Stop the video while playing.<br />
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Video playback should work fine, Audio video sync should be maintained.<br />
	2. Play and stop functions should work fine.<br />
	&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_play_and_back.TestVideo_play_back]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5268" name="Video:Check video rewind and forward functionality">
	<node_order><![CDATA[20]]></node_order>
	<externalid><![CDATA[279]]></externalid>
	<fullexternalid><![CDATA[test-279]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting the video rewind and forward functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of&nbsp; Video streams.<br />
	3. DUT should contain MX player apk.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy video streams to DUT.<br />
	2. Open Mxplayer Apk and play an video file.<br />
	3. Click on rewind option.<br />
	4.&nbsp; After sometime click on forward option.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. When we click onrewind option it will play the scene for a particular bit backward.<br />
	2. When we click on forward option it will move the video for a specific bit forward.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_forward_rewind.TestVideoForwardRewind]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5271" name="Video:Check video next and previous functionality">
	<node_order><![CDATA[21]]></node_order>
	<externalid><![CDATA[280]]></externalid>
	<fullexternalid><![CDATA[test-280]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the video next and previous functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of&nbsp; Video streams.<br />
	3. DUT should contain MX player apk.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open the Mxplayer app.<br />
	2. Playback any video file.<br />
	3. Click on next button.<br />
	4. After some time click on previous button.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The video should visible clearly and it&nbsp; should be audible without any distortions or corruptions.<br />
	2. While we press the next button it should play the next video immediately.<br />
	3. When&nbsp; we press the previous button it should&nbsp; play the previous video without any delay.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_next_previous.TestVideonextprevious]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5274" name="Video:Check video startover and resume functionality">
	<node_order><![CDATA[22]]></node_order>
	<externalid><![CDATA[281]]></externalid>
	<fullexternalid><![CDATA[test-281]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the video startover and resume functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of&nbsp; Video streams.<br />
	3. DUT should contain MX player apk.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.Open the Mxplayer&nbsp; app.<br />
	2. playback any video file.<br />
	3. Close the gallery app.<br />
	4. Again open Mxplayer app and try to play the video,it should show a dialogue box &ldquo;start over&rdquo; or &ldquo;Resume&rdquo;.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. If we select start over it should play the video from the beginning.<br />
	2. If we select Resume it should play the video from where it has previously stopped.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_startover_resume.TestVideoStartoverResume]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5277" name="Video:Check video volume(increase/decrease) functionality">
	<node_order><![CDATA[23]]></node_order>
	<externalid><![CDATA[282]]></externalid>
	<fullexternalid><![CDATA[test-282]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the video volume(Increase/Decrease) functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of&nbsp; Video streams.<br />
	3. DUT should contain MX player apk.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open Mxplayer&nbsp; app.<br />
	2. Go to settings-&gt;More-&gt;media volume,then select the volume as our wish.<br />
	3. Now, play the video file.<br />
	4. Again repeat the step-2 and play the file.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. While increasing or decreasing the volume,we should feel and able to recognize variations in sound and video should be played without any distortions.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_volume_up_and_down.TestVolume_Up_Down]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5280" name="Video:Check video contrast functionality">
	<node_order><![CDATA[24]]></node_order>
	<externalid><![CDATA[283]]></externalid>
	<fullexternalid><![CDATA[test-283]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the video contrast functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of&nbsp; Video streams.<br />
	3. DUT should contain MX player apk.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open MXplayer app.<br />
	2. Play any video file with the default brightness.<br />
	3. After that pause the video and go to&nbsp; Settings-&gt;Display-&gt;brightness level and then varying the brightness level.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. While increasing or decreasing the brightness,we should feel and able to recognize variations in the contrast functionality of video file.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5283" name="Video:Check device to play large video files functionality">
	<node_order><![CDATA[25]]></node_order>
	<externalid><![CDATA[284]]></externalid>
	<fullexternalid><![CDATA[test-284]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check&nbsp; the DUT is supporting the&nbsp; large video files or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of&nbsp; Video streams.<br />
	3. DUT should contain MX player apk.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy large duration&nbsp; video files into&nbsp; DUT.<br />
	2. Open MXplayer app.<br />
	3. Play the large video files.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The large video file should be played without any distortions or corruptions.<br />
	2. The file should be played upto its duration.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_large_video_file.TestLarge_video_file]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5286" name="Video:Check video quality functionality">
	<node_order><![CDATA[26]]></node_order>
	<externalid><![CDATA[285]]></externalid>
	<fullexternalid><![CDATA[test-285]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the&nbsp; varying quality functionality&nbsp; or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of&nbsp; Video streams.<br />
	3. DUT should have Ethernet or WiFi connection.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open the Browser Apk.<br />
	2. Open the &ldquo;https://m.youtube.com&rdquo; URL.<br />
	3.&nbsp; Play any Video.<br />
	4. Go to Playback Settings-&gt;Quality and then select different types of quality for differernt time.<br />
	5. While we are changing the quality the video quality should also vary according to that.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. According to selected quality&nbsp; the video visibility(clarity) should be varied.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5289" name="Video:Check video synchronization functionality">
	<node_order><![CDATA[27]]></node_order>
	<externalid><![CDATA[286]]></externalid>
	<fullexternalid><![CDATA[test-286]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting the Video synchronization functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of&nbsp; Video streams.<br />
	3. DUT should contain MX player apk.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open Mxplayer&nbsp; app.<br />
	2. Play any video file.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The&nbsp; video and audio should be synced without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5292" name="Video:Check video functionality after hard shutdown">
	<node_order><![CDATA[28]]></node_order>
	<externalid><![CDATA[287]]></externalid>
	<fullexternalid><![CDATA[test-287]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the&nbsp;&nbsp;&nbsp; Video&nbsp; after hard shutdown functionality&nbsp; or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Video streams.<br />
	3. DUT should contain MX player apk.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open MXplayer&nbsp; app and play any video file.<br />
	2. Shut down&nbsp; the DUT by using power button suddenly while playing the video file or close the MXplayer app and then shut down the system.<br />
	3. Then power up the DUT&nbsp; and open the Mxplayer&nbsp; and play any video file.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Video playback should work fine, Audio video sync should be maintained.<br />
	2. The files should be played without any clashes after hard shutdown of the DUT.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5295" name="Video:Check video is playing completely or not">
	<node_order><![CDATA[29]]></node_order>
	<externalid><![CDATA[288]]></externalid>
	<fullexternalid><![CDATA[test-288]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check&nbsp; the DUT is supporting the&nbsp; video is playing upto its duration period or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Video streams.<br />
	3. DUT should contain MX player apk.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Cpoy video streams into device.<br />
	2. Open MXplayer app.<br />
	3. Open and play above copied any video file.<br />
	4. Observe the duation of the video.&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. After completion of video play observe the time duration for which it has been played.<br />
	2. It should exactly equal to the time of video which is observed before playing the video.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_duration.TestVideoduration]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5298" name="Video:Check video playing through USB functionality">
	<node_order><![CDATA[30]]></node_order>
	<externalid><![CDATA[289]]></externalid>
	<fullexternalid><![CDATA[test-289]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the video&nbsp; playing through USB storage functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Video streams.<br />
	3. DUT should contain MX player apk.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy some files into USB storage.<br />
	2. Connect the USB storage to device USB port.<br />
	3. Play any video file from the USB storage.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.&nbsp; The video should be visible clearly and audio should be heard without any distortions or corruptions when playing them from the USB storage.<br />
	2. When&nbsp; disconnected the USB storage,the video play should be stopped.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_play_usb.TestVideoplayusb]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5301" name="Video:Check video functionality to display error message">
	<node_order><![CDATA[31]]></node_order>
	<externalid><![CDATA[290]]></externalid>
	<fullexternalid><![CDATA[test-290]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; to display an error message while playing the corrupted files/invalid formats or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Video streams.<br />
	3. DUT should contain MX player apk.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.&nbsp; Open MXplayer app.<br />
	2. Copy some corrupted and invalid files into DUT.<br />
	3. Play any corrupted file.<br />
	4. After that play an invalid format file.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. When playback the corrpted file, it should show an error message that &ldquo;can&#39;t play the file&rdquo;.<br />
	2. When playback an invalid file, it should show an error message like &ldquo;file format unsupported&rdquo;.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_corrupted.TestVideocorrupt]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5304" name="Video:Check video playing through USB headset">
	<node_order><![CDATA[32]]></node_order>
	<externalid><![CDATA[291]]></externalid>
	<fullexternalid><![CDATA[test-291]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the video playing through USB headset(plugin/plugout) functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Video streams.<br />
	3. DUT should contain MX player apk.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy video files into device.<br />
	2. Connect the USB headset to the target device and check whether USB headset is detected or not.<br />
	3. Open&nbsp; MXplayer app and play any video file.<br />
	4. After some time&nbsp; Plug-out the headset.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Target device&nbsp; should&nbsp; detect the connected USB headset when plugged-in.<br />
	2. The video file playback sound should be heared through USB headset without any glitches.<br />
	3. When plugout the headset, the video should be stopped.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5307" name="Video:Check video playing through audio jack">
	<node_order><![CDATA[33]]></node_order>
	<externalid><![CDATA[292]]></externalid>
	<fullexternalid><![CDATA[test-292]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the video playing through Audio jack(plugin/plugout) functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Video streams.<br />
	3. DUT should contain MX player apk.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy video files into device.<br />
	2. Connect the&nbsp; headset to the target device and check whether&nbsp; headset is detected or not.<br />
	3. Open MXplayer app and play any video file.<br />
	4.&nbsp; After some time&nbsp; Plug-out the headset.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. DUT&nbsp; should&nbsp; detect the connected&nbsp; headset when plugged-in.<br />
	2. The file should be heared&nbsp; through headset without any glitches video should be clearly visible without any clashes.<br />
	3. when we plugout the headset the video should be stopped.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5310" name="Video:Check video playing through BT headset">
	<node_order><![CDATA[34]]></node_order>
	<externalid><![CDATA[293]]></externalid>
	<fullexternalid><![CDATA[test-293]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the video playing through BT headset(plugin/plugout) functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Video streams.<br />
	3. DUT should contain MX player apk.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy video files into device.<br />
	2. Turn on the bluetooth.<br />
	3. Pair the bluetooth headset with DUT.<br />
	4. Open MXplayer app and play any video file.<br />
	5. Disconnect the bluetooth with DUT.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. DUT&nbsp; should pair with&nbsp; bluetooth headset without any issues.<br />
	2. Video&nbsp; should be clearly visible and must be audible through bluetooth headset.<br />
	3. When bluetooth headset is disconnected from the DUT the Video will be continued to play through speakers.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5313" name="Video:Check video functionality of file pushed using adb push">
	<node_order><![CDATA[35]]></node_order>
	<externalid><![CDATA[294]]></externalid>
	<fullexternalid><![CDATA[test-294]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting to play the video file which is pushed into DUT through adb push command</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Video streams.<br />
	3. DUT should contain MX player apk.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the device to Ethernet IP address using the command &ldquo;adb connect &lt;IP address of the Ethernet cable&gt;.<br />
	2. Enter the &ldquo;adb push source path Destination path&rdquo; command in PC terminal.<br />
	3. Check whether file is copying into the DUT or not.<br />
	4. Open Mxplayer.<br />
	5. Go to USB, and thenPlay the file.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The video which has pushed into the DUT should play without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_push_and_play.TestVideo_push_and_play]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5316" name="Video:Check video playing after USB plugged out">
	<node_order><![CDATA[36]]></node_order>
	<externalid><![CDATA[295]]></externalid>
	<fullexternalid><![CDATA[test-295]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting to play the video&nbsp; file through USB even after it is plugged out</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Audio.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the USB to the DUT.<br />
	2. Go to Files.<br />
	3. Play any video file.<br />
	4. After sometime plugout the USB.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The DUT should detect the USB successfully.<br />
	2. The file should be played clearly without any issues.<br />
	3. While we plug out the USB the file should stop playing showing message can&#39;t play the video.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5319" name="Video-Str:Check video 20 times play/pause and stop functionality">
	<node_order><![CDATA[37]]></node_order>
	<externalid><![CDATA[297]]></externalid>
	<fullexternalid><![CDATA[test-297]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check&nbsp; the DUT is supporting the&nbsp; video after 20 times&nbsp; play and&nbsp; pause or play and stop or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Mxplayer should be installed in the DUT.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy video streams to DUT.<br />
	2. Open Mxplayer and select any video file and playback it.<br />
	3. Pause/stop&nbsp; the video while playing.<br />
	4. Again play the video.<br />
	5. Repeat 3,4 steps for 20 times.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Video playback should work fine, Audio video sync should be maintained.<br />
	2. Pause/Play functions should work fine<br />
	3. The file should be played from the specified position where it is paused.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5322" name="Video-Str:Check video playing 50 files">
	<node_order><![CDATA[38]]></node_order>
	<externalid><![CDATA[298]]></externalid>
	<fullexternalid><![CDATA[test-298]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the video by playing 50 files continuously or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of video.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy 50 files into the DUT.<br />
	2. Open Mxplayer app<br />
	3. Play any one of the video file.<br />
	4. After completion of playing 1 video file it will show a dialogue box &#39;start over&#39; or &#39;resume&#39; the next video.<br />
	5. We have to select our required option.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Video Should be clear and it should be audible&nbsp; without any distortions or corruptions.<br />
	2. Options shown in dialogue box should work fine.<br />
	3. The files should be Stop when pressing on Stop button only.<br />
	4. As long as we didnot stop the videos it should play videos continuously one after another without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5325" name="Video-Str:Check video playing after 25 times reboot">
	<node_order><![CDATA[39]]></node_order>
	<externalid><![CDATA[299]]></externalid>
	<fullexternalid><![CDATA[test-299]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check&nbsp; the DUT is supporting the&nbsp; videos playing after rebooting system for multiple(25) times or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of video .<br />
	3. DUT should contain Mxplayer APK.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Reboot the DUT for 25 times continuously by using adb reboot command.<br />
	2. Open Mxplayer.<br />
	3. Play any video file.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The DUT should boot 25 times upto android main menu.<br />
	2. The video should be played with audio and video synchronization.<br />
	3. The video should be played without any glitches and clashes.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5328" name="Video-Str:Check video to play 25 invalid files">
	<node_order><![CDATA[40]]></node_order>
	<externalid><![CDATA[300]]></externalid>
	<fullexternalid><![CDATA[test-300]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting to play 25 invalid or corrupted files continuously</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Video streams.<br />
	3. DUT should contain MX player apk.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	. Open Mxplayer app.<br />
	2. Copy 25 corrupted and 25 invalid files into DUT.<br />
	3. Play above copied corrupted files and invalid files.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. When we try to play a corrupted file it should show an error message that &ldquo;can&#39;t play the file&rdquo;.<br />
	2. When we are trying to play an invalid file it should show an error message &ldquo;file format unsupported&rdquo;.<br />
	3. As long as we play any number of files,for ex:25 files the DUT should show the same message every time without any clashes.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5331" name="Video-Conc:Check video play during Airplane mode(ON/OFF)">
	<node_order><![CDATA[41]]></node_order>
	<externalid><![CDATA[301]]></externalid>
	<fullexternalid><![CDATA[test-301]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the video while airplane mode in(ON/OFF) conditions or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Video streams.<br />
	3. DUT should contain MX player apk.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Cpoy video streams into device.<br />
	2. Open MXplayer app.<br />
	3. Open and play above copied any video file.<br />
	4. Turn on the airplane mode.<br />
	5. After sometime turn off the airplane mode.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The video&nbsp; should be visible clearly&nbsp; and audio should be clear without any distortions or corruptions even though turn on/off the airplane mode without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_play_airplane_mode.TestVideoplayAndAirplanemode]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5334" name="Video-Conc:Check video play during BT (ON/OFF)">
	<node_order><![CDATA[42]]></node_order>
	<externalid><![CDATA[302]]></externalid>
	<fullexternalid><![CDATA[test-302]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; the video&nbsp; while bluetooth in(ON/OFF) conditions or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support playback of Video streams.<br />
	3. DUT should contain MX player apk.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Cpoy video streams into device.<br />
	2. Open MXplayer app.<br />
	3. Open and play above copied any video file.<br />
	4. Turn on the bluetooth.<br />
	5. After sometime turn off the bluetooth.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The video&nbsp; should be visible clearly&nbsp; and audio should be clear without any distortions or corruptions even though turn on/off the bluetooth option.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5337" name="Video-Conc:Check video play during alarm time">
	<node_order><![CDATA[43]]></node_order>
	<externalid><![CDATA[303]]></externalid>
	<fullexternalid><![CDATA[test-303]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting alarm while playing a video file</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. DUT should contain Mxplayer.<br />
	3. The DUT should support&nbsp; alarm Apk.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to alarm.<br />
	2. Set alam after 30 seconds.<br />
	3. Go to MXplayer app.<br />
	4. Play any video file.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The alarm should set successfully without any issues.<br />
	2. The video should synchronize with audio and it should be played without any issue.<br />
	3. After 30 seconds also the video should continue to play.<br />
	4. The alarm should start.<br />
	5. After the alarm completes ranging also the video should be played clearly without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5340" name="Video-Conc:Check video while downloading and pushing">
	<node_order><![CDATA[44]]></node_order>
	<externalid><![CDATA[304]]></externalid>
	<fullexternalid><![CDATA[test-304]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting downloading file through ethernet or wifi,playing a video file and pushing a file using adb push command</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu<br />
	2. Build should support playback of video .<br />
	3. The DUT should support Mxplayer.<br />
	4. The DUT should have Ethernet and WiFi connection.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.&nbsp; Go to browser and type Mp4 video download in search menu.<br />
	2. Click on any one of available links.<br />
	3. Click on any one of MP4 file you want to download.<br />
	4. Then click on download option showing there.<br />
	5. Connect the device to Ethernet IP address using the command &ldquo;adb connect &lt;IP address of the Ethernet cable&gt;.<br />
	6. Enter the &ldquo;adb push source path Destination path&rdquo;.<br />
	7. Open MXplayer app.<br />
	8. Play any video file.<br />
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The video should be played without any stability issues.<br />
	2. Search results should be displayed without buffering.<br />
	3. Download of file should be continued in the background.<br />
	4. The file which we are pushing should be available in the destination folder without any loss of data.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5343" name="Video-Conc:Check video playing through BT headset while downloading and using adb push command">
	<node_order><![CDATA[45]]></node_order>
	<externalid><![CDATA[305]]></externalid>
	<fullexternalid><![CDATA[test-305]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting downloading file through ethernet or wifi,playing a video file through BT headset and pushin a file using adb push command</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu<br />
	2. Build should support playback of video.<br />
	3. The DUT should support MXplayer apk.<br />
	4. The DUT should have Ethernet and WiFi connection.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to settings-&gt;bluetooth.<br />
	2. Enable the bluetooth.<br />
	3. Pair the DUT with available bluetooth headset.<br />
	4.&nbsp; Go to browser and type Mp4 video download in search menu.<br />
	5. Click on any one of available links.<br />
	6. Click on any one of MP4 file you want to download.<br />
	7. Then click on download option showing there.<br />
	8. Connect the device to Ethernet IP address using the command &ldquo;adb connect &lt;IP address of the Ethernet cable&gt;.<br />
	9. Enter the &ldquo;adb push source path Destination path&rdquo;.<br />
	10. Open MXplayer app.<br />
	11. Play any video file.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The bluetooth headset should be paired with DUT without any issues.<br />
	2. Search results should be displayed without buffering.<br />
	3. Download of file should be continued in the background.<br />
	4. The file which we are pushing should be available in the destination folder without any loss of data.<br />
	5.&nbsp; The video should be heared clearly in the bluetooth headset without any glitches.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5346" name="Video-Conc:Check video playing while using adb push/pull">
	<node_order><![CDATA[46]]></node_order>
	<externalid><![CDATA[306]]></externalid>
	<fullexternalid><![CDATA[test-306]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting to play a video file while adb push/pull</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. DUT should have Ethernet connection.<br />
	3. DUT should contain Mxplayer APK .</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the device to Ethernet IP address using the command &ldquo;adb connect &lt;IP address of the Ethernet cable&gt;.<br />
	2. Enter the &ldquo;adb push source path Destination path&rdquo; command in the DUT terminal.<br />
	3. Check whether he file is copying to DUT&nbsp; or not.<br />
	4. Repeat 4th step by replacing push with pull.<br />
	5. Observe whether the file is copying from the DUT or not.<br />
	6. Open MXplayer app.<br />
	7. Play any video file.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The audio should be heared clearly without any glitches.<br />
	2. The file should be copied into DUT without any loss of data.<br />
	3. The file should be copied from&nbsp; DUT without any loss of data.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_play_while_adb_push_pull.TestAdb_push_pullwhileVideoPlay]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5349" name="Video-Conc:Check video playing through USB speakers while using adb push/pull command">
	<node_order><![CDATA[47]]></node_order>
	<externalid><![CDATA[307]]></externalid>
	<fullexternalid><![CDATA[test-307]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting to play a big video file through USB speakers while adb push/pull</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu<br />
	2. DUT should have Ethernet connection.<br />
	3. DUT should contain Mxplayer APK .</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect USB headset speakers to the DUT.<br />
	2. Connect the device to Ethernet IP address using the command &ldquo;adb connect &lt;IP address of the Ethernet cable&gt;.<br />
	3. Enter the &ldquo;adb push source path Destination path&rdquo; command in the DUT terminal.<br />
	4. Check whether he file is copying to DUT&nbsp; or not.<br />
	5. Repeat 4th step by replacing push with pull.<br />
	6. Observe whether the file is copying from the DUT or not.<br />
	7.&nbsp; Open MXplayer app.<br />
	8. Play any video file.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.&nbsp; The file should be copied into DUT without any loss of data.<br />
	2. The file should be copied from&nbsp; DUT without any loss of data.<br />
	3. The video should be synchronized with audio and audio should be&nbsp; heared clearly through USB speakers without any glitches.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5352" name="Video: Check whether H264 codec video is exiting from gallery using back button">
	<node_order><![CDATA[48]]></node_order>
	<externalid><![CDATA[508]]></externalid>
	<fullexternalid><![CDATA[test-508]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Video: Check whether H264 codec video is exiting from gallery using back button</p>
]]></summary>
	<preconditions><![CDATA[<p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Copy the H.264 AVC video codec supported of the .mp4 container files&nbsp; into the device.</div>
<div>
	2. Open the Gallery Apk.</div>
<div>
	3. Playback the above copied files from the device and check whether they are playing without any issues or not.</div>
<div>
	4. Exit the video playing using back button.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	Video playing should exit using back button</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5355" name="Video: Check whether H265 codec video is exiting from gallery using back button">
	<node_order><![CDATA[49]]></node_order>
	<externalid><![CDATA[509]]></externalid>
	<fullexternalid><![CDATA[test-509]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Video: Check whether H265 codec video is exiting from gallery using back button</p>
]]></summary>
	<preconditions><![CDATA[<p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Copy the H.265 AVC video codec supported of the .mp4 container files&nbsp; into the device.</div>
<div>
	2. Open the Gallery Apk.</div>
<div>
	3. Playback the above copied files from the device and check whether they are playing without any issues or not.</div>
<div>
	4. Exit the video playing using back button.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	Video playing should exit using back button</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="5358" name="Images" >
<node_order><![CDATA[3]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="5359" name="Multimedia:Check JPEG decode functionality">
	<node_order><![CDATA[0]]></node_order>
	<externalid><![CDATA[51]]></externalid>
	<fullexternalid><![CDATA[test-51]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<div>
	Verify whether DUT is supporting the JPEG image decode format or not:</div>
<div>
	&nbsp;</div>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Boot the DUT up to Android Main menu.</div>
<div>
	2. The JPEG image format should be available for testing.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Copy the image of JPEG format into the device.</div>
<div>
	2. Open Gallery Apk.</div>
<div>
	2. Open the above copied image from the device and check whether image is clearly visible or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The image of JPEG formate file should be open and show without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_jpeg_image_decode.TestJpegImageDecode]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5362" name="Multimedia:Check PNG decode functionality">
	<node_order><![CDATA[1007]]></node_order>
	<externalid><![CDATA[52]]></externalid>
	<fullexternalid><![CDATA[test-52]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<div>
	Verify whether DUT is supporting the PNG image decode format or not:</div>
<div>
	&nbsp;</div>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Boot the DUT up to Android Main menu.</div>
<div>
	2. The PNG image format should be available for testing.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Copy the image of PNG format into the device.</div>
<div>
	2. Open Gallery Apk.</div>
<div>
	2. Open the above copied image from the device and check whether image is clearly visible or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The image of PNG formate file should be open and show without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_png_image_decode.TestPNGImageDecode]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5365" name="Multimedia:Check BMP image decode functionality">
	<node_order><![CDATA[1018]]></node_order>
	<externalid><![CDATA[114]]></externalid>
	<fullexternalid><![CDATA[test-114]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether DUT is supporting the BMP image decode format or not:<br />
	&nbsp;</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT up to Android Main menu.<br />
	2. The BMP image format should be available for testing.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy the image of BMP format into the device.<br />
	2. Open Gallery Apk.<br />
	2. Open the above copied image from the device and check whether image is clearly visible or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The image of BMP formate file should be open and show without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_bmp_image_decode.TestBmpImageDecode]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5368" name="Multimedia:Check GIF image decode functionality">
	<node_order><![CDATA[1019]]></node_order>
	<externalid><![CDATA[115]]></externalid>
	<fullexternalid><![CDATA[test-115]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether DUT is supporting the GIF image decode format or not:<br />
	&nbsp;</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT up to Android Main menu.<br />
	2. The GIF image format should be available for testing.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy the image of&nbsp; GIF format into the device.<br />
	2. Open Gallery Apk.<br />
	2. Open the above copied image from the device and check whether image is clearly visible or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The image of&nbsp; GIF formate file should be open and show without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_image_gif_decode.TestgifDecode]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5371" name="Image:Check image croping functionality">
	<node_order><![CDATA[1020]]></node_order>
	<externalid><![CDATA[264]]></externalid>
	<fullexternalid><![CDATA[test-264]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check DUT is supporting the crop image&nbsp; functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT up to Android Main menu.<br />
	2. The Dut should support Gallery apk.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy the image of PNG format into the device.<br />
	2. Open the gallery app.<br />
	3. Open any one of the image file.<br />
	4. Click on the image,go to Settings-&gt;crop.<br />
	5. Select the length of image of the size as per our requirement.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The image should be cropped as our wish without any issue.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5374" name="Image:Check image delete functionality">
	<node_order><![CDATA[1021]]></node_order>
	<externalid><![CDATA[265]]></externalid>
	<fullexternalid><![CDATA[test-265]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check DUT is supporting the delete image&nbsp; functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT up to Android Main menu.<br />
	2. The Dut should support Gallery apk.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy the image of PNG format into the device.<br />
	2. Open the gallery app.<br />
	3. Long press on any one of the image file.<br />
	4. Click on the menu button delete option will be shown then click on that.<br />
	5. Select the required option in dialogue box.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Delete dialogue box should show with the message of &ldquo;Are you sure want to delete? Yes or No&rdquo; when clicked on delete option.<br />
	2. Image should be deleted from the galler,when clicked on &ldquo;Yes&rdquo; option and Image should not delete when click on &ldquo;No&rdquo; option.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_image_delete.TestBmpImageDelete]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5377" name="Image:Check image rotating functionality">
	<node_order><![CDATA[1022]]></node_order>
	<externalid><![CDATA[266]]></externalid>
	<fullexternalid><![CDATA[test-266]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check DUT is supporting the rotate&nbsp; image&nbsp; functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT up to Android Main menu.<br />
	2. The DUT should support Gallery apk.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy the image of PNG format into the device.<br />
	2. Open the gallery app.<br />
	3. Long press on any one of the image file.<br />
	4. Click on menu button, Rotate option will be displayed click on that option.<br />
	5. It will show dialogue box&nbsp; and we have to select our required option.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The image should be rotated as our specified option without any clashes.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5380" name="Image:Check image details functionality">
	<node_order><![CDATA[1023]]></node_order>
	<externalid><![CDATA[267]]></externalid>
	<fullexternalid><![CDATA[test-267]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check DUT is supporting the&nbsp; image details functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT up to Android Main menu.<br />
	2. The Dut should support Gallery apk.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy the image of PNG format into the device.<br />
	2. Open the gallery app.<br />
	3. Long press on any one of the image file.<br />
	4. Click on details option.&nbsp;&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. When click on details option of ther Image, the details of the image should display like storage,format etc., without any issue.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5383" name="Image-Str:Check image slideshow functionality">
	<node_order><![CDATA[1024]]></node_order>
	<externalid><![CDATA[268]]></externalid>
	<fullexternalid><![CDATA[test-268]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check DUT is supporting the&nbsp; image slideshow functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT up to Android Main menu.<br />
	2. The Dut should support Gallery apk.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open the Gallery app.<br />
	2. Select&nbsp; slideshow option.<br />
	3. Open any image file.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Images should be displayed one after another continuously&nbsp; without any clashes.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5386" name="Image-Conc:Check image slideshow functoionality while downloading">
	<node_order><![CDATA[1025]]></node_order>
	<externalid><![CDATA[296]]></externalid>
	<fullexternalid><![CDATA[test-296]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting image slideshow while downloading a file through wifi or not</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT up to Android Main menu.<br />
	2. The Dut should support Gallery apk.<br />
	3. DUT should have Ethernet connection.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to browser and type good morning gif download in search menu.<br />
	2. Click on any one of available links.<br />
	3. Click on any one of gif file&nbsp; you want to download.<br />
	4. Then click on download option showing there.<br />
	5. Open the Gallery app.<br />
	6. Select&nbsp; slideshow option.<br />
	7. Open any image file.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Search results should be displayed without buffering.<br />
	2. Download of file should be continued in the background.<br />
	3. Images should be displayed one after another continuously&nbsp; without any clashes.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="5389" name="Text" >
<node_order><![CDATA[4]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="5390" name="Text:Check text file open and close functionality">
	<node_order><![CDATA[1000]]></node_order>
	<externalid><![CDATA[269]]></externalid>
	<fullexternalid><![CDATA[test-269]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check DUT is supporting the text file open and close functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu<br />
	2. Build should support text file(.txt) format .</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy text file into device which has some data,<br />
	2. Open text file from any application like chrome or HTML viewer or any other third party document reader applications by going to Settings -&gt; Storage -&gt; Explore and click on that.<br />
	3. Then close the file.<br />
	<br />
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The text file should be opened and closed without any issues.<br />
	2. The .txt file should be readable by us.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_text_open.TestOpenText]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5393" name="Text:Check text file delete functionality">
	<node_order><![CDATA[1001]]></node_order>
	<externalid><![CDATA[270]]></externalid>
	<fullexternalid><![CDATA[test-270]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check DUT is supporting the text files delete functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support text file(.txt) format.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy text file into device which has some data.<br />
	2. Open text file from any application like chrome or HTML viewer or any other third party document reader applications by going to Settings -&gt; Storage -&gt; Explore and click on that<br />
	3. Double click on text file.<br />
	4. It will show us delete icon.<br />
	5. click on delete icon.<br />
	6. It will show a dialogue box &quot;Delete *.txt? Yes or No&quot;,we have to select our required option.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Delete dialogue box should show with the message of &ldquo;Are you sure want to delete? Yes or No&rdquo; when clicked on delete option for text file.<br />
	2. The text file should be deleted from the galler,when clicked on &ldquo;Yes&rdquo; option and text file should not delete when click on &ldquo;No&rdquo; option.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_text_delete.TestDeleteText]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5396" name="Text-Str:Check multiple(25) text files viewing functionality">
	<node_order><![CDATA[1002]]></node_order>
	<externalid><![CDATA[271]]></externalid>
	<fullexternalid><![CDATA[test-271]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check DUT is supporting the multiple text files pushed and viewed at once or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. Build should support text file(.txt) format.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy 100 or more .txt files into DUT.<br />
	2. Open text file from any application like chrome or HTML viewer or any other third party document reader applications by going to Settings -&gt; Storage -&gt; Explore and click on that. 3. Continuously open 100 text files.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. All the text files should be opened without any clashes.<br />
	2. It should be visible clearly for us.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_text_open_multiple_times.TestOpenTextMultipleTimes]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite></testsuite><testsuite id="5399" name="PowerSuspendResume" >
<node_order><![CDATA[8]]></node_order>
<details><![CDATA[<p>
	Create test suite for Power, suspend and resume modules</p>
]]></details> 

<testcase internalid="5400" name="PowerSuspendResume:Check power cable plugin detection">
	<node_order><![CDATA[1000]]></node_order>
	<externalid><![CDATA[55]]></externalid>
	<fullexternalid><![CDATA[test-55]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check power cable plug-in functionality</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Working device should be available.</div>
<div>
	2. Power cable with adopter should be available.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Connect the power adopter to Power resource.</div>
<div>
	2. Now plug-in the power cable to device power port.</div>
<div>
	3. Check whether Red led is shown or not. If DUT shown the Red color led at power cable plug-in port then power cable is detected by DUT.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. After power cable plug-in to power connector in the device then Red color led should show at power cable port, it means power cable should be detected by DUT.&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5403" name="PowerSuspendResume:Check LEDs colors at power connector">
	<node_order><![CDATA[1001]]></node_order>
	<externalid><![CDATA[56]]></externalid>
	<fullexternalid><![CDATA[test-56]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether Red color LED and Green color LEDs are sown at power connector on the device when the device is booting.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.</div>
<div>
	2. Power cable with adopter should be available and it should be connected to power source.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Now plug-in the power cable to device power port.</div>
<div>
	2. Turn on the device by using power button.</div>
<div>
	3. Check whether Red color LED and green color LEDs are shown at power cable plug-in port or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. After power on the device, the Red color LED and green color LED should show at power cable plug-in point.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5406" name="PowerSuspendResume:Check device suspend/resume functionality">
	<node_order><![CDATA[1002]]></node_order>
	<externalid><![CDATA[57]]></externalid>
	<fullexternalid><![CDATA[test-57]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the Display after Suspend and Resume</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Connect the HDMI display to the board and then power on the board. Check the display screen.</div>
<div>
	2. Disable the stay awake option in developer options</div>
<div>
	3. Set the wake time in display to 15 seconds</div>
<div>
	4.Suspend and resume the DUT then check the Display.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	&nbsp;</div>
<div>
	DUT Should enter into the sleep mode and display screen becomes blank and also device should resume from suspend state properly,Display screen should shown properly without any issues.&nbsp;</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5409" name="PowerSuspendResume:Check BT connection after suspend/resume">
	<node_order><![CDATA[1003]]></node_order>
	<externalid><![CDATA[58]]></externalid>
	<fullexternalid><![CDATA[test-58]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check bluetooth is connected after suspend and resume</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Connect the HDMI display to the board and then power on the board. Check the display screen.</div>
<div>
	2. Enable bluetooth and connect to some other device&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3.Disable the stay awake option in developer options</div>
<div>
	4. Set the wake time in display to 15 seconds</div>
<div>
	5.Suspend and resume the DUT then check the Display.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;6.Check whether bluetooth is still connected to the device after resume</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	&nbsp;</div>
<div>
	DUT Should enter into the sleep and resume properly,and bluetooth should be connected to the device after resume.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5412" name="PowerSuspendResume:Check WiFi after suspend/resume">
	<node_order><![CDATA[1004]]></node_order>
	<externalid><![CDATA[59]]></externalid>
	<fullexternalid><![CDATA[test-59]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check WiFi is connected after suspend and resume</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Connect the HDMI display to the board and then power on the board.Check the display screen.</div>
<div>
	2. Enable WiFi and connect to some network available&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3.Disable the stay awake option in developer options</div>
<div>
	4. Set the wake time in display to 15 seconds</div>
<div>
	5.Suspend and resume the DUT then check the Display.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;6.Check whether WiFi is still connected to the device after resume</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	&nbsp;</div>
<div>
	DUT Should enter into the sleep and resume properly,and WiFi should be connected to the device after resume.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5415" name="PowerSuspendResume:Check adb connection after suspend/resume">
	<node_order><![CDATA[1006]]></node_order>
	<externalid><![CDATA[98]]></externalid>
	<fullexternalid><![CDATA[test-98]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the adb connection after Suspend and Resume</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Connect the HDMI display to the board and then power on the board. Check the display screen.</div>
<div>
	2. Disable the stay awake option in developer options</div>
<div>
	3. Set the wake time in display to 15 seconds</div>
<div>
	4.Suspend and resume the DUT then check the Display.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5.Check whether adb is able to connect to the device</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	&nbsp;</div>
<div>
	DUT Should enter into the sleep and resume properly,and adb should be able to connect to the device with adb connect commands</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5418" name="PowerSuspendResume:Check audio playback during device suspend state">
	<node_order><![CDATA[1007]]></node_order>
	<externalid><![CDATA[99]]></externalid>
	<fullexternalid><![CDATA[test-99]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify audio playback functionality during device suspend state.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1.DUT boots up to Android Main menu</div>
<div>
	2.Copy music files into device.&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Open Music application</div>
<div>
	2.Start audio playback</div>
<div>
	3. Set the display time for 15 seconds.</div>
<div>
	4. After device entered into suspend state, check whether audio playback is still happening or not.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. After display/screen timeout completed, DUT should entered into sleep mode.</div>
<div>
	2. playback should be continue, even when the display goes suspend mode</div>
<div>
	&nbsp;</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5421" name="PowerSuspendResume:Check DUT wakeup with Alarm event">
	<node_order><![CDATA[1008]]></node_order>
	<externalid><![CDATA[100]]></externalid>
	<fullexternalid><![CDATA[test-100]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify DUT wakeup functionality with Alarm event.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1.DUT boots up to Android Main menu</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	&nbsp;</div>
<div>
	1.Press on Clock application.</div>
<div>
	2.Press on clock symbol.</div>
<div>
	3.Press on Add alarm.</div>
<div>
	4.Set Alarm to 5 min and press on &quot;Done&quot; button.</div>
<div>
	5.Set screen time out to 15 seconds.</div>
<div>
	6. After screen time out completed, device entered into sleep mode.</div>
<div>
	7.Now wait until alarm set time completed and check whether device is wakeup from suspend state with alarm event.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. Device should go to suspend state after screen time out completed.</div>
<div>
	2.DUT should wake up from suspend state once alarm time up.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5424" name="PowerSuspendResume:Check Airplane mode after suspend/resume">
	<node_order><![CDATA[1009]]></node_order>
	<externalid><![CDATA[484]]></externalid>
	<fullexternalid><![CDATA[test-484]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify airplane mode functionality after suspend and resume</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Power cable with adopter should be available and it should be connected to power source.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Goto settings.<br />
	2. Goto wireless &amp; network settings &rarr; More.<br />
	3. Check whether system is able to enable the Airplane option or not.<br />
	4. Disable the stay awake option in developer options.<br />
	5. Set the wake time in display to 15 seconds.<br />
	6. Suspend and resume the DUT then check Airplane mode.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Airplane mode should be enabled after suspend and resume.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5427" name="PowerSuspendResume:Check again system going to suspend/resume after reboot">
	<node_order><![CDATA[1010]]></node_order>
	<externalid><![CDATA[485]]></externalid>
	<fullexternalid><![CDATA[test-485]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify if the device again goes to suspend and resumes back after reboot</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Power cable with adopter should be available and it should be connected to power source.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the DP&nbsp; display to the board and then power on the board.<br />
	2. Check the display screen.<br />
	3. Disable the stay awake option in developer options.<br />
	4. Set the wake time in display to 15 seconds.<br />
	5. Suspend and resume the DUT then check the Display.<br />
	6. Reboot the device and check if the device suspends after 15 seconds.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. DUT should suspend and resume back after reboot also.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5430" name="PowerSuspendResume:Check device suspend/resume after 15 seconds when sleep time is set">
	<node_order><![CDATA[1011]]></node_order>
	<externalid><![CDATA[486]]></externalid>
	<fullexternalid><![CDATA[test-486]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check device goes to suspend state in 15 seconds if selected in sleep time options</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Power cable with adopter should be available and it should be connected to power source.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.Connect the DP&nbsp; display to the board and then power on the board. Check the display screen.<br />
	2. Disable the stay awake option in developer options.<br />
	3. Set the wake time in display to 15 seconds.<br />
	4.Check whether the device Suspends in 15 seconds and resume the DUT then check the Display.&nbsp;&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Device should suspend in 15 seconds.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5433" name="PowerSuspendResume:Check device suspend/resume after 30 seconds when sleep time is set">
	<node_order><![CDATA[1012]]></node_order>
	<externalid><![CDATA[487]]></externalid>
	<fullexternalid><![CDATA[test-487]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check device goes to suspend state in 30 seconds if selected in sleep time options</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Power cable with adopter should be available and it should be connected to power source.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the DP&nbsp; display to the board and then power on the board. Check the display screen.<br />
	2. Disable the stay awake option in developer options.<br />
	3. Set the wake time in display to 30 seconds.<br />
	4. Check whether the device Suspends in 15 seconds and resume the DUT then check the Display.&nbsp;&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Device should suspend in 30 seconds.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5436" name="PowerSuspendResume:Check device suspend/resume after 1 minute when sleep time is set">
	<node_order><![CDATA[1013]]></node_order>
	<externalid><![CDATA[488]]></externalid>
	<fullexternalid><![CDATA[test-488]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check device goes to suspend state in 1 minute if selected in sleep time options</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Power cable with adopter should be available and it should be connected to power source.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the DP&nbsp; display to the board and then power on the board. Check the display screen.<br />
	2. Disable the stay awake option in developer options.<br />
	3. Set the wake time in display to 1 minute.<br />
	4. Check whether the device Suspends in 1 minute and resume the DUT then check the Display.&nbsp;&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Device should suspend in 1 minute.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5439" name="PowerSuspendResume:Check device suspend functionality if stay awake option is enabled">
	<node_order><![CDATA[1014]]></node_order>
	<externalid><![CDATA[489]]></externalid>
	<fullexternalid><![CDATA[test-489]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check if DUT doesn&#39;t go to suspend state if stay awake is selected in developer settings</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Power cable with adopter should be available and it should be connected to power source.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the DP&nbsp; display to the board and then power on the board. Check the display screen.<br />
	2. Enable the stay awake option in developer options.<br />
	3. Set the wake time in display to 15 seconds.<br />
	4. Check whether the device Suspends or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Device should not suspend as the stay awake is selected.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5442" name="PowerSuspendResume-Str:Check display after suspend/resume for 20 times">
	<node_order><![CDATA[1015]]></node_order>
	<externalid><![CDATA[490]]></externalid>
	<fullexternalid><![CDATA[test-490]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the Display after Suspend and Resume for 20 times</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Power cable with adopter should be available and it should be connected to power source.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the DP&nbsp; display to the board and then power on the board. Check the display screen.<br />
	2. Disable the stay awake option in developer options.<br />
	3. Set the wake time in display to 15 seconds.<br />
	4. Suspend and resume the DUT for 10 to 15 times and check the Display.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. DUT Should enter into the sleep mode and display screen should become black and also device should resume from suspend state properly,Display screen should be shown properly without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5445" name="PowerSuspendResume-Str:Check BT connection after suspend/resume for 20 times">
	<node_order><![CDATA[1016]]></node_order>
	<externalid><![CDATA[491]]></externalid>
	<fullexternalid><![CDATA[test-491]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check bluetooth is connected after suspend and resume for 20 times</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Power cable with adopter should be available and it should be connected to power source.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the DP&nbsp; display to the board and then power on the board. Check the display screen.<br />
	2. Enable bluetooth and connect to some other device.<br />
	3. Disable the stay awake option in developer options.<br />
	4. Set the wake time in display to 15 seconds.<br />
	5. Suspend and resume the DUT then check the Display.<br />
	6. Check whether bluetooth is still connected to the device after resume.<br />
	7. Repeat 5 and 6th step for 20 times.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. DUT Should enter into the sleep and resume properly,and bluetooth should be connected to the device after resume for every iteration.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5448" name="PowerSuspendResume-Str:Check WiFi connection after suspend/resume for 20 times">
	<node_order><![CDATA[1017]]></node_order>
	<externalid><![CDATA[492]]></externalid>
	<fullexternalid><![CDATA[test-492]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check WiFi is connected after suspend and resume for 20 times</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Power cable with adopter should be available and it should be connected to power source.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the DP&nbsp; display to the board and then power on the board.Check the display screen.<br />
	2. Enable WiFi and connect to some network available.<br />
	3. Disable the stay awake option in developer options.<br />
	4. Set the wake time in display to 15 seconds.<br />
	5. Suspend and resume the DUT then check the Display.<br />
	6. Check whether WiFi is still connected to the device after resume.<br />
	7. Repeat 5 and 6th step for 20 times.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. DUT Should enter into the sleep and resume properly,and WiFi should be connected to the device after resume for every iteration.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5451" name="PowerSuspendResume-Str:Check device audio playback functionality during suspend state for 20 times">
	<node_order><![CDATA[1018]]></node_order>
	<externalid><![CDATA[493]]></externalid>
	<fullexternalid><![CDATA[test-493]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify audio playback functionality during device suspend state for 20 times</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Power cable with adopter should be available and it should be connected to power source.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open Music application.<br />
	2. Start audio playback.<br />
	3. Set the display time for 15 seconds.<br />
	4. After device entered into suspend state, check whether audio playback is still happening or not.<br />
	5. Repeat 4th&nbsp; step for 20 times.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. After display/screen timeout completed, DUT should entered into sleep mode.<br />
	2. playback should be continue, even when the display goes suspend mode&nbsp; for every iteration.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5454" name="PowerSuspendResume-Str:Check Airplane mode after suspend/resume for 20 times">
	<node_order><![CDATA[1019]]></node_order>
	<externalid><![CDATA[494]]></externalid>
	<fullexternalid><![CDATA[test-494]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify airplane mode functionality after suspend and resume for 20 times</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Power cable with adopter should be available and it should be connected to power source.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Goto settings.<br />
	2. Goto wireless &amp; network settings &rarr; More.<br />
	3. Check whether system is able to enable the Airplane option or not.<br />
	4. Disable the stay awake option in developer options.<br />
	5. Set the wake time in display to 15 seconds.<br />
	6. Suspend and resume the DUT then check Airplane mode.<br />
	7. Repeat 6th&nbsp; step for 20 times.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Airplane mode should be enabled after suspend and resume for every iteration.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5457" name="PowerSuspendResume-Str:Check device again going to suspend/resume after 20 times reboot">
	<node_order><![CDATA[1020]]></node_order>
	<externalid><![CDATA[495]]></externalid>
	<fullexternalid><![CDATA[test-495]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify if the device again goes to suspend and resumes back after reboot for 20 times</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Power cable with adopter should be available and it should be connected to power source.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the DP&nbsp; display to the board and then power on the board. Check the display screen.<br />
	2. Disable the stay awake option in developer options.<br />
	3. Set the wake time in display to 15 seconds.<br />
	4. Suspend and resume the DUT then check the Display.<br />
	5. Reboot the device and check if the device suspends after 15 seconds.<br />
	6. Repeat 5th&nbsp; step for 20 times.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. DUT should suspend and resume back after reboot also for every iteration.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5460" name="PowerSuspendResume-Conc:Check BT,WiFi and Airplane mode after suspend/resume">
	<node_order><![CDATA[1021]]></node_order>
	<externalid><![CDATA[496]]></externalid>
	<fullexternalid><![CDATA[test-496]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check Bluetooth, Wifi, and airplane mode after suspend and resume</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Power cable with adopter should be available and it should be connected to power source.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the DP&nbsp; display to the board and then power on the board. Check the display screen.<br />
	2. Enable airplane mode in the settings.<br />
	3. Enable bluetooth and connect to some other device.<br />
	4. Enable Wifi and connect to some network available.<br />
	5. Disable the stay awake option in developer options.<br />
	6. Set the wake time in display to 15 seconds.<br />
	7. Suspend and resume the DUT then check the Display.<br />
	8. Check whether bluetooth is still connected to the device, Wifi is connected to the network and airplane mode is still enabled after resume.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Bluetooth should be still connected to the device, Wifi should be connected to the network and airplane mode should be enabled after resume.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5463" name="PowerSuspendResume-Conc:Check BT file transfer,WiFi download after suspend/resume">
	<node_order><![CDATA[1022]]></node_order>
	<externalid><![CDATA[497]]></externalid>
	<fullexternalid><![CDATA[test-497]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check BT file transfer and downloading files after suspend and resume</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Power cable with adopter should be available and it should be connected to power source.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the DP&nbsp; display to the board and then power on the board. Check the display screen.<br />
	2. Enable bluetooth and connect to some other device.<br />
	3. Enable Wifi and connect to some network available.<br />
	4. Transfer large Files to FTP devices.<br />
	5. Download large files while FTP files are transferred.<br />
	6. Disable the stay awake option in developer options.<br />
	7. Set the wake time in display to 15 seconds.<br />
	8. Suspend and resume the DUT then check the Display.<br />
	9. Check whether BT files are transferred and files are downloaded without any issues.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. BT files should be transferred and files should be downloaded without getting effected by suspend and resume.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5466" name="PowerSuspendResume-Conc:Check is same browser displaying after suspend/resume">
	<node_order><![CDATA[1023]]></node_order>
	<externalid><![CDATA[498]]></externalid>
	<fullexternalid><![CDATA[test-498]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check if the same web browser is displayed after suspend and resume</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Power cable with adopter should be available and it should be connected to power source.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the DP&nbsp; display to the board and then power on the board. Check the display screen .<br />
	2. Enable Wifi and connect to some network available.<br />
	3. Open the Browser Apk,<br />
	4. Open the &ldquo;www.msn.com&rdquo; URL.<br />
	5. Check whether the MSN website open or not.<br />
	6. Disable the stay awake option in developer options.<br />
	7. Set the wake time in display to 15 seconds.<br />
	8. Suspend and resume the DUT then check the Display if the browser is displayed.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Browser opened should be displayed after suspend and resume.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5469" name="PowerSuspendResume: Conc: Check downloading files after suspend and resume">
	<node_order><![CDATA[1024]]></node_order>
	<externalid><![CDATA[507]]></externalid>
	<fullexternalid><![CDATA[test-507]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check downloading files after suspend and resume</p>
]]></summary>
	<preconditions><![CDATA[<p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the DP&nbsp; display to the board and then power on the board. Check the display screen.<br />
	2. Enable bluetooth and connect to some other device.<br />
	3. Enable Wifi and connect to some network available.<br />
	4. Download large files.<br />
	5. Disable the stay awake option in developer options.<br />
	6. Set the wake time in display to 15 seconds.<br />
	7. Suspend and resume the DUT then check the Display.<br />
	8. Check whether files are downloaded without any issues.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	files should be downloaded without getting effected by suspend and resume.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="5472" name="Camera" >
<node_order><![CDATA[9]]></node_order>
<details><![CDATA[<p>
	Create test suite for Camera module</p>
]]></details> 

<testcase internalid="5473" name="Camera:Check camera open">
	<node_order><![CDATA[1000]]></node_order>
	<externalid><![CDATA[101]]></externalid>
	<fullexternalid><![CDATA[test-101]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Camera is Opening without any Flickering</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1.Boot the device completely up to home screen</div>
<div>
	2.Camera module should be present on the DUT</div>
<div>
	3.Build should support Camera and Display functionality.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Launch the Camera Application.</div>
<div>
	2.Look for any flickering or corruptions on start up.</div>
<div>
	&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1.Camera should launch without any flickering or corruptions.</div>
<div>
	&nbsp;</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5476" name="Camera:Check camera close">
	<node_order><![CDATA[1001]]></node_order>
	<externalid><![CDATA[102]]></externalid>
	<fullexternalid><![CDATA[test-102]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether camera is closing without any issues.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1.Boot the device completely up to home screen</div>
<div>
	2.Camera module should be present on the DUT</div>
<div>
	3.Build should support Camera and Display functionality.</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Launch the camera application.&nbsp; &nbsp;</div>
<div>
	2. Close camera app&nbsp;</div>
<div>
	3. Check whether camera is closing without any issues.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Camera should close smoothly without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5479" name="Camera:Check camera image preview">
	<node_order><![CDATA[1002]]></node_order>
	<externalid><![CDATA[103]]></externalid>
	<fullexternalid><![CDATA[test-103]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the Image Preview Displayed</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1.Boot the device completely up to home screen</div>
<div>
	2.Camera module should be present on the DUT</div>
<div>
	3.Build should support Camera and Display functionality.</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Open Camera app</div>
<div>
	2. Check the image Preview Displayed</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. There should not be any issues while launching camera application</div>
<div>
	&nbsp;</div>
<div>
	2. Image preview should appear without any blur or other issues.</div>
<div>
	&nbsp;</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5482" name="Camera:Check able to capture an image">
	<node_order><![CDATA[1003]]></node_order>
	<externalid><![CDATA[104]]></externalid>
	<fullexternalid><![CDATA[test-104]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether Camera is able to capture image</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Camera functionality should be supported in the build</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1 Select camera icon available in home screen 2.Try to capture the image in Normal mode.&nbsp; &nbsp; &nbsp; &nbsp;3.Check whether proper image is captured and stored in the respective folder in sdcard.</p>
]]></actions>
	<expectedresults><![CDATA[<div>
	&nbsp;</div>
<div>
	Image should be captured and stored in the respective folder in sdcard.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5485" name="Camera:Check camera is auto focus of image">
	<node_order><![CDATA[1004]]></node_order>
	<externalid><![CDATA[105]]></externalid>
	<fullexternalid><![CDATA[test-105]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether Camera is able to Auto focus while capturing image</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Camera functionality should be supported in the build</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1 Select camera icon available in home screen.</p>
<p>
	2.Try to focus a specific object while capturing the image.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3.Check whether the specific object is focused&nbsp; in the image captured.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	Specified object should be focused in the image captured.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5488" name="Camera:Check time for opening camera application">
	<node_order><![CDATA[1005]]></node_order>
	<externalid><![CDATA[130]]></externalid>
	<fullexternalid><![CDATA[test-130]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Calculate time taken to open camera application</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1.DUT should boot up to Android Main menu<br />
	2.Build should be support Camera.<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	<br />
	1.Open camera app.<br />
	2.Capture time taken to open camera app</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.Camera should open within 2 seconds.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5491" name="Camera:Check camera open and close multiple times">
	<node_order><![CDATA[1006]]></node_order>
	<externalid><![CDATA[131]]></externalid>
	<fullexternalid><![CDATA[test-131]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check stability of camera after Open/Close multiple times</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1.Boot the device completely up to home screen<br />
	2.Camera module should be present on the DUT<br />
	3.Build should support Camera and Display functionality.<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Launch the camera application.&nbsp; &nbsp;<br />
	2. Close camera app<br />
	3. Repeat above steps for multiple times.<br />
	4.Check stability of camera</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Camera should open/close&nbsp; without any issue for each time.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5494" name="Camera:Check different exposure images">
	<node_order><![CDATA[1007]]></node_order>
	<externalid><![CDATA[132]]></externalid>
	<fullexternalid><![CDATA[test-132]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Capture an image with Different&nbsp; Exposure&nbsp; values.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1.DUT should boot up to Android Main menu<br />
	2. Camera should be supported by the build.<br />
	3. Use any standard colour or black and white image as target image.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open Camera app.<br />
	2. Go to settings.<br />
	3. Capture images by setting different Exposure values like +2, +1, 0, -1, -2<br />
	4. Check the difference of different exposure Capture an images .</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Images should be captured and should be stored in the DUT with changed Settings of the image.<br />
	2. Successive images from -2 EV to +2 EV should appear appear brighter (e.g. -2 EV should be the darkest and +2 EV should be the brightest)</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5497" name="Camera:Check auto exposure functionality">
	<node_order><![CDATA[1008]]></node_order>
	<externalid><![CDATA[133]]></externalid>
	<fullexternalid><![CDATA[test-133]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Capture the image with Auto Exposure.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1.DUT should boot up to Android Main menu<br />
	2. Camera should be supported by the build.<br />
	3. Use any standard colour or black and white image as target image.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open Camera app<br />
	<br />
	2. Set Auto Exposure mode to true<br />
	<br />
	3. Capture an image .</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.Image should be captured and should be stored in the DUT with changed Settings of the image.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5500" name="Camera:Check image color quality">
	<node_order><![CDATA[1009]]></node_order>
	<externalid><![CDATA[134]]></externalid>
	<fullexternalid><![CDATA[test-134]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify the colour quality of the captured image</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1.DUT should boot up to Android Main menu<br />
	2. Camera should be supported by the build.<br />
	3. Use any standard colour or black and white image as target image.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Launch the camera application.<br />
	2. Capture the images of different coloured objects like pure white, pure black, mixed colours etc..<br />
	3. Verify the colour quality of the image captured.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Camera application should be launched without any issue<br />
	2. Images of different colours should be captured.<br />
	3. There should not be any artifacts/blurness in the image captured and the colour quality should be fine as expected.<br />
	4.If the image contains any lines, they should be clear with out any artifacts.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5503" name="Camera:Check switching between Camera and Gallery app">
	<node_order><![CDATA[1010]]></node_order>
	<externalid><![CDATA[135]]></externalid>
	<fullexternalid><![CDATA[test-135]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify switch between Camera app and Gallery</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1.DUT should boot up to Android Main menu<br />
	2. Camera should be supported by the build.<br />
	3. Use any standard colour or black and white image as target image.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open camera app.<br />
	2. Take the images .<br />
	3. Press on image viewer.<br />
	4. Open images.<br />
	5. Now pictures are open in a gallery.<br />
	6. Now press back button or camera button in gallery.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. There should not be any issues while launching camera application<br />
	2. Image preview should appear without any blur<br />
	3. No issues while capturing the images<br />
	4. Images should be stored in DUT.<br />
	5. Images are open in a gallery without showing any issue.<br />
	6. Switch between gallery and camera should be work fine and should not be show any force closes while switching between them.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5506" name="Camera:Check dataloss in the captured image">
	<node_order><![CDATA[1011]]></node_order>
	<externalid><![CDATA[136]]></externalid>
	<fullexternalid><![CDATA[test-136]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Compare the captured image with that of the preview image to ensure that there is no loss of data.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1.DUT should boot up to Android Main menu<br />
	2. Camera should be supported by the build.<br />
	3. Use any standard colour or black and white image as target image.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	<br />
	1. Launch the camera application.<br />
	2. Capture an image.<br />
	3. check the captured image</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.Camera should launch with out any flickering or corruptions.<br />
	2. The captured image should be exactly same as it was in the preview window.<br />
	3. No missing portion either in image or in preview should happen.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5509" name="Camera:Check Camera and Gallery app switching multiple times">
	<node_order><![CDATA[1012]]></node_order>
	<externalid><![CDATA[137]]></externalid>
	<fullexternalid><![CDATA[test-137]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify switch between Camera app and Gallery for 25 times.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1.DUT should boot up to Android Main menu<br />
	2. Camera should be supported by the build.<br />
	3. Use any standard colour or black and white image as target image.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open camera app.<br />
	2. Take the images .<br />
	3. Press on image viewer.<br />
	4. Open images.<br />
	5. Now pictures are open in a gallery.<br />
	6. Now press back button or camera button in gallery.<br />
	7. Repeat the steps from 3 to 6 25 times.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. There should not be any issues while launching camera application<br />
	2. Image preview should appear without any blur<br />
	3. No issues while capturing the images<br />
	4. Images should be stored in DUT.<br />
	5. Images are open in a gallery without showing any issue.<br />
	6. Switch between gallery and camera should be work fine for each iteration.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5512" name="Camera:Check image capturing for multiple times">
	<node_order><![CDATA[1013]]></node_order>
	<externalid><![CDATA[138]]></externalid>
	<fullexternalid><![CDATA[test-138]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Capture Images continuously for 500 times</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1.DUT should boot up to Android Main menu<br />
	2. Camera should be supported by the build.<br />
	3. Use any standard colour or black and white image as target image.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open camera app.<br />
	2. Try to capture 500 images.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Camera should be able to capture 500 images continuously without any issue<br />
	&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5515" name="Camera:Check  VGA mode image capturing">
	<node_order><![CDATA[1014]]></node_order>
	<externalid><![CDATA[139]]></externalid>
	<fullexternalid><![CDATA[test-139]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Capture image in VGA mode</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1.DUT should boot up to Android Main menu<br />
	2. Camera should be supported by the build.<br />
	3. Use any standard colour or black and white image as target image.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open Camera app<br />
	2. Set the Camera in VGA mode<br />
	3. Click on Capture Button to save the Image<br />
	4. Check the captured Image and see if there are any blur or color artifacts and distortions.<br />
	5. check the Image quality, make sure all the colors are same as in the original scene captured</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Image should be captured and should be stored in the DUT with changed Settings of the image.<br />
	2. check the Image resolution and make sure that it will be 640x480 in size.<br />
	3. Image Quality should match with the scene captured.<br />
	&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5518" name="Camera:Check image capturing with specific resolution">
	<node_order><![CDATA[1015]]></node_order>
	<externalid><![CDATA[140]]></externalid>
	<fullexternalid><![CDATA[test-140]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Capture image with (5MP) 2592x1944&nbsp; resolution.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1.DUT should boot up to Android Main menu<br />
	2. Camera should be supported by the build.<br />
	3. Use any standard colour or black and white image as target image.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open Camera app<br />
	2. set the image setting to 5MP ( 2592x1944 resolution.)<br />
	2. click on Capture button<br />
	3. Open the image in Gallery or in PC and Check the Image quality, size etc..</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.Image should be captured and should be stored in the DUT with changed Settings of the image.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5521" name="Camera:Check image capturing with various modes">
	<node_order><![CDATA[1016]]></node_order>
	<externalid><![CDATA[141]]></externalid>
	<fullexternalid><![CDATA[test-141]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Capture an Image with Auto, Daylight,Cloudy,Fluorescent and incandescent modes using White balance</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1.DUT should boot up to Android Main menu<br />
	2. Camera should be supported by the build.<br />
	3. Use any standard colour or black and white image as target image.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open Camera app<br />
	2. Go to settings ,select White balance.<br />
	3. Capture an image by setting different white balance options like Auto, Daylight,Cloudy,Fluorescent and incandescent modes .<br />
	4. Check the difference with other images</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Images should be captured and should be stored in DUT with selected White balanced modes.<br />
	2. Captured images have&nbsp; Differences with other white balance images.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5524" name="Camera:Check preview list captured images">
	<node_order><![CDATA[1017]]></node_order>
	<externalid><![CDATA[142]]></externalid>
	<fullexternalid><![CDATA[test-142]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check if captured images are available/visible in Image preview list</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1.DUT should boot up to Android Main menu<br />
	2. Camera should be supported by the build.<br />
	3. Use any standard colour or black and white image as target image.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.Open Camera app.<br />
	2. Capture the images.<br />
	3.Go to Image preview list.<br />
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.Captured images should be available in preview list.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5527" name="Camera:Check deleting images">
	<node_order><![CDATA[1018]]></node_order>
	<externalid><![CDATA[143]]></externalid>
	<fullexternalid><![CDATA[test-143]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check delete functionality of Captured image.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1.DUT should boot up to Android Main menu<br />
	2. Camera should be supported by the build.<br />
	3. Use any standard colour or black and white image as target image.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.Open Camera app.<br />
	2.Capture the images.<br />
	3.Select the delete option and try to delete the captured image.<br />
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.Captured image should be deleted.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5530" name="Camera:Check R,G,B values of captured images">
	<node_order><![CDATA[1019]]></node_order>
	<externalid><![CDATA[144]]></externalid>
	<fullexternalid><![CDATA[test-144]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check R,G,B values for captured image.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1.DUT should boot up to Android Main menu<br />
	2. Camera should be supported by the build.<br />
	3. Use any standard colour or black and white image as target image.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Launch the camera app .<br />
	2.Capture image.<br />
	3. Calculate R/G,G/B,R/B values of the captured image.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. All the values of red/green, red/blue and green/blue for captured image should be close to 1.0.<br />
	&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5533" name="Camera:Check for default settings restoration">
	<node_order><![CDATA[1020]]></node_order>
	<externalid><![CDATA[145]]></externalid>
	<fullexternalid><![CDATA[test-145]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether default settings are restored when selected</p>
]]></summary>
	<preconditions><![CDATA[<p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1 Select camera icon available in home screen&nbsp; &nbsp;<br />
	2.Go to Camera settings&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />
	3. Select &ldquo;restore to default settings&rdquo; option&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />
	4.Check whether all the default settings are restored.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	All the default camera settings should be restored once it is selected.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5536" name="Camera:Check captured image resolution">
	<node_order><![CDATA[1021]]></node_order>
	<externalid><![CDATA[146]]></externalid>
	<fullexternalid><![CDATA[test-146]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether proper resolution image is captured</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu<br />
	2. Camera functionality should be supported in the build</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1 Select camera icon available in home screen &nbsp;<br />
	2.Go to Camera settings&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />
	3. Select the resolution of the images to be captured&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />
	4.Check whether captured images are of the specified resolution</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	Images captured should be of the specified resolution.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5539" name="Camera:Check video recording functionality">
	<node_order><![CDATA[1022]]></node_order>
	<externalid><![CDATA[147]]></externalid>
	<fullexternalid><![CDATA[test-147]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether Camera supports video recording feature</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu<br />
	2. Camera functionality should be supported in the build<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1 Select camera icon available in home screen<br />
	2.Select video recording option and try recording video of the objects.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />
	3.Check whether proper video is recorded and stored in the respective folder in sdcard.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	<br />
	Image of distant objects should be captured properly and stored in the respective folder in sdcard.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5542" name="Camera:Check recorded videos in preview list">
	<node_order><![CDATA[1023]]></node_order>
	<externalid><![CDATA[148]]></externalid>
	<fullexternalid><![CDATA[test-148]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check if recorded videos are available/visible in Video recording preview list.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1.DUT should boot up to Android Main menu<br />
	2. Camera should be supported by the build.<br />
	3. Use any standard colour or black and white image as target image.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.Open Camera app.<br />
	2. Shift to&nbsp; recording mode.<br />
	3.Record the videos.<br />
	4.Go to Recorded video preview list.<br />
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.Recorded videos should be available in recorded video preview list.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5545" name="Camera:Check deleting recorded videos">
	<node_order><![CDATA[1024]]></node_order>
	<externalid><![CDATA[149]]></externalid>
	<fullexternalid><![CDATA[test-149]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check delete functionality of Recorded video.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1.DUT should boot up to Android Main menu<br />
	2. Camera should be supported by the build.<br />
	3. Use any standard colour or black and white image as target image.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.Open Camera app.<br />
	2.Shift to&nbsp; recording mode.<br />
	3.Record the videos.<br />
	4.Select the delete option and try to delete the recorded video.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.Recorded video should be deleted.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5548" name="Camera:Check image contrast">
	<node_order><![CDATA[1025]]></node_order>
	<externalid><![CDATA[150]]></externalid>
	<fullexternalid><![CDATA[test-150]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether image is captured with high/low contrast</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu<br />
	2. Camera functionality should be supported in the build</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1 Select camera icon available in home screen&nbsp; &nbsp;<br />
	2.Go to Camera settings and change its contrast to high/low&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />
	3.Try to capture the image in high/low contrast.&nbsp; &nbsp;<br />
	4.Check whether image is captured when the contrast is changed to high/low</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	Image should be captured with high/low contrast.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5551" name="Camera:Check image sharpness">
	<node_order><![CDATA[1026]]></node_order>
	<externalid><![CDATA[151]]></externalid>
	<fullexternalid><![CDATA[test-151]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether image is captured with high/low sharpness</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu<br />
	2. Camera functionality should be supported in the build</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1 Select camera icon available in home screen&nbsp; &nbsp;<br />
	2.Go to Camera settings and change its contrast to high/low&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />
	3.Try to capture the image in high/low sharpness<br />
	4.Check whether image is captured when the sharpness is changed to high/low</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	Image should be captured with high/low sharpness.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5554" name="Camera:Check image saturation">
	<node_order><![CDATA[1027]]></node_order>
	<externalid><![CDATA[152]]></externalid>
	<fullexternalid><![CDATA[test-152]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether image is captured with high/low saturation</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu<br />
	2. Camera functionality should be supported in the build<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1 Select camera icon available in home screen&nbsp; &nbsp;<br />
	2.Go to Camera settings and change its saturation to high/low&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />
	3.Try to capture the image in high/low saturation.<br />
	4.Check whether image is captured when the saturation is changed to high/low</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	Image should be captured with high/low saturation.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5557" name="Camera:Check Zoom functionality">
	<node_order><![CDATA[1028]]></node_order>
	<externalid><![CDATA[153]]></externalid>
	<fullexternalid><![CDATA[test-153]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether Zoom is working while capturing the image</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu<br />
	2. Camera functionality should be supported in the build<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1 Select camera icon available in home screen&nbsp;&nbsp; &nbsp;<br />
	2.Try to Zoom in and out the area to be captured<br />
	3.Capture the image in Normal mode.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />
	4.Check whether proper Zoomed in/out&nbsp; image is captured and stored in the respective folder in device memory</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	<br />
	Zoom in/out Image should be captured and stored in the respective folder in device memory</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="5560" name="Graphics" >
<node_order><![CDATA[10]]></node_order>
<details><![CDATA[<p>
	Create test suite for Graphics</p>
]]></details> 

<testcase internalid="5561" name="Graphics:Check 3D graphics tests in Antutu benchmark">
	<node_order><![CDATA[1000]]></node_order>
	<externalid><![CDATA[60]]></externalid>
	<fullexternalid><![CDATA[test-60]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether 3D graphic tests are playing without any issues or not</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu.</div>
<div>
	2. The &ldquo;AnTuTu3DBench-com.antutu.benchmark.full-6000400-v6.0.4.apk&rdquo; benchmark should be available.&nbsp;</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Install the &ldquo;AnTuTu3DBench-com.antutu.benchmark.full-6000400-v6.0.4.apk&rdquo; in the device.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</div>
<div>
	2. Open the above installed apk.</div>
<div>
	3. Check whether 3D graphics tests(Marooned and Garden) are playing without any corruptions or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	The antutu 3D graphics tests should be played without any corruptions.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5564" name="Graphics:Check OpenGLES graphics in 3D Mark">
	<node_order><![CDATA[1003]]></node_order>
	<externalid><![CDATA[435]]></externalid>
	<fullexternalid><![CDATA[test-435]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether all the OpenGL ES graphics tests are playing without any issues or not in 3D Mark&nbsp; benchmark</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. The &ldquo;3D Mark-the gammers bench mark apk&rdquo;&nbsp; should be available.<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Install the &ldquo;3D Mark(android_gammers_com.futuremark.dmandroid.application_2.0.4580-4580.apk)-the gammers benchmark&rdquo; in the device.<br />
	2. Open the above installed apk.<br />
	3. Playback the 3D Mark slingshot extreme and slingshot extreme unlimitted tests for OpenGL ES and check all are playing without any corruptions or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. All the OpenGL ES tests in Slingshot extreme and slingshot exreme unlimitted tests in 3D mark should be played without any corruptions.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5567" name="Graphics:Check Vulkan graphics in 3DMark">
	<node_order><![CDATA[1004]]></node_order>
	<externalid><![CDATA[436]]></externalid>
	<fullexternalid><![CDATA[test-436]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check Vulkan graphics tests in 3DMark-the gamers benchmark</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. The &ldquo;3D Mark-the gammers bench mark apk&rdquo;&nbsp; should be available.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Install the &ldquo;3D Mark(android_gammers_com.futuremark.dmandroid.application_2.0.4580-4580.apk)-the gammers benchmark&rdquo; in the device.<br />
	2. Open the above installed apk.<br />
	3. Run Viulkan graphics tests and check vulkan graphics tests are playing without any issues or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. All the Vulkan graphics&nbsp; tests in 3D mark should be played without any corruptions.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5570" name="Graphics:Check graphics tests in GFXBench GL Benchmark">
	<node_order><![CDATA[1005]]></node_order>
	<externalid><![CDATA[437]]></externalid>
	<fullexternalid><![CDATA[test-437]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check Graphics tests in GFXBench GL Benchmark 4.0</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. The &ldquo;GFXBench GL Benchmark 4.0&rdquo;&nbsp; should be available.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Install the &ldquo;GFXBench GL Benchmark 4.0&rdquo; in the device.<br />
	2. Open the above installed apk.<br />
	3. Run High level tests and check all are playing without any corruptions or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. All the High Level tests in GFX GL benchmark should run without any graphic corruptions.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5573" name="Graphics:Check Nenamark functionality">
	<node_order><![CDATA[1006]]></node_order>
	<externalid><![CDATA[438]]></externalid>
	<fullexternalid><![CDATA[test-438]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check Nenamark is running without any issues or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. The &ldquo;NenaMark2-se.nena.nenamark2-5-v2.4.apk&rdquo; benchmark&nbsp; should be available.<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Install the &ldquo;NenaMark2&rdquo; in the device.<br />
	2. Open and run the above installed apk.<br />
	3. Check whether graphic test is run without any corruptions or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Graphic test in NenaMark2 should run without any graphic corruptions.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5576" name="Graphics:Check 2D graphics in PassMarkPerformanceTest benchmark">
	<node_order><![CDATA[1007]]></node_order>
	<externalid><![CDATA[439]]></externalid>
	<fullexternalid><![CDATA[test-439]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check 2D graphics tests in PassMarkPerformanceTest benchmark</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. The &ldquo;PassMarkPerformanceTest&rdquo; benchmark apk&nbsp; should be available.<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Install the &ldquo;PassMarkPerformanceTest&rdquo; benchmark apk&nbsp; in the device.<br />
	2. Open the above installed apk.<br />
	3. Run 2D tests and check whether 2D graphics tests are playing without any corruptions or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. 2D Graphics tests in &ldquo;PassMarkPerformanceTest&rdquo; apk should run without any graphic corruptions.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5579" name="Graphics:Check all tests are passed in CTSOpenGLTestCases">
	<node_order><![CDATA[1008]]></node_order>
	<externalid><![CDATA[440]]></externalid>
	<fullexternalid><![CDATA[test-440]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check all the tests are passed in CtsOpenGLTestCases module</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. The CTS binary &ldquo;android-cts-7.1_r17-linux_x86-x86.zip&#39; should be availlable.<br />
	2. Device should be boot upto android lock screen.<br />
	3. Setup the CTS as per run&nbsp; instructions mentioned in CTS google site.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the device adb over ethernet.<br />
	2. Open PC terminal<br />
	3. Go to downloaded CTS binary path i.e. &ldquo;cd android-cts/tools&rdquo;&nbsp; and run the &quot;CtsOpenGLTestCases&quot; module with the command &quot;./cts-tradefed run cts -m CtsOpenGLTestCases&quot; .<br />
	4. Observed whether all tests are passed without any issues.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. All the tests in CTS &ldquo;CtsOpenGLTestCases&rdquo; should be passed.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5582" name="Graphics:Check all tests are passed in CtsGraphicsTestCases">
	<node_order><![CDATA[1009]]></node_order>
	<externalid><![CDATA[441]]></externalid>
	<fullexternalid><![CDATA[test-441]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check all the tests are passed in CtsGraphicsTestCases module</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. The CTS binary &ldquo;android-cts-7.1_r17-linux_x86-x86.zip&#39; should be availlable.<br />
	2. Device should be boot upto android lock screen.<br />
	3. Setup the CTS as per run&nbsp; instructions mentioned in CTS google site.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the device adb over ethernet.<br />
	2. Open PC terminal<br />
	3. Go to downloaded CTS binary path i.e. &ldquo;cd android-cts/tools&rdquo;&nbsp; and run the &quot;CtsGraphicsTestCases&quot; module with the command &quot;./cts-tradefed run cts -m CtsGraphicsTestCases&quot; .<br />
	4. Observed whether all tests are passed without any issues.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. All the tests in CTS &ldquo;CtsGraphicsTestCases&rdquo; should be passed.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5585" name="Graphics:Check Temple Run game">
	<node_order><![CDATA[1010]]></node_order>
	<externalid><![CDATA[442]]></externalid>
	<fullexternalid><![CDATA[test-442]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Run Temple run game</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Device should be boot upto android lock screen.<br />
	2. Temple run game apk should be available.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Install the &ldquo;Temple run&rdquo; game in the device.<br />
	2. Open the above installed game and check whether it is playing without any issues or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Temple run game should be played without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5588" name="Graphics:Check Angry Birds game">
	<node_order><![CDATA[1011]]></node_order>
	<externalid><![CDATA[443]]></externalid>
	<fullexternalid><![CDATA[test-443]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Run Angry birds game</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Device should be boot upto android lock screen.<br />
	2. Angry birds game apk should be available.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Install the &ldquo;Angry birds&rdquo; game in the device.<br />
	2. Open the above installed game and check whether it is playing without any issues or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Angry birds game should be played without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5591" name="Graphics:Check live wallpapers functionality">
	<node_order><![CDATA[1012]]></node_order>
	<externalid><![CDATA[444]]></externalid>
	<fullexternalid><![CDATA[test-444]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check Live wall papers functionality</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Device should be boot upto android lock screen.<br />
	2. Device should support live wall papers.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Select the Live wall papers from the device widgets and set them to device home screen.<br />
	2. Check whether Live wall papers are functioning as per expecting or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Live wall papers should function as per user expectation based on the live wall paper type.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5594" name="Graphics:Check camera functionality">
	<node_order><![CDATA[1013]]></node_order>
	<externalid><![CDATA[445]]></externalid>
	<fullexternalid><![CDATA[test-445]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Capture image with camera</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Camera functionality should be supported in the build<br />
	3. Camera module should be present in the device.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open camera in the device.<br />
	2. Click on capture button.&nbsp;&nbsp;&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	<br />
	1. Image should be captured and stored in the respective folder in device.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5597" name="Graphics:Check camcorder functionality">
	<node_order><![CDATA[1014]]></node_order>
	<externalid><![CDATA[446]]></externalid>
	<fullexternalid><![CDATA[test-446]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Record video with camera</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu<br />
	2. Camera should support recording functionality.<br />
	3. Camera module should be present in the device.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open camera in the device.<br />
	2. Switch camera to&nbsp; recording mode.<br />
	3. Start record the video.&nbsp;&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Should be able to record the video using camera.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5600" name="Graphics-Str:Check graphics using Antutu benchmark for 5 times">
	<node_order><![CDATA[1015]]></node_order>
	<externalid><![CDATA[447]]></externalid>
	<fullexternalid><![CDATA[test-447]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Run Antutu 3D benchmark 5 times and check whether all the graphics tests are playing without any issues</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. The &ldquo;AnTuTu3DBench-com.antutu.benchmark.full-6000400-v6.0.4.apk&rdquo; benchmark should be available.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Install the &ldquo;AnTuTu3DBench-com.antutu.benchmark.full-6000400-v6.0.4.apk&rdquo; in the device.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />
	2. Open the above installed apk.<br />
	3. Run the tests.<br />
	4. Check whether 3D graphics tests(Marooned and Garden) are playing without any corruptions or not.<br />
	5. Repeat the above steps from 3 to 4 for 5 times.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. For each iteration,the antutu 3D graphics tests should be played without any corruptions.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5603" name="Graphics-Str:Check OpenGL ES graphics using 3DMark benchmark for 5 times">
	<node_order><![CDATA[1016]]></node_order>
	<externalid><![CDATA[448]]></externalid>
	<fullexternalid><![CDATA[test-448]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether all the OpenGL ES graphics tests are playing without any issues or not in 3D Mark&nbsp; benchmark for 5 times</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. The &ldquo;3D Mark-the gammers bench mark apk&rdquo;&nbsp; should be available.<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Install the &ldquo;3D Mark(android_gammers_com.futuremark.dmandroid.application_2.0.4580-4580.apk)-the gammers benchmark&rdquo; in the device.<br />
	2. Open the above installed apk.<br />
	3. Playback the 3D Mark slingshot extreme and slingshot extreme unlimitted tests for OpenGL ES and check all are playing without any corruptions or not.<br />
	4. Repeat the above step 5 times.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. For each iteration, all the OpenGL ES tests in Slingshot extreme and slingshot exreme unlimitted tests in 3D mark should be played without any corruptions.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p>
	&nbsp;</p>
<p>
	&nbsp;</p>
<p>
	&nbsp;</p>
<p>
	&nbsp;</p>
<p>
	&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5606" name="Graphics-Str:Check Vulkan graphics tests in 3DMark for 5 times">
	<node_order><![CDATA[1017]]></node_order>
	<externalid><![CDATA[449]]></externalid>
	<fullexternalid><![CDATA[test-449]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check Vulkan graphics tests in 3DMark-the gamers benchmark&nbsp; are playing without any issues or not for 5 times.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. The &ldquo;3D Mark-the gammers bench mark apk&rdquo;&nbsp; should be available.<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Install the &ldquo;3D Mark(android_gammers_com.futuremark.dmandroid.application_2.0.4580-4580.apk)-the gammers benchmark&rdquo; in the device.<br />
	2. Open the above installed apk.<br />
	3. Run Viulkan graphics tests and check vulkan graphics tests are playing without any issues or not.<br />
	4. Repeat the above step 5 times.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. For each iteration, all the Vulkan graphics&nbsp; tests in 3D mark should be played without any corruptions.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5609" name="Graphics-Str:Check graphics tests in GFX GL Benchmark for 5 times">
	<node_order><![CDATA[1018]]></node_order>
	<externalid><![CDATA[450]]></externalid>
	<fullexternalid><![CDATA[test-450]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Run GFX GL benchmark 5 times and check whether all the graphics tests are playing without any issues</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. The &ldquo;GFXBench GL Benchmark 4.0&rdquo;&nbsp; should be available.<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Install the &ldquo;GFXBench GL Benchmark 4.0&rdquo; in the device.<br />
	2. Open the above installed apk.<br />
	3. Run High level tests and check all are playing without any corruptions or not.<br />
	4. Repeat the above step 5 times.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. For each iteration, all the High Level tests in GFX GL benchmark should run without any graphic corruptions.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5612" name="Graphics-Str:Check CtsGraphicTestCases in CTS for 5 times">
	<node_order><![CDATA[1019]]></node_order>
	<externalid><![CDATA[451]]></externalid>
	<fullexternalid><![CDATA[test-451]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Run &ldquo;CtsGraphicsTestCases&rdquo; module in CTS for 5 times.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. The CTS binary &ldquo;android-cts-7.1_r17-linux_x86-x86.zip&#39; should be availlable.<br />
	2. Device should be boot upto android lock screen.<br />
	3. Setup the CTS as per run&nbsp; instructions mentioned in CTS google site.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the device adb over ethernet.<br />
	2. Open PC terminal<br />
	3. Go to downloaded CTS binary path i.e. &ldquo;cd android-cts/tools&rdquo;&nbsp; and run the &quot;CtsGraphicsTestCases&quot; module with the command &quot;./cts-tradefed run cts -m CtsGraphicsTestCases&quot; .<br />
	4. Observed whether all tests are passed without any issues.<br />
	5. Repeat the steps from 3 to 4 for 5 times.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. For each iteration, all the tests in CTS &ldquo;CtsGraphicsTestCases&rdquo; should be passed.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5615" name="Graphics-Str:Check CtsOpenGLtest cases in CTS for 5 times">
	<node_order><![CDATA[1020]]></node_order>
	<externalid><![CDATA[452]]></externalid>
	<fullexternalid><![CDATA[test-452]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Run &ldquo;CtsOpenGLTestCases&rdquo; module in CTS for 5 times.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. The CTS binary &ldquo;android-cts-7.1_r17-linux_x86-x86.zip&#39; should be availlable.<br />
	2. Device should be boot upto android lock screen.<br />
	3. Setup the CTS as per run&nbsp; instructions mentioned in CTS google site.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the device adb over ethernet.<br />
	2. Open PC terminal.<br />
	3. Go to downloaded CTS binary path i.e. &ldquo;cd android-cts/tools&rdquo;&nbsp; and run the &quot;CtsOpenGLTestCases&quot; module with the command &quot;./cts-tradefed run cts -m CtsOpenGLTestCases&quot; .<br />
	4. Observed whether all tests are passed without any issues.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. For each iteration, all the tests in CTS &ldquo;CtsOpenGLTestCases&rdquo; should be passed.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5618" name="Graphics-Str:Check different live wallpapers set at llock screen and home screen">
	<node_order><![CDATA[1021]]></node_order>
	<externalid><![CDATA[453]]></externalid>
	<fullexternalid><![CDATA[test-453]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Set the different live wall papers at lock screen and Home screen</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Device should be boot upto android lock screen.<br />
	2. Device should support live wall papers.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Select the Live wall papers from the device widgets and set them to device home screen and also set the live wall paper to lock screen.<br />
	2. Check whether Live wall papers are functioning as per expecting or not.<br />
	3. Repeat the above steps for different live wall papers.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. All the live wall papers should function as per user expectation based for lock screen and home screen.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5621" name="Graphics-Str:Check suspend and resume when Antutu benchmark is running for 10 times">
	<node_order><![CDATA[1022]]></node_order>
	<externalid><![CDATA[454]]></externalid>
	<fullexternalid><![CDATA[test-454]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check suspend and resume when Antutu 3D benchmark is running for 10 times.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. The &ldquo;AnTuTu3DBench-com.antutu.benchmark.full-6000400-v6.0.4.apk&rdquo; benchmark should be available.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Install the &ldquo;AnTuTu3DBench-com.antutu.benchmark.full-6000400-v6.0.4.apk&rdquo; in the device.<br />
	2. Open the above installed apk.<br />
	3. Run the tests.<br />
	4. While 3D Mark tests are running, try to suspend the device and also try to resume the device from suspend state.<br />
	5. Repeat the above steps for 10 times.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	For each iteration:<br />
	1. Device should enter into suspend state completely when try to suspend the device while running the 3D Mark graphics tests.<br />
	2. Device should resume from the suspend&nbsp; when try to resume and after resume graphics tests should run properly.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5624" name="Graphics-Conc:Check 3D Mark benchmark while playing audio">
	<node_order><![CDATA[1023]]></node_order>
	<externalid><![CDATA[455]]></externalid>
	<fullexternalid><![CDATA[test-455]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Run 3D mark benchmark during audio playback</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. The &ldquo;3D Mark-the gamers bench mark apk&rdquo;&nbsp; should be available.<br />
	3. Audio files should be available.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Install &ldquo;3D Mark benchmark&rdquo; in the device.<br />
	2. Push audio files into device.<br />
	3. Open music player and playback the above copied audio file.<br />
	4. Press Home button.<br />
	5. Open the above&nbsp; installed 3D Mark benchmark.<br />
	6. Run graphics tests in 3D mark.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Graphics tests should run in 3D mark even though audio playback is going on.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5627" name="Graphics-Conc:Check 3D Mark benchmark when WiFi and BT are on">
	<node_order><![CDATA[1024]]></node_order>
	<externalid><![CDATA[456]]></externalid>
	<fullexternalid><![CDATA[test-456]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Run 3D Mark benchmark when WiFi &amp; BT are on</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. The &ldquo;3D Mark-the gamers bench mark apk&rdquo;&nbsp; should be available.<br />
	3. WiFi and BT module should present in the device.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Install &ldquo;3D Mark benchmark&rdquo; in the device.<br />
	2. Go to settings &gt; wireless &amp; networks &gt; enable BT and WiFi.<br />
	3. Open the above&nbsp; installed 3D Mark benchmark.<br />
	4. Run graphics tests in 3D mark.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Graphics tests should run in 3D mark when BT and WiFi both are in ON state.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5630" name="Graphics-Conc:Check 3D Mark benchmark when transfering files using BT">
	<node_order><![CDATA[1025]]></node_order>
	<externalid><![CDATA[457]]></externalid>
	<fullexternalid><![CDATA[test-457]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Run 3D mark benchmark while BT file transfer is going on</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. The &ldquo;3D Mark-the gamers bench mark apk&rdquo;&nbsp; should be available.<br />
	3. WiFi and BT module should present in the device.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Install &ldquo;3D Mark benchmark&rdquo; in the device.<br />
	2. Go to settings &gt; wireless &amp; networks &gt; enable BT option and connect any other FTP device.<br />
	3. Do file transfer to other connected FTP device.<br />
	4. While file transfer is going on, open the above&nbsp; installed 3D Mark benchmark apk and run graphics tests in 3D mark.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Graphics tests should run in 3D mark benchmark while file transfer is going on to other FTP device.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5633" name="Graphics-Conc:Check 3D Mark benchmark when downloading files">
	<node_order><![CDATA[1026]]></node_order>
	<externalid><![CDATA[458]]></externalid>
	<fullexternalid><![CDATA[test-458]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Run 3D mark benchmark when file downloading is under progress</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. The &ldquo;3D Mark-the gamers bench mark apk&rdquo;&nbsp; should be available.<br />
	3. WiFi or Ethernet modules should present in the device.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Install &ldquo;3D Mark benchmark&rdquo; in the device.<br />
	2. Connect the Device to Ethernet or WiFi router.<br />
	3. Open browser and start downloading a large file.<br />
	4. While downloading the file is under progress, open the above&nbsp; installed 3D Mark benchmark apk and run graphics tests in 3D mark.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Graphics tests should run in 3D mark benchmark while file downloading is under progress from the browser.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5636" name="Graphics-Conc:Check alarm when Antutu 3D benchmark is rnning">
	<node_order><![CDATA[1027]]></node_order>
	<externalid><![CDATA[459]]></externalid>
	<fullexternalid><![CDATA[test-459]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check Alarm when Antutu 3D benchmark is running.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. The &ldquo;AnTuTu3DBench-com.antutu.benchmark.full-6000400-v6.0.4.apk&rdquo; benchmark should be available.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Install the &ldquo;AnTuTu3DBench-com.antutu.benchmark.full-6000400-v6.0.4.apk&rdquo; in the device.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />
	2. Open Alarm application in the device and set Alarm time to 1min.<br />
	3. Open the above installed apk.<br />
	4. Run the tests.<br />
	5. Alarm dialog should show on the screen once time up.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Alarm dialog should show on the display once alarm time-up while running the Antutu 3D graphics tests.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5639" name="Graphics-Conc:Check 3D Mark benchmark while using adb push/pull">
	<node_order><![CDATA[1028]]></node_order>
	<externalid><![CDATA[460]]></externalid>
	<fullexternalid><![CDATA[test-460]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check 3D Mark benchmark is running while adb push and pull operations are going on.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. The &ldquo;AnTuTu3DBench-com.antutu.benchmark.full-6000400-v6.0.4.apk&rdquo; benchmark should be available.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Install the &ldquo;AnTuTu3DBench-com.antutu.benchmark.full-6000400-v6.0.4.apk&rdquo; in the device.<br />
	2. Open the above installed apk.<br />
	3. Run the tests.<br />
	4. While 3D Mark tests are running, try to push/pull the files to/from the device.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. 3D Mark tests should run even though push/pull operations are going on and also push/pull of files should be successful while running the graphics tests.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5642" name="Graphics-Conc:Check suspend and resume when Antutu 3D benchmark is running">
	<node_order><![CDATA[1029]]></node_order>
	<externalid><![CDATA[461]]></externalid>
	<fullexternalid><![CDATA[test-461]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check suspend and resume when Antutu 3D benchmark is running.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. The &ldquo;AnTuTu3DBench-com.antutu.benchmark.full-6000400-v6.0.4.apk&rdquo; benchmark should be available.<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Install the &ldquo;AnTuTu3DBench-com.antutu.benchmark.full-6000400-v6.0.4.apk&rdquo; in the device.<br />
	2. Open the above installed apk.<br />
	3. Run the tests.<br />
	4. While 3D&nbsp; tests are running, try to suspend the device and also try to resume the device from suspend state.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Device should enter into suspend state completely when try to suspend the device while running the 3D&nbsp; graphics tests.<br />
	2. Device should resume from the suspend&nbsp; when try to resume and after resume graphics tests should run properly.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5645" name="Graphics-Conc:Check playing game when listening audio through USB/BT/Audio jack">
	<node_order><![CDATA[1030]]></node_order>
	<externalid><![CDATA[462]]></externalid>
	<fullexternalid><![CDATA[test-462]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	While playing games - listen audio through USB/BT/Audio jack</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2.&nbsp; Angry birds game apk should be available.<br />
	3. Audio Jack,BT headset and USB headset should be available.<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Install Angry birds game apk in the device.<br />
	2. Play the above installed game in the device.<br />
	3. Connect the Audio jack to device, USB headset to device or BT headset and check whether audio sound is coming or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Audio sound should be come in the connected Audio Jack, USB headset and BT headset while playing the game.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5648" name="Graphics-Conc:Check GL GFX benchmark while downloading,playing audio through USB/BT speakers">
	<node_order><![CDATA[1031]]></node_order>
	<externalid><![CDATA[463]]></externalid>
	<fullexternalid><![CDATA[test-463]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	adb push/pull + wifi download + GL GFX benchmarks / Games&nbsp; + USB/BT speakers for audio from graphics app</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2.&nbsp; GFX GL benchmark should be available.<br />
	3. Audio Jack,BT headset and USB headset should be available.<br />
	4. WiFi module should present on the device.<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to settings, enable WiFi and connect it to known router which has internet.<br />
	2. Install GFX GL benchmark in the device.<br />
	3. Connect USB/BT headset.<br />
	4. Open browser and start downloading a large file.<br />
	5. Open above installed GFX benchmark and start playing graphics tests.<br />
	6. Start push/pull the files to/from the device.<br />
	7. Check audio is coming from the USB or BT head set or not for GFX&nbsp; benchmark.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Audio sound should be hear in USB or BT headset for GFX graphics benchmark tests while push/pull operations are going on plus file download is under progress.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5651" name="Graphics-Conc:Check angry bird game while downloading,playing audio through USB/BT speakers">
	<node_order><![CDATA[1032]]></node_order>
	<externalid><![CDATA[464]]></externalid>
	<fullexternalid><![CDATA[test-464]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	adb push/pull + wifi download +angry bird&nbsp; + USB/BT speakers for audio from MP3</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2.&nbsp; Vellamo benchmark should be available.<br />
	3. Audio Jack,BT headset and USB headset should be available.<br />
	4. WiFi module should present on the device.<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to settings, enable WiFi and connect it to known router which has Internet.<br />
	2. Install Angry Birds in the device.<br />
	3. Connect USB/BT headset.<br />
	4. Copy .mp3 audio file.<br />
	5. Open browser and start downloading a large file.<br />
	6. Open Music player and start playback above copied .mp3 file.<br />
	7. Open above installed angry birds and start the game.<br />
	8. Start push/pull the files to/from the device.<br />
	9. Check audio is coming from the USB or BT head set or not for .mp3 file.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Audio sound should be hear in USB or BT headset for .mp3 audio file.<br />
	2. Downloading a file should be success.<br />
	3. Push/Pull the file to/from the device should be successful.<br />
	4. Angry Birds should run.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5654" name="Graphics-Conc:Check by stoping Antutu in middle and open other graphics for 3 times">
	<node_order><![CDATA[1033]]></node_order>
	<externalid><![CDATA[465]]></externalid>
	<fullexternalid><![CDATA[test-465]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	adb push/pull + wifi download + Vellamo benchmark&nbsp; + USB/BT speakers for audio from MP3</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. Vellamo benchmark should be available.<br />
	3. Audio Jack,BT headset and USB headset should be available.<br />
	4. WiFi module should present on the device.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Install the &ldquo;AnTuTu3DBench-com.antutu.benchmark.full-6000400-v6.0.4.apk&rdquo; in the device.<br />
	2. Install 3D Mark-the gamers benchmark in the device.<br />
	3. Open the Antutu benchmark and start run the tests.<br />
	4. Stop the above tests in the middle.<br />
	5. Open 3D Mark-the gamers benchmark and start to play the tests in it. check whether tests are running or not.<br />
	6. Repeat the steps from 3 to 5 for 3 times.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	For each iteration:<br />
	1. Antutu benchmark tests should run when start the tests in it and should stop the tests when stopped them.<br />
	2. The tests in 3D Mark-the gamers benchmark should start playing after stop the Antutu benchmarks tests in the middle.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5657" name="Graphics-Conc:Check to vary audio volume while running Antutu benchmark">
	<node_order><![CDATA[1034]]></node_order>
	<externalid><![CDATA[466]]></externalid>
	<fullexternalid><![CDATA[test-466]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check audio volume up and down while running Antut 3D benchmark.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. The &ldquo;AnTuTu3DBench-com.antutu.benchmark.full-6000400-v6.0.4.apk&rdquo; benchmark should be available.<br />
	3. Device should have volume up and down buttons.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Install the &ldquo;AnTuTu3DBench-com.antutu.benchmark.full-6000400-v6.0.4.apk&rdquo; in the device.<br />
	2. Connect the Audio headset to the device.<br />
	3. Open the Antutu benchmark and start run the tests.<br />
	4. Change the volume up and down.<br />
	5. Check whether audio volume is increased/decreased accordingly or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Audio sound should be hear with high and low when&nbsp; volume increased and decreased for Antutu 3D benchmark.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5660" name="Graphics-Memory:Check memory leak when 3D Mark is running">
	<node_order><![CDATA[1035]]></node_order>
	<externalid><![CDATA[467]]></externalid>
	<fullexternalid><![CDATA[test-467]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check memory leak when 3D Mark test are running in the device.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu.<br />
	2. The &ldquo;3D Mark-the gamers bench mark apk&rdquo;&nbsp; should be available.<br />
	3. Audio files should be available.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Install &ldquo;3D Mark benchmark&rdquo; in the device.<br />
	2. Open and run the above installed 3D Mark benchmark.<br />
	3. Open PC terminal.<br />
	4. While graphics tests are playing in 3D mark, entered the &ldquo;adb shell dumpsys meminfo&rdquo; command and collect the memory information.<br />
	5. Observe memory leak information in the above collected log.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. There should not be any memory leak when running the 3D Mark benchmark graphics test in the device.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5663" name="Graphics-Memory:Check memory leak when CtsGraphicTestCases module is runnin">
	<node_order><![CDATA[1036]]></node_order>
	<externalid><![CDATA[468]]></externalid>
	<fullexternalid><![CDATA[test-468]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check memory leak when CtsGraphicsTestCases module is running</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. The CTS binary &ldquo;android-cts-7.1_r17-linux_x86-x86.zip&#39; should be availlable.<br />
	2. Device should be boot upto android lock screen.<br />
	3. Setup the CTS as per run&nbsp; instructions mentioned in CTS google site.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the device adb over ethernet.<br />
	2. Open PC terminal<br />
	3. Go to downloaded CTS binary path i.e. &ldquo;cd android-cts/tools&rdquo;&nbsp; and run the &quot;CtsGraphicsTestCases&quot; module with the command &quot;./cts-tradefed run cts -m CtsGraphicsTestCases&quot; .<br />
	4. While graphics tests are playing, entered the &ldquo;adb shell dumpsys meminfo&rdquo; command in PC terminal and collect the memory information.<br />
	5. Observe memory leak information in the above collected log.<br />
	<br />
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. There should not be any memory leak when running the &ldquo;CtsGraphicsTestCases&rdquo;&nbsp; tests in the device.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5666" name="Graphics-Memory:Check memory leak when CtsOpenGLTestccases module is running">
	<node_order><![CDATA[1037]]></node_order>
	<externalid><![CDATA[469]]></externalid>
	<fullexternalid><![CDATA[test-469]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check memory leak when CtsOpenGLTestCases module is running</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. The CTS binary &ldquo;android-cts-7.1_r17-linux_x86-x86.zip&#39; should be availlable.<br />
	2. Device should be boot upto android lock screen.<br />
	3. Setup the CTS as per run&nbsp; instructions mentioned in CTS google site.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the device adb over ethernet.<br />
	2. Open PC terminal<br />
	3. Go to downloaded CTS binary path i.e. &ldquo;cd android-cts/tools&rdquo;&nbsp; and run the &quot;CtsOpenGLTestCases&quot; module with the command &quot;./cts-tradefed run cts -m CtsOpenGLTestCases&quot; .<br />
	4. While graphics tests are playing, entered the &ldquo;adb shell dumpsys meminfo&rdquo; command in PC terminal and collect the memory information.<br />
	5. Observe memory leak information in the above collected log.<br />
	<br />
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. There should not be any memory leak when running the &ldquo;CtsOpenGLTestCases&rdquo;&nbsp; tests in the device.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="5669" name="Storage" >
<node_order><![CDATA[11]]></node_order>
<details><![CDATA[<p>
	created test suite for storage module</p>
]]></details> 

<testcase internalid="5670" name="Storage:Check device functionality to push files into internal memory">
	<node_order><![CDATA[1000]]></node_order>
	<externalid><![CDATA[406]]></externalid>
	<fullexternalid><![CDATA[test-406]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check able to push the files into internal memory</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Build should support Ethernet.<br />
	2. Ethernet cable should be available and it has Internet connection.<br />
	3. Boot the DUT completely to its unlock screen.<br />
	4. Connect Ethernet Cable to the Raven Board Ethernet port.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect to device through adb over Ethernet from the PC&nbsp; using the command: &ldquo;adb connect &lt;DUT IP Address&gt;&rdquo;.<br />
	2. Try to push the selected file from PC to DUT internal memory using the adb command of&nbsp; &ldquo;adb push &lt;file path in PC&gt; /sdcard/&rdquo;.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Selected file form PC should be pushed to device internal memory after enter the command &ldquo;adb push &lt;file path in PC&gt; /sdcard/&rdquo;&nbsp; In the PC terminal.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_storage_push_file_into_internal_memory.TestPushFilesIntoInternalMemory]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5673" name="Storage:Check device functionality to pull files from internal memory">
	<node_order><![CDATA[1001]]></node_order>
	<externalid><![CDATA[407]]></externalid>
	<fullexternalid><![CDATA[test-407]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check able to pull the files from internal memory</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Build should support Ethernet.<br />
	2. Ethernet cable should be available and it has Internet connection.<br />
	3. Boot the DUT completely to its unlock screen.<br />
	4. Connect Ethernet Cable to the Raven Board Ethernet port.<br />
	5. Files should be existed in the device internal memory.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect to device through adb over Ethernet from the PC&nbsp; using the command: &ldquo;adb connect &lt;DUT IP Address&gt;&rdquo;.<br />
	2. Try to pull the selected file from the device internal memory to PC using the adb command of&nbsp; &ldquo;adb pull&nbsp; /sdcard/&lt;filename in the device internal memory&rdquo;.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Specified file form the device internal memory should be pulled to PC after enter the command&nbsp; &ldquo;adb pull&nbsp; /sdcard/&lt;filename in the device internal memory&rdquo; In the PC terminal.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_storage_pull_file_from_internal_memory.TestPullFilesFromInternalMemory]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5676" name="Storage:Check device installing APK's functionality">
	<node_order><![CDATA[1002]]></node_order>
	<externalid><![CDATA[408]]></externalid>
	<fullexternalid><![CDATA[test-408]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check able to install&nbsp; APKs in internal memory</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Build should support Ethernet.<br />
	2. Ethernet cable should be available and it has Internet connection.<br />
	3. Boot the DUT completely to its unlock screen.<br />
	4. Connect Ethernet Cable to the Raven Board Ethernet port.<br />
	5. Antutu benchmark should be available.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect to device through adb over Ethernet from the PC&nbsp; using the command: &ldquo;adb connect &lt;DUT IP Address&gt;&rdquo;.<br />
	2. Try to install the Antutu benchmark in the device internal memory using the adb command of&nbsp; &ldquo;adb install &lt;Antutu benchmark apk path in the PC&gt;/&rdquo;.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The Antutu benchmark should be installed in the device internal memory after enter the command &ldquo;adb install &lt;Antutu benchmark apk path in the PC&gt;/&rdquo;&nbsp; In the PC terminal.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_storage_install_apk.TestStorageInstallApk]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5679" name="Storage:Check device detecting USB storage functionality">
	<node_order><![CDATA[1003]]></node_order>
	<externalid><![CDATA[409]]></externalid>
	<fullexternalid><![CDATA[test-409]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check external USB storage is detecting&nbsp; or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT completely to its unlock screen.<br />
	2. USB 2.0/3.0 Pendrive should be available.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the USB2.0/3.0 Pendrive to device USB host port.<br />
	2. Go to settings -&gt; Storage -&gt; USB disk.<br />
	3. Now check&nbsp; USB 2.0/3.0 flash device is detected or not by seeing the flash drive storage properties.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. USB Storage should detect in USB host port and USB storage properties should show under device storage settings like available memory,total memory and etc.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_storage_external_usb_detection.TestStorageExternalUsb]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5682" name="Storage:Check USB contents are accessing or not">
	<node_order><![CDATA[1004]]></node_order>
	<externalid><![CDATA[410]]></externalid>
	<fullexternalid><![CDATA[test-410]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check able to see/access the content of the USB storage device or not in the device.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT completely to its unlock screen.<br />
	2. USB 2.0/3.0 Pendrive should have Audio/Video/Images</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the USB2.0/3.0 Pendrive to device USB host port,which contains Audio/Video/Images.<br />
	2. Go to settings -&gt; Storage -&gt; USB disk.<br />
	3. Now check&nbsp; USB 2.0/3.0 flash device is detected or not by seeing the flash drive storage properties.<br />
	4. Open Gallery application and see whether Video and Images are displaying or not. And also check audio files are showing in Music player or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. USB Storage should detect in USB host port and USB storage properties should show under device storage settings like available memory,total memory and etc.<br />
	2. Video/Images files which are there in the USB Pendrive should be displayed in the gallery and audio files should be show in Music application.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_storage_external_usb_content_access.TestStorageUsbContentAccess]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5685" name="Storage:Check device detecting different sizes of USB storage functionality">
	<node_order><![CDATA[1005]]></node_order>
	<externalid><![CDATA[411]]></externalid>
	<fullexternalid><![CDATA[test-411]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check multiple sizes of USB storages are detecting or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT completely to its unlock screen.<br />
	2. Multiple sizes of USB 2.0/3.0 Pendrives should be available and DUT should support them.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the USB2.0/3.0 Pendrive to device USB host port.<br />
	2. Go to settings -&gt; Storage -&gt; USB disk.<br />
	3. Now check&nbsp; USB 2.0/3.0 flash device is detected or not by seeing the flash drive storage properties.<br />
	4. Repeat the above steps from 1 to 3 by connecting the various sizes of USB Pendrives.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Various sizes of USB Pendrives should detect in USB host port and USB storage properties should show under device storage settings like available memory,total memory and etc.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5688" name="Storage:Check device functionality to delete files in internal memory">
	<node_order><![CDATA[1006]]></node_order>
	<externalid><![CDATA[412]]></externalid>
	<fullexternalid><![CDATA[test-412]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check able to delete the files which are existing in the device internal memory.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Build should support Ethernet.<br />
	2. Ethernet cable should be available and it has Internet connection.<br />
	3. Boot the DUT completely to its unlock screen.<br />
	4. Connect Ethernet Cable to the Raven Board Ethernet port.<br />
	5. Audio/Video/Images files should be available in the device internal memory.<br />
	6. Device should haven&#39;t connect any external USB storages.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open Gallery application.<br />
	2. Click on Image/Video.<br />
	3. Select on Delete option and check whether file is deleted or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Should be able to delete files from the gallery which are mounted with internal memory.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_storage_delete_file_from_internal_memory.TestStorageDeleteFileInternalMemory]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5691" name="Storage:Check device functionality to uninstall third party APK's in internal memory">
	<node_order><![CDATA[1007]]></node_order>
	<externalid><![CDATA[413]]></externalid>
	<fullexternalid><![CDATA[test-413]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check able to uninstall the third party APKs from the device internal memory.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Build should support Ethernet.<br />
	2. Ethernet cable should be available and it has Internet connection.<br />
	3. Boot the DUT completely to its unlock screen.<br />
	4. Connect Ethernet Cable to the Raven Board Ethernet port.<br />
	5. Antutu benchmark should be available.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect to device through adb over Ethernet from the PC&nbsp; using the command: &ldquo;adb connect &lt;DUT IP Address&gt;&rdquo;.<br />
	2. Install the Antutu benchmark in the device internal memory using the adb command of&nbsp; &ldquo;adb install &lt;Antutu benchmark apk path in the PC&gt;/&rdquo;.<br />
	3. Long press on Antutu benchmark APK, click on &ldquo;Uninstall&rdquo; button on Unstall dialog and check whether Antutu benchmark is unstalled from the device internal memory.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The Antutu benchmark should be uninstalled from the device internal memory after click on &ldquo;Uninstall&rdquo; button on the unstall dialog.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_storage_uninstall_apk.TestStorageUnInstallApk]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5694" name="Storage:Check device functionality to delete files in USB storage">
	<node_order><![CDATA[1008]]></node_order>
	<externalid><![CDATA[414]]></externalid>
	<fullexternalid><![CDATA[test-414]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check able to copy&nbsp; the files from internal memory to external USB storage memory</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT completely to its unlock screen.<br />
	2. Audio/Video/Images/Text files should be available in the device internal memory.<br />
	3. USB 2.0/3.0 Pendrive should be connected to device with some files.<br />
	4. The ESFile_Explorer Apk should be installed in the device.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open ESFile Explorer APK in the device.<br />
	2. Select any file from the device internal memory and copy it.<br />
	3. Goto External memory and try to paste the above copied file.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Selected copied file from the internal memory should pasted in the external memory.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_storage_delete_file_from_usb_storage.TestStorageDeleteFileInUsb]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5697" name="Storage:Check suspend/resume functionality when USB is connected">
	<node_order><![CDATA[1009]]></node_order>
	<externalid><![CDATA[415]]></externalid>
	<fullexternalid><![CDATA[test-415]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check suspend/resume functionality when USB storage is connected to device.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT completely to its unlock screen.<br />
	2. USB 2.0/3.0 Pendrive should be available.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the USB2.0/3.0 Pendrive to device USB host port.<br />
	2. Suspend the device and check whether device entered into suspend state or not.<br />
	3. Resume the device and check whether device is resumed or not and also check USB storage is functioning as expected after resume.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Device should entered into suspend state when USB storage is connected to device USB host port.<br />
	2. Device should resume from suspend state successfully and also USB Storage should function as expected like USB storage should be still detected, content in the USB storage should be accessed.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5700" name="Storage:Check copy of files from USB to internal memory">
	<node_order><![CDATA[1010]]></node_order>
	<externalid><![CDATA[416]]></externalid>
	<fullexternalid><![CDATA[test-416]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check able to copy&nbsp; the files from internal memory to external USB storage memory</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT completely to its unlock screen.<br />
	2. Audio/Video/Images/Text files should be available in the device internal memory.<br />
	3. USB 2.0/3.0 Pendrive should be connected to device with some files.<br />
	4. The ESFile_Explorer Apk should be installed in the device.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open ESFile Explorer APK in the device.<br />
	2. Select any file from external storage which is mounted and copy it.<br />
	3. Goto internal memory and try to paste the above copied file.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Selected copied file from the external memory should pasted in the device internal memory.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_storage_copy_file_from_usb_to_internal_memory.TestStorageCopyFileFromUsbToInternalMemory]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5703" name="Storage:Check copy of files from internal memory to USB storage">
	<node_order><![CDATA[1011]]></node_order>
	<externalid><![CDATA[417]]></externalid>
	<fullexternalid><![CDATA[test-417]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check able to copy&nbsp; the files from internal memory to external USB storage memory</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT completely to its unlock screen.<br />
	2. Audio/Video/Images/Text files should be available in the device internal memory.<br />
	3. USB 2.0/3.0 Pendrive should be connected to device with some files.<br />
	4. The ESFile_Explorer Apk should be installed in the device.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open ESFile Explorer APK in the device.<br />
	2. Select any file from the device internal memory and copy it.<br />
	3. Goto External memory and try to paste the above copied file.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Selected copied file from the internal memory should pasted in the external memory.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_storage_copy_file_from_internal_memory_to_usb.TestCopyFilesFromInternalMemoryToUsb]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5706" name="Storage:Check internal memory mounting in PC">
	<node_order><![CDATA[1012]]></node_order>
	<externalid><![CDATA[418]]></externalid>
	<fullexternalid><![CDATA[test-418]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check device internal memory is mounted(MTP) in the PC or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT completely to its unlock screen.<br />
	2. USB to micro cable should be available.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the USB micro cable to device from the PC.<br />
	2.Click on &ldquo;Transfer files(MTP)&rdquo; option in the device notification bar on &ldquo;Use USB for&rdquo; dialog.<br />
	3. Check DUT is mounted in the the PC with &ldquo;Internal storage&rdquo; or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The device Internal storage should be mounted in the PC after selecting the &ldquo;Transfer files(MTP)&rdquo; option in the device notification bar on &ldquo;Use USB for&rdquo; dialog.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5709" name="Storage:Check transfering files from/to internal memory to/from PC using MTP">
	<node_order><![CDATA[1013]]></node_order>
	<externalid><![CDATA[419]]></externalid>
	<fullexternalid><![CDATA[test-419]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check able to transfer files to/from device internal memory from/to PC using MTP.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT completely to its unlock screen.<br />
	2. USB to micro cable should be available.<br />
	3. Device internal memory should have accessible files.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the USB micro cable to device from the PC.<br />
	2.Click on &ldquo;Transfer files(MTP)&rdquo; option in the device notification bar on &ldquo;Use USB for&rdquo; dialog.<br />
	3. After DUT is mounted in the the PC, open the device Internal storage.<br />
	4. Try to copy the selected files from internal memory to Pc.<br />
	5. And also try to copy the selected files from PC to device internal memory.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. After device mounted in the PC with the &ldquo;Transfer files(MTP)&rdquo; format, should be copy the selected files from device internal memory to PC and also should be able to copy the selected files from PC to device internal memory.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5712" name="Storage:Check device internal memory is mounted(PTP) in PC">
	<node_order><![CDATA[1014]]></node_order>
	<externalid><![CDATA[420]]></externalid>
	<fullexternalid><![CDATA[test-420]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check device internal memory is mounted(PTP) in the PC or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT completely to its unlock screen.<br />
	2. USB to micro cable should be available.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the USB micro cable to device from the PC.<br />
	2. Click on &ldquo;Transfer files(PTP)&rdquo; option in the device notification bar on &ldquo;Use USB for&rdquo; dialog.<br />
	3. Check DUT is mounted in the the PC with &ldquo;DCIM&ldquo; and &ldquo;Pictures&rdquo; folders of Internal storage or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. After device mounted in the PC with the &ldquo;Transfer files(MTP)&rdquo; format, should be copy the selected files from device internal memory to PC and also should be able to copy the selected files from PC to device internal memory.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5715" name="Storage:Check transfering files from/to internal memory to/from PC using PTP">
	<node_order><![CDATA[1015]]></node_order>
	<externalid><![CDATA[421]]></externalid>
	<fullexternalid><![CDATA[test-421]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check able to transfer files to/from device internal memory from/to PC using PTP.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT completely to its unlock screen.<br />
	2. USB to micro cable should be available.<br />
	3. Files should be existing in the &ldquo;DCIM&rdquo; or &ldquo;Pictures&rdquo; folders of device internal memory.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the USB micro cable to device from the PC.<br />
	2. Click on &ldquo;Transfer files(PTP)&rdquo; option in the device notification bar on &ldquo;Use USB for&rdquo; dialog.<br />
	3. After DUT is mounted in the the PC, open the &ldquo;DCIM&rdquo; or &ldquo;Pictures&rdquo; folders of device Internal storage.<br />
	4. Try to copy the selected files from above mentioned folders of internal memory to Pc.<br />
	5. And also try to copy the selected files from PC to above mentioned folders of device internal memory.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. After device mounted in the PC with the &ldquo;Transfer files(PTP)&rdquo; format, should be copy the selected files from&nbsp; the &ldquo;DCIM&rdquo; or &ldquo;Pictures&rdquo; folders of device internal memory to PC and wise versa.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5718" name="Storage:Check copying a file which has more size than actual internal memory">
	<node_order><![CDATA[1016]]></node_order>
	<externalid><![CDATA[422]]></externalid>
	<fullexternalid><![CDATA[test-422]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check able to copy the file which has more size than available space in the device internal memory</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Build should support Ethernet.<br />
	2. Ethernet cable should be available and it has Internet connection.<br />
	3. Boot the DUT completely to its unlock screen.<br />
	4. Connect Ethernet Cable to the Raven Board Ethernet port.<br />
	5. Internal memory should have less space.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect to device through adb over Ethernet from the PC&nbsp; using the command: &ldquo;adb connect &lt;DUT IP Address&gt;&rdquo;.<br />
	2. Try to push the file which size is more than the device internal memory using the adb command of&nbsp; &ldquo;adb push &lt;file path in PC&gt; /sdcard/&rdquo;.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. File should not pushed to device when it has less memory than pushing file size.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5721" name="Storage:Check factory reset functionality">
	<node_order><![CDATA[1017]]></node_order>
	<externalid><![CDATA[423]]></externalid>
	<fullexternalid><![CDATA[test-423]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check Factory reset functionality</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT completely to its unlock screen.<br />
	2. Third party APKs should be installed in the device.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Goto settings-&gt;Backup &amp; reset-&gt; click on Factory data reset.<br />
	2. Click on &ldquo;Erase&rdquo; option.<br />
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Device should re-start after click on &ldquo;Factory reset&rdquo; button and all the user data should erase.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5724" name="Storage:Check the push/write files into internal memory are visible in Gallery/Music app or not">
	<node_order><![CDATA[1018]]></node_order>
	<externalid><![CDATA[424]]></externalid>
	<fullexternalid><![CDATA[test-424]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify push/write files into internal memory are visible in Gallery/Music app or not</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Build should support Ethernet.<br />
	2. Ethernet cable should be available and it has Internet connection.<br />
	3. Boot the DUT completely to its unlock screen.<br />
	4. Connect Ethernet Cable to the Raven Board Ethernet port.<br />
	5. Video/Images/Audio files should be available in PC.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect to device through adb over Ethernet from the PC&nbsp; using the command: &ldquo;adb connect &lt;DUT IP Address&gt;&rdquo;.<br />
	2. Push the Video/Image/Audio files into device from PC using the adb command of&nbsp; &ldquo;adb push &lt;file path in PC&gt; /sdcard/&rdquo;.<br />
	3. Restart the device.<br />
	4. Open Gallery application and check whether Video/Images are visible or not.<br />
	5. Open Music application and check audio files are visible or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Copied Video/Images files should show in the Gallery application and Copied Audio files should show in the Music application.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_storage_pushed_files_visible_in_gallery.TestPushFilesVisibleInGallery]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5727" name="Storage-Str:Check to push large files to internal memory">
	<node_order><![CDATA[1019]]></node_order>
	<externalid><![CDATA[425]]></externalid>
	<fullexternalid><![CDATA[test-425]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check able to push large size files into device internal memory or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Build should support Ethernet.<br />
	2. Ethernet cable should be available and it has Internet connection.<br />
	3. Boot the DUT completely to its unlock screen.<br />
	4. Connect Ethernet Cable to the Raven Board Ethernet port.<br />
	5. Large size file should be available in the PC.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect to device through adb over Ethernet from the PC&nbsp; using the command: &ldquo;adb connect &lt;DUT IP Address&gt;&rdquo;.<br />
	2. Try to push the large size file from PC to DUT internal memory using the adb command of&nbsp; &ldquo;adb push &lt;file path in PC&gt; /sdcard/&rdquo;.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Large size file should be pushed to device internal memory from PC after enter the command &ldquo;adb push &lt;file path in PC&gt; /sdcard/&rdquo;&nbsp; In the PC terminal.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_storage_push_large_file.TestPushFilesIntoInternalMemory]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5730" name="Storage-Str:Check to pull large files from internal memory">
	<node_order><![CDATA[1020]]></node_order>
	<externalid><![CDATA[426]]></externalid>
	<fullexternalid><![CDATA[test-426]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check able to pull the large size files from the internal memory</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Build should support Ethernet.<br />
	2. Ethernet cable should be available and it has Internet connection.<br />
	3. Boot the DUT completely to its unlock screen.<br />
	4. Connect Ethernet Cable to the Raven Board Ethernet port.<br />
	5. Large size files should be existed in the device internal memory.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect to device through adb over Ethernet from the PC&nbsp; using the command: &ldquo;adb connect &lt;DUT IP Address&gt;&rdquo;.<br />
	2. Try to pull the selected large size file from the device internal memory to PC using the adb command of&nbsp; &ldquo;adb pull&nbsp; /sdcard/&lt;filename in the device internal memory&rdquo;.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Specified large size file should be pulled to PC form the device internal memory after enter the command&nbsp; &ldquo;adb pull&nbsp; /sdcard/&lt;filename in the device internal memory&rdquo; In the PC terminal.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_storage_pull_large_file.TestPullFilesFromInternalMemory]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5733" name="Storage-Str:Check to USB storage 25 times">
	<node_order><![CDATA[1021]]></node_order>
	<externalid><![CDATA[427]]></externalid>
	<fullexternalid><![CDATA[test-427]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Connect USB storage 25 times and check each time USB storage is mounted in the device or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT completely to its unlock screen.<br />
	2. USB 2.0/3.0 Pendrive should be available.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the USB2.0/3.0 Pendrive to device USB host port.<br />
	2. Go to settings -&gt; Storage -&gt; USB disk.<br />
	3. Now check&nbsp; USB 2.0/3.0 flash device is detected or not by seeing the flash drive storage properties.<br />
	4. Repeat the above steps from 1 to 3 for 25 times.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	For each iteration:<br />
	1. USB Storage should detect in USB host port and USB storage properties should show under device storage settings like available memory,total memory and etc.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5736" name="Storage-Str:Check internal memory is mounted as MTP in PC or not for 25 times">
	<node_order><![CDATA[1022]]></node_order>
	<externalid><![CDATA[428]]></externalid>
	<fullexternalid><![CDATA[test-428]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check device internal memory is mounted as MTP in PC or no fro 25 times.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT completely to its unlock screen.<br />
	2. USB to micro cable should be available.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the USB micro cable to device from the PC.<br />
	2. Click on &ldquo;Transfer files(MTP)&rdquo; option in the device notification bar on &ldquo;Use USB for&rdquo; dialog.<br />
	3. Check DUT is mounted in the the PC with &ldquo;Internal storage&rdquo; or not.<br />
	4. Repeat the above steps from 1 to 3 for 25 times.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	For each iteration:<br />
	1. The device Internal storage should be mounted in the PC after selecting the &ldquo;Transfer files(MTP)&rdquo; option in the device notification bar on &ldquo;Use USB for&rdquo; dialog.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5739" name="Storage-Str:Check internal memory is mounted as PTP in PC or not for 25 times">
	<node_order><![CDATA[1023]]></node_order>
	<externalid><![CDATA[429]]></externalid>
	<fullexternalid><![CDATA[test-429]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check device internal memory is mounted as PTP in PC or no fro 25 times.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT completely to its unlock screen.<br />
	2. USB to micro cable should be available.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the USB micro cable to device from the PC.<br />
	2. Click on &ldquo;Transfer files(PTP)&rdquo; option in the device notification bar on &ldquo;Use USB for&rdquo; dialog.<br />
	3. Check DUT is mounted in the the PC with &ldquo;DCIM&ldquo; and &ldquo;Pictures&rdquo; folders of Internal storage or not.<br />
	4. Repeat the above steps from 1 to 3 for 25 times.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	For each iteration:<br />
	1. The device should be mounted in the PC with &ldquo;DCIM&rdquo; and &ldquo;Pictures&rdquo; folders of device Internal storage after selecting the &ldquo;Transfer files(PTP)&rdquo; option in the device notification bar on &ldquo;Use USB for&rdquo; dialog.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5742" name="Storage-Conc:Check to push/pull large files into device while audio playing">
	<node_order><![CDATA[1024]]></node_order>
	<externalid><![CDATA[430]]></externalid>
	<fullexternalid><![CDATA[test-430]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check push/pull large files into device when Audio playback is going on.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Build should support Ethernet.<br />
	2. Ethernet cable should be available and it has Internet connection.<br />
	3. Boot the DUT completely to its unlock screen.<br />
	4. Connect Ethernet Cable to the Raven Board Ethernet port.<br />
	5. Large size file should be available in the PC.<br />
	6. Audio files should be available in the device.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect to device through adb over Ethernet from the PC&nbsp; using the command: &ldquo;adb connect &lt;DUT IP Address&gt;&rdquo;.<br />
	2. Open Music player and start playback of Audio,<br />
	3. Try to push/pull the large size file from/to PC to/from DUT internal memory using the adb command of&nbsp; &ldquo;adb push &lt;file path in PC&gt; /sdcard/&rdquo;.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Large size file should be successfully pushed/pulled to/from device internal memory from/to PC after enter the command &ldquo;adb push &lt;file path in PC&gt; /sdcard/&rdquo;&nbsp; In the PC terminal even though audio playback is going on.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_storage_push_pull_large_file_audio_playback.TestStoragePushPullAudioPlayback]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5745" name="Storage-Conc:Check to push/pull large files into device while video playing">
	<node_order><![CDATA[1025]]></node_order>
	<externalid><![CDATA[431]]></externalid>
	<fullexternalid><![CDATA[test-431]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check push/pull large files into device when Video playback is going on.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Build should support Ethernet.<br />
	2. Ethernet cable should be available and it has Internet connection.<br />
	3. Boot the DUT completely to its unlock screen.<br />
	4. Connect Ethernet Cable to the Raven Board Ethernet port.<br />
	5. Large size file should be available in the PC.<br />
	6. Video files should be available in the device.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect to device through adb over Ethernet from the PC&nbsp; using the command: &ldquo;adb connect &lt;DUT IP Address&gt;&rdquo;.<br />
	2. Open Gallery application and start playback of Video.<br />
	3. Try to push/pull the large size file from/to PC to/from DUT internal memory using the adb command of&nbsp; &ldquo;adb push &lt;file path in PC&gt; /sdcard/&rdquo;.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Large size file should be successfully pushed/pulled to/from device internal memory from/to PC after enter the command &ldquo;adb push &lt;file path in PC&gt; /sdcard/&rdquo;&nbsp; In the PC terminal even though Video playback is going on.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_storage_push_pull_large_file_video_playback.TestStoragePushPullDuringVideoPlayback]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5748" name="Storage-Conc:Check to push/pull large files into device while 3D Mark benchmark is running">
	<node_order><![CDATA[1026]]></node_order>
	<externalid><![CDATA[432]]></externalid>
	<fullexternalid><![CDATA[test-432]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check pushing large files into device when 3D Mark benchmark is running.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Build should support Ethernet.<br />
	2. Ethernet cable should be available and it has Internet connection.<br />
	3. Boot the DUT completely to its unlock screen.<br />
	4. Connect Ethernet Cable to the Raven Board Ethernet port.<br />
	5. Large size file should be available in the PC.<br />
	6. 3D Mark Benchmark should be available.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Install 3D Mark benchmark in the DUT.<br />
	2. Open the above installed APK and run the tests.<br />
	3. Try to push the large size file from PC to DUT internal memory using the adb command of&nbsp; &ldquo;adb push &lt;file path in PC&gt; /sdcard/&rdquo;.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Large size file should be successfully pushed to device internal memory from PC after enter the command &ldquo;adb push &lt;file path in PC&gt; /sdcard/&rdquo;&nbsp; in the PC terminal even though 3d Mark benchmark is running.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5751" name="Storage-Conc:Check to push large files into device while file transfer through BT">
	<node_order><![CDATA[1027]]></node_order>
	<externalid><![CDATA[433]]></externalid>
	<fullexternalid><![CDATA[test-433]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check pushing large files to device when BT file transfer is going on.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Build should support Ethernet.<br />
	2. Ethernet cable should be available and it has Internet connection.<br />
	3. Boot the DUT completely to its unlock screen.<br />
	4. Connect Ethernet Cable to the Raven Board Ethernet port.<br />
	5. Large size file should be available in the PC.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to settings-&gt; Wireless &amp; Networks, enable the BT option.<br />
	2. Pair the DUT with another BT device.<br />
	3. Start the file transfer from one DUT to antother DUT.<br />
	4. Now try to push the large size file from PC to DUT internal memory using the adb command of&nbsp; &ldquo;adb push &lt;file path in PC&gt; /sdcard/&rdquo;.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Large size file should be successfully pushed to device internal memory from PC after enter the command &ldquo;adb push &lt;file path in PC&gt; /sdcard/&rdquo;&nbsp; in the PC terminal even though file transfer is going on through BT to another BT device.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5754" name="Storage-Conc:Check to push large files into device while browsing">
	<node_order><![CDATA[1028]]></node_order>
	<externalid><![CDATA[434]]></externalid>
	<fullexternalid><![CDATA[test-434]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check pushing large files to device when browsing is going on.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Build should support Ethernet.<br />
	2. Ethernet cable should be available and it has Internet connection.<br />
	3. Boot the DUT completely to its unlock screen.<br />
	4. Large size file should be available in the PC.<br />
	5. WiFi module should be present in the device.<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to settings-&gt; Wireless &amp; Networks, enable the WiFi option and connect it to known router. (OR) Connect the Ethernet cable to device.<br />
	2. Open the browser and start browsing.<br />
	3. Now try to push the large size file from PC to DUT internal memory using the adb command of&nbsp; &ldquo;adb push &lt;file path in PC&gt; /sdcard/&rdquo;.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Large size file should be successfully pushed to device internal memory from PC after enter the command &ldquo;adb push &lt;file path in PC&gt; /sdcard/&rdquo;&nbsp; in the PC terminal even though browsing is going on.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_storage_push_pull_large_file_browsing.TestStoragePushPullBrowsing]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="5757" name="Browser" >
<node_order><![CDATA[12]]></node_order>
<details><![CDATA[<p>
	Create test suite for browser</p>
]]></details> 

<testcase internalid="5758" name="Browser:Check browse with URL's">
	<node_order><![CDATA[1000]]></node_order>
	<externalid><![CDATA[470]]></externalid>
	<fullexternalid><![CDATA[test-470]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check able to browsing with&nbsp; url or not</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. The&nbsp; DUT should have the internet facility (Wi-Fi / 3G / Ethernet).</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open the Browser Apk.<br />
	2. Open the &ldquo;www.msn.com&rdquo; URL.<br />
	3. Check whether the MSN website open or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The DUT should be able to browse web sites using URL&#39;s and able to access the &ldquo;www.msn.com&rdquo; website.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_browse_url.TestBrowseUrl]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5761" name="Browser:Check browsing with IP address">
	<node_order><![CDATA[1001]]></node_order>
	<externalid><![CDATA[471]]></externalid>
	<fullexternalid><![CDATA[test-471]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check able to browsing with IP address or not</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. The&nbsp; DUT should have the internet facility (Wi-Fi / 3G / Ethernet).</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Connect the USB to USB cable to device in client mode from the PC.<br />
	2. Open the terminal in PC.<br />
	3.&nbsp; Pick any known URL and IP address to test, for example&ldquo;ping www.google.com&rdquo;&nbsp; and it will display the IP address of the &ldquo;www.google.com&ldquo; website.<br />
	4. Enable the network in the device.<br />
	5. Open a Browser and enter the above displayed IP address and check whether &ldquo;www.google.com&rdquo; website URL is displayed or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. After entering the known website IP address in the device Browser, the device browser should access and display the relevant website URL.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_ping_ip.TestPingIp]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5764" name="Browser:Check downloading files">
	<node_order><![CDATA[1002]]></node_order>
	<externalid><![CDATA[472]]></externalid>
	<fullexternalid><![CDATA[test-472]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check able to download a file using browser or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot upto its android unlock screen.<br />
	2. DUT should have Ethernet/WiFi&nbsp; connection.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open browser.<br />
	2. Click on search option.<br />
	3. Open&nbsp; https://www.google.com URL.<br />
	4. Go to search bar and type download good morning gif, select any one of the available links.<br />
	5. Right click with mouse on any one of the file you want to download.<br />
	6. Then the download or save option will be displayed,click on that.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Search results should be displayed without any issues.<br />
	2. The selected video should be downloaded.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5767" name="Browser:Check video streaming through browser">
	<node_order><![CDATA[1003]]></node_order>
	<externalid><![CDATA[473]]></externalid>
	<fullexternalid><![CDATA[test-473]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check browser is supporting video streaming functioanlity or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. The&nbsp; DUT should have the internet facility (Wi-Fi / 3G / Ethernet).</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open the Browser Apk,<br />
	2. Go to Youtube and playabck any video.<br />
	3. Check browser is supporting video streaming or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The DUT should be able to browse web sites using URL&#39;s and able to access the &ldquo;www.msn.com&rdquo; website.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5770" name="Browser:Check audio streaming through browser">
	<node_order><![CDATA[1004]]></node_order>
	<externalid><![CDATA[474]]></externalid>
	<fullexternalid><![CDATA[test-474]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check browser is supporting Audio streaming functioanlity or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu.<br />
	2. The&nbsp; DUT should have the internet facility (Wi-Fi / 3G / Ethernet).</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.Open the Browser Apk.<br />
	2. Open the &ldquo;https://gaana.com/&rdquo; URL.<br />
	3. Play any Audio.<br />
	4. Check whether the Audio is playing without any issues or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The DUT should be able to play streaming audio with out any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5773" name="Browser:Check browser to support vellamo test">
	<node_order><![CDATA[1005]]></node_order>
	<externalid><![CDATA[475]]></externalid>
	<fullexternalid><![CDATA[test-475]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting vellamo browser test or not</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot upto its android unlock screen.<br />
	2. DUT should have Ethernet or WiFi connection.<br />
	3. Vellamo Apk should be available in the device.This will test the functionality of the browser.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open Vellamo APK in the device.<br />
	2. Run the above installed APK.<br />
	3. Check whether Vellamo APK is playing without any issues or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The vellamo Apk should be run without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5776" name="Browser:Check browser to support 3D WebGL feature">
	<node_order><![CDATA[1006]]></node_order>
	<externalid><![CDATA[476]]></externalid>
	<fullexternalid><![CDATA[test-476]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check browser supports the &ldquo;3D WebGL&rdquo; feature or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot upto its android unlock screen.<br />
	2. DUT should have Ethernet or WiFi connection.<br />
	3. Chrome browser version &gt; 25 should be available in the device.<br />
	4. Should enable &ldquo;Enable WebGL&rdquo; option in the chrome browser by using the &ldquo;chrome://flags&rdquo;.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open Chrome browser in the device.<br />
	2. Enter &ldquo;chrome://flags&rdquo;&nbsp; and enable the &ldquo;Enable WebGL&rdquo; option unger flags menu.<br />
	3. Relaunch the browser.<br />
	4. Check your browser supports the WebGL or not by entering the &ldquo; get.webgl.org&rdquo; URL.<br />
	5. Enter the&rdquo;https://odra.city/&rdquo; url in the browser and check whether game is playing or not.<br />
	6. If the game play successfully then browser supports the 3D WebGL feature.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The &ldquo;Your browser supports WebGL&rdquo; message should be display after entering the&nbsp; url of &ldquo;get.webgl.org&rdquo; in the browser.<br />
	2. The 3D WebGL game should play successfully in the browser after entering the &ldquo;https://odra.city/&rdquo; url.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5779" name="Browser-Str:Check browser to access multiple websites at a time">
	<node_order><![CDATA[1007]]></node_order>
	<externalid><![CDATA[477]]></externalid>
	<fullexternalid><![CDATA[test-477]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check able to download multiple files at once or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot upto its android unlock screen.<br />
	2. DUT should have Ethernet or WiFi connection.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open browser.<br />
	2. Click on search option.<br />
	3. Open&nbsp; https://www.google.com URL.<br />
	4. Go to search bar and type download good morning gif, select any one of the available links.<br />
	5. Right click with mouse on any one of the file you want to download.<br />
	6. Then the download or save option will be displayed,click on that.<br />
	7. Open another browser tab.repeat the above steps and start downloading another file.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. DUT should download multiple files at a time using browser tabs.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5782" name="Browser-Str:Check browser to download multiple files at a time">
	<node_order><![CDATA[1008]]></node_order>
	<externalid><![CDATA[478]]></externalid>
	<fullexternalid><![CDATA[test-478]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check able to download multiple files at once or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot upto its android unlock screen.<br />
	2. DUT should have Ethernet or WiFi connection.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open browser.<br />
	2. Click on search option.<br />
	3. Open&nbsp; https://www.google.com URL.<br />
	4. Go to search bar and type download good morning gif, select any one of the available links.<br />
	5. Right click with mouse on any one of the file you want to download.<br />
	6. Then the download or save option will be displayed,click on that.<br />
	7. Open another browser tab.repeat the above steps and start downloading another file.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. DUT should download multiple files at a time using browser tabs.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5785" name="Browser-Conc:Check browsing while playing audio">
	<node_order><![CDATA[1009]]></node_order>
	<externalid><![CDATA[479]]></externalid>
	<fullexternalid><![CDATA[test-479]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; to play an audio file while browsing</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot upto its android unlock screen.<br />
	2. DUT should have Ethernet or WiFi connection.<br />
	3. DUT should support playback of audio.<br />
	4. Supported Audio files should be present in the device.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open music app.<br />
	2. Play any audio file.<br />
	3. Then&nbsp; go to browser.<br />
	4. Open the browser and search for anything like latest news.<br />
	5. Click on any one of the available links.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The audio should be heared without any issues.<br />
	2. When we are browsing for latest news,the search results should be displayed without any delay.<br />
	3. At the same time the audio should be continued to play in background without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5788" name="Browser-Conc:Check browsing while playing video">
	<node_order><![CDATA[1010]]></node_order>
	<externalid><![CDATA[480]]></externalid>
	<fullexternalid><![CDATA[test-480]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; to play video while browsing</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot upto its android unlock screen.<br />
	2. DUT should have Ethernet or WiFi connection.<br />
	3. DUT should contain Mxplayer.<br />
	4. Supported Video files should be present in the device.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open MXplayer app.<br />
	2. Play any video file.<br />
	3. Then&nbsp; go to browser.<br />
	4. Open the browser and search for anything like latest news.<br />
	5. Click on any one of the available links.<br />
	6. After sometime close the browser and again open Mxplayer.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The video should play without any issues when we start playing it.<br />
	2. When we are browsing for latest news,the search results should be displayed without any delay.<br />
	3. When we are trying to browse latest news or anything else the video should stop playing.<br />
	4. After closing the browser, when we click on Mxplayer the video should start playing.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5791" name="Browser-Conc:Check browser to open youtube in multiple tabs">
	<node_order><![CDATA[1011]]></node_order>
	<externalid><![CDATA[481]]></externalid>
	<fullexternalid><![CDATA[test-481]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting youtube in multiple tabs or not</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot upto its android unlock screen.<br />
	2. DUT should have Ethernet or WiFi connection.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open browser.<br />
	2. Click on search option.<br />
	3. Open&nbsp; https://www.youtube.com URL.<br />
	4. Play any one of the video file.<br />
	5. open same URL in 25 tabs and play one video in one tab.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Youtube window with some videos should be displayed on the screen.<br />
	2. The video should be played without any glitches and issues.<br />
	3. While switching from one tab to another tab the video should stop playing.<br />
	4. After switching from one tab to another tab&nbsp; we have to click on play option to continue the video play.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5794" name="Browser-Conc:Check adb push/pull while video streaming">
	<node_order><![CDATA[1012]]></node_order>
	<externalid><![CDATA[482]]></externalid>
	<fullexternalid><![CDATA[test-482]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting push/pull when video streaming is going on in the device.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot upto its android unlock screen.<br />
	2. DUT should have Ethernet or WiFi connection.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open browser.<br />
	2. Open https://www.youtube.com URL.<br />
	3. Start playing any video<br />
	4. Connect the device to Ethernet IP address using the command &ldquo;adb connect &lt;IP address of the Ethernet cable&gt;.<br />
	5. Enter the &ldquo;adb push source path Destination path&rdquo; command in the DUT terminal.<br />
	6. Check whether the file is copying to DUT&nbsp; or not.<br />
	7. Repeat step 5 by replacing push with pull.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The&nbsp; video streaming&nbsp; should be played&nbsp; clearly with synchronization between audio and video in the browser when file is pushing/pulling to/from the device.<br />
	2. The file should be copied into DUT without any loss of data.<br />
	3. The file should be copied from&nbsp; DUT without any loss of data.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5797" name="Browser-Conc:Check browser to open youtube in multiple tabs while playing audio">
	<node_order><![CDATA[1013]]></node_order>
	<externalid><![CDATA[483]]></externalid>
	<fullexternalid><![CDATA[test-483]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT is supporting&nbsp; to play audio and at the same time opening youtube in multiple tabs or not</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot upto its android unlock screen.<br />
	2. DUT should have Ethernet or WiFi connection.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Open Music app.<br />
	2. Play any audio file.<br />
	3. Open browser.<br />
	4. Click on search option.<br />
	5. Open&nbsp; https://www.youtube.com URL.<br />
	6. Play any one of the video file.<br />
	7. open same URL in 25 tabs and play one video in one tab.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The audio should be audible without any disturbances.<br />
	2. The videos should be played in multiple tabs without any issues when we open that relevant tab.<br />
	3. The audio of MP3 should not be audible for us while playing video.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="5800" name="I/O" >
<node_order><![CDATA[13]]></node_order>
<details><![CDATA[<p>
	Create test suite for I/O module</p>
]]></details> 

<testcase internalid="5801" name="I/O:Check back button functionality">
	<node_order><![CDATA[1000]]></node_order>
	<externalid><![CDATA[499]]></externalid>
	<fullexternalid><![CDATA[test-499]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check Back button functionality</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Display settings.<br />
	2. Select back button.<br />
	3. Check whether previous screen appeared.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. When Back button is pressed previous screen should appear.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5804" name="I/O:Check home button functionality">
	<node_order><![CDATA[1001]]></node_order>
	<externalid><![CDATA[500]]></externalid>
	<fullexternalid><![CDATA[test-500]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check Home button functionality</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Display settings.<br />
	2. Press Home button and check if home screen appeared or not. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. When Home button is pressed Home screen should appear.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5807" name="I/O:Check recent items button functionality">
	<node_order><![CDATA[1002]]></node_order>
	<externalid><![CDATA[501]]></externalid>
	<fullexternalid><![CDATA[test-501]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check Recent items button functionality</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Display settings.<br />
	2. Select back button.<br />
	3. Check whether previous screen appeared.<br />
	4. Press Home button and check if home screen appeared or not.<br />
	5. Press Recent button and check if the settings page appears in recent items or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. When Recent button is pressed, recent items should be displayed.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5810" name="I/O-Str:Check back button functionality for 20 times">
	<node_order><![CDATA[1003]]></node_order>
	<externalid><![CDATA[502]]></externalid>
	<fullexternalid><![CDATA[test-502]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check Back button functionality for 20 times</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Display settings.<br />
	2. Select back button.<br />
	3. Check whether previous screen appeared.<br />
	4. Repeat the above steps for 20 times.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. When Back button is pressed previous screen should appear for every iteration.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5813" name="I/O-Str:Check home button functionality for 20 times">
	<node_order><![CDATA[1004]]></node_order>
	<externalid><![CDATA[503]]></externalid>
	<fullexternalid><![CDATA[test-503]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check home button functionality for 20 times</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Display settings.<br />
	2. Press Home button and check if home screen appeared or not.<br />
	3. Repeat the above steps for 20 times.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. When Home button is pressed Home screen should appear for every iteration.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5816" name="I/O-Str:Check recent items button functionality for 20 times">
	<node_order><![CDATA[1005]]></node_order>
	<externalid><![CDATA[504]]></externalid>
	<fullexternalid><![CDATA[test-504]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check Recent items button functionality for 20 times</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.<br />
	2. Raven board should boot upto android.<br />
	3. DP connecting cable should be connected to the board and DP display.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Go to Settings-&gt;Display settings.<br />
	2. Select back button.<br />
	3. Check whether previous screen appeared.<br />
	4. Press Home button and check if home screen appeared or not.<br />
	5. Press Recent button and check if the settings page appears in recent items or not.<br />
	6. Repeat the above steps for 20 times.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. When Recent button is pressed, recent items should be displayed for every iteration.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="5819" name="OtherConnectivity" >
<node_order><![CDATA[14]]></node_order>
<details><![CDATA[<p>
	Create test suite for Other Connectivity&nbsp;</p>
]]></details> 

<testcase internalid="5820" name="OtherConnectivity:Check date/time update when device in active/idle state">
	<node_order><![CDATA[1002]]></node_order>
	<externalid><![CDATA[45]]></externalid>
	<fullexternalid><![CDATA[test-45]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify date and time update functionality when the device is in active/idle state.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1.Target device is booted up to android main menu.</div>
<div>
	2. Radio modules should not be enabled under device settings.</div>
<div>
	3. Connect the DC to the device and stay awake option should be enabled under Developer option.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Go to &quot;Settings -&gt; Date &amp; Time&quot;.</div>
<div>
	2. Uncheck the &ldquo;Automatic date &amp; time&rdquo; and &ldquo;Automatic time zone&rdquo; options.</div>
<div>
	3. Set the current date using the &quot;Set date&quot; option.</div>
<div>
	4. Set the &quot;time zone&quot; using &quot;Select time zone&quot; option.</div>
<div>
	5. Set the current time using &quot;Set time&quot; option.</div>
<div>
	6. Set the time format i.e. 12 hours or 24 hours format using &quot;Use 24-hour format&quot; option.</div>
<div>
	7. Now current date &amp; time is showing on the device notification bar as well as in settings under Date &amp; time.</div>
<div>
	8. Keep the device in the active or idle state for some time and check whether date and time is updated or not.</div>
<div>
	&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1.User defined Date should be updated on the notification bar and as well as the values should be same at set &quot;date&quot; option .</div>
<div>
	2. Selected time zone should be displayed at &quot;select time zone&quot; option .</div>
<div>
	3. Time value should be updated and that value should be same on status bar and at &quot;set time&quot; option.</div>
<div>
	4. Time format should be changed on status bar and at &quot;Use 24-hour format&quot; option according to the user action .</div>
<div>
	5. After some time, Date and Time should be updated according to user settings when the device is in active/idle state&nbsp;</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5823" name="OtherConnectivity:Check date and time update after power off/on the device">
	<node_order><![CDATA[1007]]></node_order>
	<externalid><![CDATA[95]]></externalid>
	<fullexternalid><![CDATA[test-95]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify date and time update functionality after the device is powered off/on.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Install latest build into target device.</div>
<div>
	2. Target device should boot up to android main menu.</div>
<div>
	3. Radio modules should not be enabled under device settings.</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Go to &quot;Settings -&gt; Date &amp; Time&quot;.</div>
<div>
	2. Uncheck the &ldquo;Automatic date &amp; time&rdquo; and &ldquo;Automatic time zone&rdquo; options.</div>
<div>
	3. Set the current date using the &quot;Set date&quot; option.</div>
<div>
	4. Set the &quot;time zone&quot; using &quot;Select time zone&quot; option.</div>
<div>
	5. Set the current time using &quot;Set time&quot; option.</div>
<div>
	6. Set the time format i.e. 12 hours or 24 hours format using &quot;Use 24-hour format&quot; option.</div>
<div>
	7. Now current date &amp; time is showing on the device notification bar as well as in settings under Date &amp; time.</div>
<div>
	8. Power off the device and wait for few minutes.</div>
<div>
	9. Power on the device and wait until device boots upto its lock screen.</div>
<div>
	10. Check whether expected/updated date and time is showing on the device notification bar or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.User defined Date should be updated on the notification bar and as well as the values should be same at set &quot;date&quot; option .</p>
<div>
	2. Selected time zone should be displayed at &quot;select time zone&quot; option.</div>
<div>
	3. Time value should be updated and that value should be same on status bar and at &quot;set time&quot; option.</div>
<div>
	4. Time format should be changed on status bar and at &quot;Use 24-hour format &quot; option according to the user action.</div>
<div>
	5. After the device power off and on, device should show the expected/updated date &amp; time on the device notification bar.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="5826" name="Smoke_tests" >
<node_order><![CDATA[15]]></node_order>
<details><![CDATA[<p>
	Created test suite for sanity</p>
]]></details> 

<testcase internalid="5827" name="Boot:Check device is booting to android screen">
	<node_order><![CDATA[0]]></node_order>
	<externalid><![CDATA[157]]></externalid>
	<fullexternalid><![CDATA[test-157]]></fullexternalid>
	<version><![CDATA[2]]></version>
	<summary><![CDATA[<p>
	Verify whether AMD Tambourine Platform is booting to its unlock screen or not..</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Switch on the device by using power button.</div>
<div>
	2. Verify whether AMD Tambourine platform is able to boot completely to device unlock screen or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	After switch on the Power button, the AMD Tambourine platform should be booting to its unlock screen without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_adb_detection.TestAdb]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5830" name="WiFi:Check WiFi option enable/disable">
	<node_order><![CDATA[1]]></node_order>
	<externalid><![CDATA[158]]></externalid>
	<fullexternalid><![CDATA[test-158]]></fullexternalid>
	<version><![CDATA[2]]></version>
	<summary><![CDATA[<p>
	Verify WiFi option enabling/disabling functionality</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Wi-Fi functionality should be supported in the build</div>
<div>
	3. WiFi module should be present on device.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings</div>
<div>
	2. Enable WiFi option and verify whether WiFi option is ON or not.</div>
<div>
	3. Disable WiFi option and check whether WiFi is OFF or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. WiFi should be ON when WiFi option is checked and WiFi should be off when the WiFi option is unchecked.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_wifi_on_off.TestWiFiOnOff]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5833" name="BT:Check BlueTooth option enable/disable functionality">
	<node_order><![CDATA[2]]></node_order>
	<externalid><![CDATA[159]]></externalid>
	<fullexternalid><![CDATA[test-159]]></fullexternalid>
	<version><![CDATA[2]]></version>
	<summary><![CDATA[<p>
	Verify Turn ON/OFF of Bluetooth functionality</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. BT h/w module should be present on the device&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to settings &gt; wireless &amp; networks &gt; Bluetooth&nbsp;</div>
<div>
	2. Turn On Bluetooth. Verify whether it is turned ON or not.&nbsp;</div>
<div>
	3. Turn OFF Bluetooth. Check whether it is turned OFF or not</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. BT should be turned ON when enabling the BT option and it should be turned OFF when the BT option is unchecked</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_bt_on_off.TestBTOnOff]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5836" name="Multimedia:Check JPEG decode functionality">
	<node_order><![CDATA[3]]></node_order>
	<externalid><![CDATA[160]]></externalid>
	<fullexternalid><![CDATA[test-160]]></fullexternalid>
	<version><![CDATA[2]]></version>
	<summary><![CDATA[<div>
	Verify whether DUT is supporting the JPEG image decode format or not:</div>
<div>
	&nbsp;</div>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Boot the DUT up to Android Main menu.</div>
<div>
	2. The JPEG image format should be available for testing.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Copy the image of JPEG format into the device.</div>
<div>
	2. Open Gallery Apk.</div>
<div>
	2. Open the above copied image from the device and check whether image is clearly visible or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The image of JPEG formate file should be open and show without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_jpeg_image_decode.TestJpegImageDecode]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5839" name="Multimedia:Check H263 video codec with 3GPP container">
	<node_order><![CDATA[4]]></node_order>
	<externalid><![CDATA[161]]></externalid>
	<fullexternalid><![CDATA[test-161]]></fullexternalid>
	<version><![CDATA[2]]></version>
	<summary><![CDATA[<p>Verify whether DUT is supporting the H.263 Video codec format with the 3GPP(.3gp) container files or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>1. Boot the DUT up to Android Main menu.</div>

<div>2. The H.263 video codec supported files of .3gp container should be available for testing.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Copy the H.263 video codec supported of the .3gp container files into the device.</div>
<div>
	2. Open the Gallery Apk.</div>
<div>
	3. Select and Playback the above copied files from the device and check whether they are playing without any issues or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The device should playback the H.263 video codec supported of the .3gp container files without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional ]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_H263_3GPP.TestVideoH2633GPP]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5842" name="Multimedia:Check Audeo decode functionality of .mp3 format">
	<node_order><![CDATA[5]]></node_order>
	<externalid><![CDATA[162]]></externalid>
	<fullexternalid><![CDATA[test-162]]></fullexternalid>
	<version><![CDATA[2]]></version>
	<summary><![CDATA[<div>
	Verify whether the DUT is supporting the Playback of MP3(.mp3) Audio format or not.&nbsp;</div>
<div>
	&nbsp;</div>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Boot DUT up to Android Main menu.</div>
<div>
	2. Should be available the MP3(.mp3) audio codec format file.</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Copy the MP3(.mp3) Audio decode format file into the device.</div>
<div>
	2. Open the Music Apk.</div>
<div>
	3. Select and Playback the above copied file from the device and Check whether DUT is playback the file without any issues or not.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1.The DUT should playback the MP3(.mp3) Audio format file without any issues.</div>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_audio_mp3.TestAudioMp3]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5845" name="OtherConnectivity:Check Airplane mode option enable/disable functionality">
	<node_order><![CDATA[6]]></node_order>
	<externalid><![CDATA[163]]></externalid>
	<fullexternalid><![CDATA[test-163]]></fullexternalid>
	<version><![CDATA[2]]></version>
	<summary><![CDATA[<p>
	Verify whether system is able to enable and disable Airplane mode or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Goto settings.</div>
<div>
	2. Goto wireless &amp; network settings &rarr; More.</div>
<div>
	3. Check whether system is able to enable the Airplane option or not. And also check whether able to disable the Airplane option or not.</div>
<div>
	&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Should be able to enable/disable the Airplane option.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_airplane_on_off.TestAirplaneOnOff]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5848" name="OtherConnectivity:Check browse with URLs">
	<node_order><![CDATA[9]]></node_order>
	<externalid><![CDATA[164]]></externalid>
	<fullexternalid><![CDATA[test-164]]></fullexternalid>
	<version><![CDATA[2]]></version>
	<summary><![CDATA[<p>
	Verify whether the DUT is able to browse web sites using URL&#39;s or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android Main menu</div>
<div>
	2. The&nbsp; DUT should have the internet facility (Wi-Fi / 3G / Ethernet)</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Open the Browser Apk,</div>
<div>
	2. Open the &ldquo;www.msn.com&rdquo; URL.</div>
<div>
	3. Check whether the MSN website open or not</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	The DUT should be able to browse web sites using URL&#39;s and able to access the &ldquo;www.msn.com&rdquo; website.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_browse_ethernet.TestBrowseEthernet]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5851" name="Camera:Check able to capture an image">
	<node_order><![CDATA[10]]></node_order>
	<externalid><![CDATA[165]]></externalid>
	<fullexternalid><![CDATA[test-165]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether Camera is able to capture image</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Camera functionality should be supported in the build</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1 Select camera icon available in home screen 2.Try to capture the image in Normal mode.&nbsp; &nbsp; &nbsp; &nbsp;3.Check whether proper image is captured and stored in the respective folder in sdcard.</p>
]]></actions>
	<expectedresults><![CDATA[<div>
	&nbsp;</div>
<div>
	Image should be captured and stored in the respective folder in sdcard.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5854" name="Camera:Check video recording functionality">
	<node_order><![CDATA[11]]></node_order>
	<externalid><![CDATA[166]]></externalid>
	<fullexternalid><![CDATA[test-166]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether Camera supports video recording feature</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu<br />
	2. Camera functionality should be supported in the build<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1 Select camera icon available in home screen<br />
	2.Select video recording option and try recording video of the objects.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />
	3.Check whether proper video is recorded and stored in the respective folder in sdcard.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	<br />
	Image of distant objects should be captured properly and stored in the respective folder in sdcard.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6196" name="20190614-18:32:30 Display:Check DP detection">
	<node_order><![CDATA[1006]]></node_order>
	<externalid><![CDATA[545]]></externalid>
	<fullexternalid><![CDATA[test-545]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check DP is detected or not</p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">
	1. OS should installed properly on the device with out any issues.&nbsp;</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">
	2. Raven board should boot upto android&nbsp;</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">
	3. DP connection port should existed in the board.</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">
	4. DP display should connected to device DP port</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Enter the command &ldquo; adb shell cat /sys/class/drm/card0-DP-1/status&ldquo; in pc terminal and check whether &ldquo;connected&rdquo; message is displaying or not. If&nbsp; &ldquo;connected&rdquo; message is displayed then DP detected otherwise it is not detected.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. When the DP cable is connected the device and after entering the &ldquo; adb shell cat /sys/class/drm/card0-DP-1/status&rdquo; command in PC terminal then &ldquo;connected&rdquo; message should be displayed.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_dp_detection.TestDpDetection]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="5860" name="Sanity_tests" >
<node_order><![CDATA[16]]></node_order>
<details><![CDATA[<p>
	Created test suite for sanity</p>
]]></details> 
<testsuite id="5861" name="Boot" >
<node_order><![CDATA[1]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="5862" name="Boot:Check binaries flashing on device">
	<node_order><![CDATA[0]]></node_order>
	<externalid><![CDATA[167]]></externalid>
	<fullexternalid><![CDATA[test-167]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check flashing of binaries into DUT functionality.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. ISO image should be available in pc for flashing.</div>
<div>
	2. Raven board with hard disk should be available.</div>
<div>
	3. &ldquo;Unetbootin&rdquo; tool should be available in PC.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Connect the USB storage drive in PC.</div>
<div>
	2. Open &ldquo;Unetbootin &ldquo; tool.</div>
<div>
	3. Select &ldquo;ISO&rdquo; option under &ldquo;Diskimage&rdquo;&nbsp; drop down box and select the &ldquo;Diskimage&rdquo; radio button.</div>
<div>
	4. Choose the ISO image from pc by browse and click on &ldquo;OK&rdquo; button. Once flashing done press on exit button.</div>
<div>
	5. Connect the USB flash drive to DUT USB port which is having the ISO image.</div>
<div>
	6. Power on the device, press on F12 button after power on the device.</div>
<div>
	7. Select the&rdquo;Auto_Installation &ndash; Auto Install to specified harddisk&rdquo; option.</div>
<div>
	8. Select the Installer source option which you want to install.</div>
<div>
	9. Select&nbsp; the &ldquo;Yes&rdquo; button on &ldquo;Auto Installer&rdquo; dialog.</div>
<div>
	10. check whether installation is success or not.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. The &ldquo;ISO&rdquo; image should be flashed into expected USB storage.</div>
<div>
	2. Should be able to select the &ldquo;Auto_Installation &ndash; Auto Install to specified harddisk&rdquo; option.</div>
<div>
	3. Image should be flashed into DUT using Auto installer option on specified source.</div>
<div>
	&nbsp;</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5865" name="Boot:Check device is booting to android screen">
	<node_order><![CDATA[3]]></node_order>
	<externalid><![CDATA[168]]></externalid>
	<fullexternalid><![CDATA[test-168]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether AMD Tambourine Platform is booting to its unlock screen or not..</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Switch on the device by using power button.</div>
<div>
	2. Verify whether AMD Tambourine platform is able to boot completely to device unlock screen or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	After switch on the Power button, the AMD Tambourine platform should be booting to its unlock screen without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="5868" name="Display" >
<node_order><![CDATA[2]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="5869" name="Display:Check DP detection">
	<node_order><![CDATA[6]]></node_order>
	<externalid><![CDATA[207]]></externalid>
	<fullexternalid><![CDATA[test-207]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check DP is detected or not</p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">
	1. OS should installed properly on the device with out any issues.&nbsp;</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">
	2. Raven board should boot upto android&nbsp;</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">
	3. DP connection port should existed in the board.</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">
	4. DP display should connected to device DP port</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Enter the command &ldquo; adb shell cat /sys/class/drm/card0-DP-1/status&ldquo; in pc terminal and check whether &ldquo;connected&rdquo; message is displaying or not. If&nbsp; &ldquo;connected&rdquo; message is displayed then DP detected otherwise it is not detected.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. When the DP cable is connected the device and after entering the &ldquo; adb shell cat /sys/class/drm/card0-DP-1/status&rdquo; command in PC terminal then &ldquo;connected&rdquo; message should be displayed.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_dp_detection.TestDpDetection]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5872" name="Display:Check DP display">
	<node_order><![CDATA[7]]></node_order>
	<externalid><![CDATA[208]]></externalid>
	<fullexternalid><![CDATA[test-208]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check DP display is coming or not after power on the device</p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">
	1. OS should installed properly on the device with out any issues.</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">
	2. DP connection port should be there on the board.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.Connect the DP display to the device DP port.</p>
<p>
	2. Power on the device and check the display screen.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.Board should bootup properly with out any issues and there should not be screen corruptions or hangs. DP display screen should be shown properly without any issues.&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="5875" name="Ethernet" >
<node_order><![CDATA[3]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="5876" name="Ethernet:Check Ethernet detection">
	<node_order><![CDATA[0]]></node_order>
	<externalid><![CDATA[171]]></externalid>
	<fullexternalid><![CDATA[test-171]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the Ethernet detection functionality.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Build should support Ethernet.</div>
<div>
	2. Ethernet cable should be available and it has Internet connection.</div>
<div>
	3. Boot the DUT completely to its unlock screen.</div>
<div>
	4. Connect Ethernet Cable to the Raven Board Ethernet port.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Check whether Ethernet cable is detected or not by looking at the Ethernet port. If the cable is detected&nbsp; then LED light will blink at the port.&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	The Ethernet cable should detect&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_ethernet_connection.TestEthernet]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5879" name="Ethernet:Check Ethernet connection and disconnection">
	<node_order><![CDATA[7]]></node_order>
	<externalid><![CDATA[172]]></externalid>
	<fullexternalid><![CDATA[test-172]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Ethernet Connect and Disconnect functionality</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Build should support Ethernet.</div>
<div>
	2. Ethernet cable should be available and it has Internet connection.</div>
<div>
	3. Boot the DUT completely to its unlock screen.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Connect Ethernet Cable to the Raven Board Ethernet port.</div>
<div>
	2. Check whether Ethernet cable is detected or not by looking at the Ethernet port. If the cable is detected&nbsp; then LED light will blink at the port.&nbsp;</div>
<div>
	3. Disconnect Ethernet Cable from the Raven Board Ethernet port.</div>
<div>
	4. Check again whether the LED at Ethernet port is OFF or not.</div>
<div>
	5.Enter ifconfig command on the DUT after disconnection.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1&amp;2. The Ethernet cable should detect and LED should Blink/ON&nbsp; when the Ethernet cable is connected to device Ethernet port and should able to ping &quot;google.co.in successfully.&quot;&nbsp;</div>
<div>
	&nbsp;</div>
<div>
	3&amp;4. The Ethernet LED should OFF when the Ethernet cable is disconnected from the Ethernet port.</div>
<div>
	5.IP address should not be configured to the DUT after disconnection of ethernet.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5882" name="Ethernet:Check browsing with Ethernet">
	<node_order><![CDATA[8]]></node_order>
	<externalid><![CDATA[173]]></externalid>
	<fullexternalid><![CDATA[test-173]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether the system is able to browse with Ethernet&nbsp;</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Build should support Ethernet.</div>
<div>
	2. Dynamic IP should configured to DUT.</div>
<div>
	3. Boot the DUT completely to its unlock screen.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Connect Ethernet Cable to the Raven Board Ethernet port.</div>
<div>
	2. Check whether Ethernet cable is detected or not by looking at the Ethernet port. If the cable is detected&nbsp; then LED light will blink at the port.&nbsp;</div>
<div>
	3. Open browser and try to access some web sites.&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. Ethernet cable should detect when it is connected to device Ethernet port.&nbsp;</div>
<div>
	2&amp;3.System should be able to browse the internet without any issues</div>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_browse_ethernet.TestBrowseEthernet]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5885" name="Ethernet:Check adb over Ethernet">
	<node_order><![CDATA[9]]></node_order>
	<externalid><![CDATA[174]]></externalid>
	<fullexternalid><![CDATA[test-174]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether the DUT support to adb over Ethernet functionality or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Build should support Ethernet.</div>
<div>
	2. Ethernet cable should be available and it has Internet connection.</div>
<div>
	3. Boot the DUT completely to its unlock screen.</div>
<div>
	4. Should have Host PC.</div>
<div>
	5. should have the DUT IP Address</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Connect Ethernet Cable to the Raven Board Ethernet port.</div>
<div>
	2. Check whether Ethernet cable is detected or not by looking at the Ethernet port. If the cable is detected&nbsp; then LED light will blink at the port.&nbsp;</div>
<div>
	3. Open &ldquo;Terminal Emulator&rdquo; Apk on DUT.</div>
<div>
	4. Run &ldquo;su&rdquo; command on DUT terminal.</div>
<div>
	5. Run &ldquo;setprop service.adb.tcp.port 5555&rdquo; command on DUT terminal.</div>
<div>
	6. Run &ldquo;stop adbd&rdquo; command on DUT terminal.</div>
<div>
	7. Run &ldquo;start adbd&rdquo; command on DUT terminal.</div>
<div>
	8. Now open terminal in Host PC and Run &ldquo;adb connect &lt;DUT IP Address&gt; &rdquo;.</div>
<div>
	9. Check whether the DUT is enumerated in PC or not by entering the&nbsp; &quot;adb devices&quot; command in PC terminal.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. The Ethernet cable should detect and LED should Blink/ON&nbsp; when the Ethernet cable is connected to device Ethernet port .&nbsp;</div>
<div>
	2. The &ldquo;adb connect &lt;DUT IP Address&gt;&rdquo; command should show the &ldquo;Connected to &lt;DUT IP Address&gt;&rdquo;</div>
<div>
	3. The DUT should show under the &ldquo;adb devices&rdquo; list.</div>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_adb_commands.Testadbcommand]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="5888" name="USB" >
<node_order><![CDATA[4]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="5889" name="USB:Check USB Keyboard detection">
	<node_order><![CDATA[0]]></node_order>
	<externalid><![CDATA[175]]></externalid>
	<fullexternalid><![CDATA[test-175]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the USB Keyboard Functionality</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.</div>
<div>
	2. USB should work as a host.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Connect the USB Keyboard to USB port on the device and then power on the System.</div>
<div>
	2.Press F12 or DEL to enter into BIOS settings/Boot Menu.</div>
<div>
	3.After bootup,Open any notepad kind of application and enter all the keys,check the functionality.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. USB should detect properly without any issues.</div>
<div>
	2.Keyboard should work properly without any issues and system should enter into BIOS/BootMenu.</div>
<div>
	3.All keys in the Keyboard should work properly without any issues.</div>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_usb_keyboard.TestUsbKeyboard]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5892" name="USB:Check USB Mouse detection">
	<node_order><![CDATA[11]]></node_order>
	<externalid><![CDATA[176]]></externalid>
	<fullexternalid><![CDATA[test-176]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the USB Mouse Functionality</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.</div>
<div>
	2. USB should work as a host.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Connect the USB Keyboard to USB port on the device and then power on the System.</div>
<div>
	2.Press F12 or DEL to enter into BIOS settings/Boot Menu and use Mouse to select different options.</div>
<div>
	3.After bootup,Use mouse options(Leftclick and Right click ,etc.,) to open application and perform actions.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. USB should detect properly without any issues.</div>
<div>
	2.Keyboard And Mouse should work properly without any issues.</div>
<div>
	3.Mouse functionality should work properly without any issues.</div>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_usb_mouse.TestUsbMouse]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5895" name="USB:Check USB storage detection">
	<node_order><![CDATA[12]]></node_order>
	<externalid><![CDATA[177]]></externalid>
	<fullexternalid><![CDATA[test-177]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the USB Storage device Functionality</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.</div>
<div>
	3. USB should work as a host.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	&nbsp;</div>
<div>
	1. Connect a USB storage device (e.g.: USB 2.0/3.0 Flash device/Pen drives) to USB host port.</div>
<div>
	2. Go to settings -&gt; Storage -&gt; USB disk.</div>
<div>
	3. Now check whether USB 2.0 flash device is detected or not with out any issues. .&nbsp;</div>
<div>
	&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. USB Storage should detect in USB host port and also device display screen should not rotate when the USB 2.0 devices connected to host port.USb storage device data should display properly without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_usb_storage.TestUsbStorage]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="5898" name="WiFi" >
<node_order><![CDATA[5]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="5899" name="WiFi:Check WiFi option enable/disable">
	<node_order><![CDATA[0]]></node_order>
	<externalid><![CDATA[178]]></externalid>
	<fullexternalid><![CDATA[test-178]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify WiFi option enabling/disabling functionality</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Wi-Fi functionality should be supported in the build</div>
<div>
	3. WiFi module should be present on device.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings</div>
<div>
	2. Enable WiFi option and verify whether WiFi option is ON or not.</div>
<div>
	3. Disable WiFi option and check whether WiFi is OFF or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. WiFi should be ON when WiFi option is checked and WiFi should be off when the WiFi option is unchecked.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_wifi_on_off.TestWiFiOnOff]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5902" name="WiFi:Check WiFi scan functionality">
	<node_order><![CDATA[14]]></node_order>
	<externalid><![CDATA[179]]></externalid>
	<fullexternalid><![CDATA[test-179]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether device is able to scan and show all the available supported WiFi frequency networks or not.&nbsp;</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Wi-Fi functionality should be supported in the build</div>
<div>
	3. WiFi module should be present on device.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Enable Wi-Fi option on DUT</div>
<div>
	2. Verify whether Wi-Fi is able to scan and show all the supported frequency bands available networks when the WiFi option is enabled.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Wi-Fi should scan and show all the supported frequency bands available networks when the WiFi option is enabled.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_wifi_scan.TestWiFiScan]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="5905" name="BT" >
<node_order><![CDATA[6]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="5906" name="BT:Check BlueTooth option enable/disable functionality">
	<node_order><![CDATA[0]]></node_order>
	<externalid><![CDATA[182]]></externalid>
	<fullexternalid><![CDATA[test-182]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Turn ON/OFF of Bluetooth functionality</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. BT h/w module should be present on the device&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to settings &gt; wireless &amp; networks &gt; Bluetooth&nbsp;</div>
<div>
	2. Turn On Bluetooth. Verify whether it is turned ON or not.&nbsp;</div>
<div>
	3. Turn OFF Bluetooth. Check whether it is turned OFF or not</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. BT should be turned ON when enabling the BT option and it should be turned OFF when the BT option is unchecked</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_bt_on_off.TestBTOnOff]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5909" name="BT:Check Bluettoth scan functionality">
	<node_order><![CDATA[18]]></node_order>
	<externalid><![CDATA[183]]></externalid>
	<fullexternalid><![CDATA[test-183]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Scan for devices functionality.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. BT h/w module should be present on the device&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to settings &gt; Wireless &amp; Networks &gt; Bluetooth Settings&nbsp;</div>
<div>
	2. Turn On Bluetooth.</div>
<div>
	3. Turn on Bluetooth in other device and make it as discoverable by other Bluetooth devices</div>
<div>
	4. Select scan for the devices to check for the available Bluetooth devices around.</div>
<div>
	5. Turn on Bluetooth in some other device and make sure it is discoverable by other devices.&nbsp;</div>
<div>
	6. Select &quot;scan for devices&quot; in DUT.&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. on selecting &quot;scan for devices&quot;, device should run the scan again and the available device list should refresh and show the list.&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5912" name="BT:Check BT is pairing to FTP device">
	<node_order><![CDATA[19]]></node_order>
	<externalid><![CDATA[184]]></externalid>
	<fullexternalid><![CDATA[test-184]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Pair and Connect to FTP Device</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. BT h/w module should be present on the device&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to settings &gt; Wireless &amp; Networks &gt; Bluetooth Settings&nbsp;</div>
<div>
	2. Turn On Bluetooth.</div>
<div>
	3. Check the &quot;discoverable&quot; option.</div>
<div>
	4. Turn the Bluetooth on on another FTP device and make sure it is discoverable</div>
<div>
	5. Scan for the Bluetooth devices around</div>
<div>
	6. Pair with another FTP device&nbsp;</div>
<div>
	7. Check for any issues.&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. DUT should be paired and connected with another FTP device.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="5915" name="OtherConnectivity" >
<node_order><![CDATA[7]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="5916" name="OtherConnectivity:Check Airplane mode option enable/disable functionality">
	<node_order><![CDATA[0]]></node_order>
	<externalid><![CDATA[186]]></externalid>
	<fullexternalid><![CDATA[test-186]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether system is able to enable and disable Airplane mode or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Goto settings.</div>
<div>
	2. Goto wireless &amp; network settings &rarr; More.</div>
<div>
	3. Check whether system is able to enable the Airplane option or not. And also check whether able to disable the Airplane option or not.</div>
<div>
	&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Should be able to enable/disable the Airplane option.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_airplane_on_off.TestAirplaneOnOff]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5919" name="OtherConnectivity:Check date/time update when device in active/idle state">
	<node_order><![CDATA[23]]></node_order>
	<externalid><![CDATA[188]]></externalid>
	<fullexternalid><![CDATA[test-188]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify date and time update functionality when the device is in active/idle state.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1.Target device is booted up to android main menu.</div>
<div>
	2. Radio modules should not be enabled under device settings.</div>
<div>
	3. Connect the DC to the device and stay awake option should be enabled under Developer option.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Go to &quot;Settings -&gt; Date &amp; Time&quot;.</div>
<div>
	2. Uncheck the &ldquo;Automatic date &amp; time&rdquo; and &ldquo;Automatic time zone&rdquo; options.</div>
<div>
	3. Set the current date using the &quot;Set date&quot; option.</div>
<div>
	4. Set the &quot;time zone&quot; using &quot;Select time zone&quot; option.</div>
<div>
	5. Set the current time using &quot;Set time&quot; option.</div>
<div>
	6. Set the time format i.e. 12 hours or 24 hours format using &quot;Use 24-hour format&quot; option.</div>
<div>
	7. Now current date &amp; time is showing on the device notification bar as well as in settings under Date &amp; time.</div>
<div>
	8. Keep the device in the active or idle state for some time and check whether date and time is updated or not.</div>
<div>
	&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1.User defined Date should be updated on the notification bar and as well as the values should be same at set &quot;date&quot; option .</div>
<div>
	2. Selected time zone should be displayed at &quot;select time zone&quot; option .</div>
<div>
	3. Time value should be updated and that value should be same on status bar and at &quot;set time&quot; option.</div>
<div>
	4. Time format should be changed on status bar and at &quot;Use 24-hour format&quot; option according to the user action .</div>
<div>
	5. After some time, Date and Time should be updated according to user settings when the device is in active/idle state&nbsp;</div>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_date_time.Test_Date_time]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="5922" name="Multimedia" >
<node_order><![CDATA[8]]></node_order>
<details><![CDATA[]]></details> 
<testsuite id="5923" name="Audio" >
<node_order><![CDATA[1]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="5924" name="Multimedia:Check Audeo decode functionality of .mp3 format">
	<node_order><![CDATA[0]]></node_order>
	<externalid><![CDATA[196]]></externalid>
	<fullexternalid><![CDATA[test-196]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<div>
	Verify whether the DUT is supporting the Playback of MP3(.mp3) Audio format or not.</div>
<div>
	&nbsp;</div>
<div>
	&nbsp;</div>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Boot DUT up to Android Main menu.</div>
<div>
	2. Should be available the MP3(.mp3) audio codec format files</div>
<div>
	&nbsp;</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Copy the MP3(.mp3) Audio decode format file into the device.</div>
<div>
	2. Open the Music Apk.</div>
<div>
	3. Select and Playback the above copied file from the device and Check whether DUT is playing audio file without any issues or not.</div>
<div>
	&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1.The DUT should support the Playback of MP3(.mp3) Audio format without any issues.</div>
<div>
	&nbsp;</div>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_audio_mp3.TestAudioMp3]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5927" name="Multimedia:Check Audio decode functionality of .wav format">
	<node_order><![CDATA[32]]></node_order>
	<externalid><![CDATA[197]]></externalid>
	<fullexternalid><![CDATA[test-197]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<div>
	Verify whether the DUT is supporting the Playback of PCM/WAVE(.wav) Audio format or not.</div>
<div>
	&nbsp;</div>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Boot DUT up to Android Main menu.</div>
<div>
	2. Should be available the PCM/WAVE(.wav) audio codec file.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Copy the WAVE(.wav) audio codec format file into the device.</div>
<div>
	2. Open the Music Apk.</div>
<div>
	3. Select and Playback the above copied file from the device and Check whether DUT is playing without any issues or not.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. The DUT should support the Playback of WAVE(.wav) Audio decode format file without any issues.</div>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_audio_wav.TestAudioWav]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="5930" name="Video" >
<node_order><![CDATA[2]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="5931" name="Multimedia:Check H263 video codec with 3GPP container">
	<node_order><![CDATA[0]]></node_order>
	<externalid><![CDATA[189]]></externalid>
	<fullexternalid><![CDATA[test-189]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether DUT is supporting the H.263 Video codec format with the 3GPP(.3gp) container files or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Boot the DUT up to Android Main menu.</div>
<div>
	2. The H.263 video codec supported files of .3gp container should be available for testing.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Copy the H.263 video codec supported of the .3gp container files into the device.</div>
<div>
	2. Open the Gallery Apk.</div>
<div>
	3. Select and Playback the above copied files from the device and check whether they are playing without any issues or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The device should playback the H.263 video codec supported of the .3gp container files without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_H263_3GPP.TestVideoH263_3GPP]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5934" name="Multimedia:Check H264 video codec with .mp4 container">
	<node_order><![CDATA[27]]></node_order>
	<externalid><![CDATA[192]]></externalid>
	<fullexternalid><![CDATA[test-192]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether DUT is supporting the H.264 AVC video codec with the container of .mp4 files or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Boot the DUT up to Android Main menu.</div>
<div>
	2. The H.264 AVC video codec supported files of .mp4 container should be available for testing.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Copy the H.264 AVC video codec supported of the .mp4 container files&nbsp; into the device.</div>
<div>
	2. Open the Gallery Apk.</div>
<div>
	3. Playback the above copied files from the device and check whether they are playing without any issues or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The device should playback the H.264 AVC video codec supported of the .mp4 container files without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_H264_AVC_mp4.TestVideoH264_AVC_MP4]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="5937" name="Images" >
<node_order><![CDATA[3]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="5938" name="Multimedia:Check JPEG decode functionality">
	<node_order><![CDATA[0]]></node_order>
	<externalid><![CDATA[194]]></externalid>
	<fullexternalid><![CDATA[test-194]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<div>
	Verify whether DUT is supporting the JPEG image decode format or not:</div>
<div>
	&nbsp;</div>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Boot the DUT up to Android Main menu.</div>
<div>
	2. The JPEG image format should be available for testing.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Copy the image of JPEG format into the device.</div>
<div>
	2. Open Gallery Apk.</div>
<div>
	2. Open the above copied image from the device and check whether image is clearly visible or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The image of JPEG formate file should be open and show without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_jpeg_image_decode.TestJpegImageDecode]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5941" name="Multimedia:Check PNG decode functionality">
	<node_order><![CDATA[30]]></node_order>
	<externalid><![CDATA[195]]></externalid>
	<fullexternalid><![CDATA[test-195]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<div>
	Verify whether DUT is supporting the PNG image decode format or not:</div>
<div>
	&nbsp;</div>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Boot the DUT up to Android Main menu.</div>
<div>
	2. The PNG image format should be available for testing.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Copy the image of PNG format into the device.</div>
<div>
	2. Open Gallery Apk.</div>
<div>
	2. Open the above copied image from the device and check whether image is clearly visible or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The image of PNG formate file should be open and show without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_png_image_decode.TestPNGImageDecode]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite></testsuite><testsuite id="5944" name="PowerSuspendResume" >
<node_order><![CDATA[9]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="5945" name="PowerSuspendResume:Check device suspend/resume functionality">
	<node_order><![CDATA[1004]]></node_order>
	<externalid><![CDATA[200]]></externalid>
	<fullexternalid><![CDATA[test-200]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the Display after Suspend and Resume</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Connect the HDMI display to the board and then power on the board. Check the display screen.</div>
<div>
	2. Disable the stay awake option in developer options</div>
<div>
	3. Set the wake time in display to 15 seconds</div>
<div>
	4.Suspend and resume the DUT then check the Display.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	&nbsp;</div>
<div>
	DUT Should enter into the sleep mode and display screen becomes blank and also device should resume from suspend state properly,Display screen should shown properly without any issues.&nbsp;</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="5948" name="Graphics" >
<node_order><![CDATA[10]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="5949" name="Graphics:Check 3D graphics tests">
	<node_order><![CDATA[0]]></node_order>
	<externalid><![CDATA[203]]></externalid>
	<fullexternalid><![CDATA[test-203]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether 3D graphic tests are playing or not</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu.</div>
<div>
	2. The &ldquo;AnTuTu3DBench-com.antutu.benchmark.full-6000400-v6.0.4.apk&rdquo; benchmark should be available.&nbsp;</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Install the &ldquo;AnTuTu3DBench-com.antutu.benchmark.full-6000400-v6.0.4.apk&rdquo; in the device.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2. Open the above installed apk.</div>
<div>
	3. Check whether 3D graphics tests(Marooned and Garden) are playing or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	The antutu 3D graphics tests should be played without any lagging.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5952" name="Graphics:Check OpenGL ES3.1 tests in 3D Mark">
	<node_order><![CDATA[1008]]></node_order>
	<externalid><![CDATA[204]]></externalid>
	<fullexternalid><![CDATA[test-204]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check OpenGL ES3.1 tests in 3D Mark</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu.</div>
<div>
	2. The &ldquo;3D Mark benchmark should be available.&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Install the &ldquo;3D Mark benchmark&quot; apk in the device.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2. Open the above installed apk.</div>
<div>
	3. Play the OpenGL ES3.1 graphics tests and check colors or graphics of the images are visible clear or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. All the OpenGL ES3.1 Graphics tests should play without any corruptions.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="5955" name="Camera" >
<node_order><![CDATA[11]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="5956" name="Camera:Check able to capture an image">
	<node_order><![CDATA[0]]></node_order>
	<externalid><![CDATA[205]]></externalid>
	<fullexternalid><![CDATA[test-205]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether Camera is able to capture image</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Camera functionality should be supported in the build</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1 Select camera icon available in home screen 2.Try to capture the image in Normal mode.&nbsp; &nbsp; &nbsp; &nbsp;3.Check whether proper image is captured and stored in the respective folder in sdcard.</p>
]]></actions>
	<expectedresults><![CDATA[<div>
	&nbsp;</div>
<div>
	Image should be captured and stored in the respective folder in sdcard.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5959" name="Camera:Check video recording functionality">
	<node_order><![CDATA[1024]]></node_order>
	<externalid><![CDATA[206]]></externalid>
	<fullexternalid><![CDATA[test-206]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether Camera supports video recording feature</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu<br />
	2. Camera functionality should be supported in the build<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1 Select camera icon available in home screen<br />
	2.Select video recording option and try recording video of the objects.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />
	3.Check whether proper video is recorded and stored in the respective folder in sdcard.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	<br />
	Image of distant objects should be captured properly and stored in the respective folder in sdcard.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite></testsuite><testsuite id="5962" name="Archived" >
<node_order><![CDATA[17]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="5963" name="Boot:Check device booting after hardshutdown">
	<node_order><![CDATA[1]]></node_order>
	<externalid><![CDATA[7]]></externalid>
	<fullexternalid><![CDATA[test-7]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether device is re-booting properly or not after abruptly power off it.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.&nbsp;</div>
<div>
	2. Raven board should boot upto android.</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.While operating the device i.e. while video playback, during browsing, power off the device using power button.</div>
<div>
	2. Now power on the device and check whether DUT is booting to android lock screen or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. After power off the device, while operating the device, i.e. during video playback or browsing, device should boot upto android lock screen after power on.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5966" name="Display:Check HDMI display">
	<node_order><![CDATA[2]]></node_order>
	<externalid><![CDATA[8]]></externalid>
	<fullexternalid><![CDATA[test-8]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the HDMI Display after power on the board.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1.Connect the HDMI display to the board and then power on the board. Check the display screen.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.Board should bootup properly with out any issues and there should not be screen corruptions or hangs. Display screen should be shown properly without any issues.&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5969" name="Display:Check HDMI cable detection">
	<node_order><![CDATA[3]]></node_order>
	<externalid><![CDATA[9]]></externalid>
	<fullexternalid><![CDATA[test-9]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether HDMI is detecting or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.&nbsp;</div>
<div>
	2. Raven board should boot upto android&nbsp;</div>
<div>
	3. HDMI cable should be connected to the board.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Enter the command &ldquo; adb shell cat /sys/class/drm/card0-HDMI-A-1/status&ldquo; in pc terminal and check whether &ldquo;connected&rdquo; message is displaying or not. If&nbsp; &ldquo;connected&rdquo; message is displayed then HDMI is detected otherwise it is not detected.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. When the HDMI cable is connected the device and after entering the &ldquo; adb shell cat /sys/class/drm/card0-HDMI-A-1/status&rdquo; command in PC terminal then &ldquo;connected&rdquo; message should be displayed.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5972" name="Display:Check HDMI display after suspend/resume">
	<node_order><![CDATA[4]]></node_order>
	<externalid><![CDATA[10]]></externalid>
	<fullexternalid><![CDATA[test-10]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the HDMI Display after Suspend and Resume</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Connect the HDMI display to the board and then power on the board. Check the display screen.</div>
<div>
	2.Suspend and resume the DUT then check the Display.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1.Board should bootup properly with out any issues and there should not be screen corruptions or hangs.</div>
<div>
	2.DUT Should enter into the sleep and resume properly,Display screen should shown properly without any issues.&nbsp;</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5975" name="Display:Check HDMI hot-plugin and hot-plugout">
	<node_order><![CDATA[5]]></node_order>
	<externalid><![CDATA[11]]></externalid>
	<fullexternalid><![CDATA[test-11]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the Hot-plug and Hot-unplug of the HDMI Display</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Connect the HDMI display to the board and then power on the board. Check the display screen.</div>
<div>
	2.Remove the HDMI cable on the board.</div>
<div>
	3.Connect the HDMI cable again to the board.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1.Board should bootup properly with out any issues and there should not be screen corruptions or hangs.</div>
<div>
	2&amp;3.Display should off after disconnecting the cable without any corruptions and display should shown properly after connecting the device again.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5978" name="Display:Check detection of different resolutions">
	<node_order><![CDATA[6]]></node_order>
	<externalid><![CDATA[12]]></externalid>
	<fullexternalid><![CDATA[test-12]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether DUT is detecting different resolution displays or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Working binaries should be copied into device.</div>
<div>
	2. Different resolution displays i.e. DP displays should be available for testing.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Connect the DP display to the board and then power on the board. Check the display screen.</div>
<div>
	2. Repeat the above step with different resolutions.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. DUT should detect different resolution displays connected to it and it should show properly without any issues i.e. corruptions</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5981" name="WiFi:Check able to enable/disable the portable WiFi hotspot option">
	<node_order><![CDATA[7]]></node_order>
	<externalid><![CDATA[72]]></externalid>
	<fullexternalid><![CDATA[test-72]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether user is able to enable/disable the Portable Wi-Fi hotspot option&nbsp; or not</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Wi-Fi functionality should be supported in the build</div>
<div>
	3. WiFi module should be present on device.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Goto &quot;settings -&gt; Wireless and networks -&gt;Tethering &amp; portable hotspot.</div>
<div>
	2. Select the Portable Wi-Fi hotspot option and check whether hotspot option is enabled or not and also check whether hotspot symbol is showing on the device status bar or not.</div>
<div>
	3. Deselect the WiFi hotspot option and check whether hotspot option is disappeared from the device status bar or not.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. WiFi hotspot option should be enabled when it is selected and also hotspot symbol should be shown on the device status bar.</div>
<div>
	2. WiFi hotspot option should be disabled when it is deselected and also hotspot symbol should disappear from the device status bar.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5984" name="WiFi:Check able to enable/disable the portable WiFi hotspot option 10 times">
	<node_order><![CDATA[8]]></node_order>
	<externalid><![CDATA[73]]></externalid>
	<fullexternalid><![CDATA[test-73]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether user is able to enable/disable the Portable WiFi hotspot option 10 times or not</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Wi-Fi functionality should be supported in the build</div>
<div>
	3. WiFi module should be present on device.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Goto &quot;settings -&gt; Wireless and networks -&gt;Tethering &amp; portable hotspot.</div>
<div>
	2. Select the Portable Wi-Fi hotspot option and check whether hotspot option is enabled or not and also check whether hotspot symbol is showing on the device status bar or not.</div>
<div>
	3. Deselect the WiFi hotspot option and check whether hotspot option is disappeared from the device status bar or not.</div>
<div>
	4. Repeat the above steps from the 2 to 3 for 10 times.&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. WiFi hotspot option should be enabled when it is selected and also hotspot symbol should be shown on the device status bar for each iteration</div>
<div>
	2. WiFi hotspot option should be disabled when it is un selected and also hotspot symbol should be disappear from the device status bar for each iteration</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Stress]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5987" name="WiFi:Check able to turn-on WiFi when Airplane option is in enabled state">
	<node_order><![CDATA[9]]></node_order>
	<externalid><![CDATA[77]]></externalid>
	<fullexternalid><![CDATA[test-77]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	When the system in Air plane mode, check whether Wi-Fi is able to turned ON/OFF or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Wi-Fi functionality should be supported in the build</div>
<div>
	3. WiFi module should be present on device.</div>
<div>
	4. Connected router should have Internet.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Go to Settings-&gt;More-&gt;Aeroplane mode and enable aeroplane mode&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings</div>
<div>
	3. Enable WiFi option and verify whether WiFi option is ON or not.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;4.Check whether WiFi listed all the available WiFi networks&nbsp;</div>
<div>
	5. Connect to&nbsp; a WiFi network by proving proper authentication&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;6.Check whether the device is able to browse any URL in Browser app.&nbsp; &nbsp; &nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	WIFI should be ON , connected to the network and should be able to browse URLs even when aeroplane mode is enabled.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5990" name="BT:Check able to turn-on BT when Airplane option is in enabled state">
	<node_order><![CDATA[10]]></node_order>
	<externalid><![CDATA[88]]></externalid>
	<fullexternalid><![CDATA[test-88]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	When the system in Air plane mode, check whether BT is able to turned ON/OFF or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. BT h/w module should be present on the device&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.&nbsp; Go-to settings - &gt; Wireless &amp; Networks &rarr; More &rarr; enable the Air plane mode option.</div>
<div>
	2. Now the system is in Airplane mode.</div>
<div>
	3. Goto &rarr; Settings &rarr; select the Bluetooth option and check whether BT option is enabled or not..</div>
<div>
	4. Un-select the Bluetooth option and check whether BT option is disabled or not.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. When the system in Airplane mode, and after click on Bluetooth option, the BT option should be enabled.</div>
<div>
	2. When un-select the Bluetooth option, the BT option should be disabled.</div>
<div>
	&nbsp;</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5993" name="Multimedia:Check Playback of AAC LC Audio codec in .3gp container">
	<node_order><![CDATA[11]]></node_order>
	<externalid><![CDATA[116]]></externalid>
	<fullexternalid><![CDATA[test-116]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether the DUT is supporting the Playback of AAC LC Audio codec format with the following channels, sampling rates and containers:<br />
	a) Mono channel with 8 kHz, 24 kHz and 48 kHz sample rates in .3gp container.<br />
	b) Stereo channel with 8 kHz, 24 kHz and 48 kHz sample rates in .3gp container.<br />
	<br />
	&nbsp;</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT up to Android Main menu.<br />
	2. The AAC LC Audio codec format with the following channels, sampling rates and container files should be available for testing.<br />
	a) Mono/Stereo channels with 8 kHz, 24 kHz and 48 kHz sample rates in .3gp container should be kept ready.<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy the AAC LC Audio codec format with the following channels, sampling rates and container files into the device:<br />
	a) Mono/Stereo channels with 8 kHz, 24 kHz and 48 kHz sample rates in .3gp container.<br />
	2. Open the Gallery Apk.<br />
	3. Select and playback the above copied audio codec files.<br />
	4. Check whether DUT is supporting the above copied Audio codec files or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	The DUT should support the playback of AAC LC Audio codec format with the following channels, sampling rates and containers without any issues:<br />
	a) Mono channel with 8 kHz, 24 kHz and 48 kHz sample rates in .3gp container.<br />
	b) Stereo channel with 8 kHz, 24 kHz and 48 kHz sample rates in .3gp container.<br />
	&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5996" name="Multimedia:Check Playback of AAC LC Audio codec in MPEG-4(.mp4) container">
	<node_order><![CDATA[12]]></node_order>
	<externalid><![CDATA[117]]></externalid>
	<fullexternalid><![CDATA[test-117]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether the DUT is supporting the Playback of AAC LC Audio codec format with the following channels, sampling rates and containers:<br />
	a) Mono channel with 8 kHz, 24 kHz and 48 kHz sample rates in MPEG-4(.mp4) container.<br />
	b) Stereo channel with 8 kHz, 24 kHz and 48 kHz sample rates in MPEG-4(.mp4) container.<br />
	<br />
	&nbsp;</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT up to Android Main menu.<br />
	2. The AAC LC Audio codec format with the following channels, sampling rates and container files should be available for testing.<br />
	a) Mono/Stereo channels with 8 kHz, 24 kHz and 48 kHz sample rates in MPEG-4(.mp4) container should be kept ready.<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy the AAC LC Audio codec format with the following channels, sampling rates and container files into the device:<br />
	a) Mono/Stereo/ channels with 8 kHz, 24 kHz and 48 kHz sample rates in MPEG-4(.mp4) container.<br />
	2. Open the Gallery Apk.<br />
	3. Select and playback the above copied audio codec files.<br />
	4. Check whether DUT is supporting the above copied Audio codec files or not.<br />
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	The DUT should support the playback of AAC LC Audio codec format with the following channels, sampling rates and containers without any issues:<br />
	a) Mono channel with 8 kHz, 24 kHz and 48 kHz sample rates in MPEG-4(.mp4) container.<br />
	b) Stereo channel with 8 kHz, 24 kHz and 48 kHz sample rates in MPEG-4(.mp4) container.<br />
	<br />
	<br />
	&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="5999" name="Multimedia:Check Playback of AAC LC Audio codec in MPEG-4(.m4a) container">
	<node_order><![CDATA[13]]></node_order>
	<externalid><![CDATA[118]]></externalid>
	<fullexternalid><![CDATA[test-118]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether the DUT is supporting the Playback of AAC LC Audio codec format with the following channels, sampling rates and containers:<br />
	a) Mono channel with 8 kHz, 24 kHz and 48 kHz sample rates in MPEG-4(.m4a) container.<br />
	b) Stereo channel with 8 kHz, 24 kHz and 48 kHz sample rates in MPEG-4(.m4a) container.<br />
	<br />
	&nbsp;</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT up to Android Main menu.<br />
	2. The AAC LC Audio codec format with the following channels, sampling rates and container files should be available for testing.<br />
	a) Mono/Stereo channels with 8 kHz, 24 kHz and 48 kHz sample rates in MPEG-4(.m4a) container should be kept ready.<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy the AAC LC Audio codec format with the following channels, sampling rates and container files into the device:<br />
	a) Mono/Stereo channels with 8 kHz, 24 kHz and 48 kHz sample rates in MPEG-4(.m4a) container.<br />
	2. Open the Gallery Apk.<br />
	3. Select and playback the above copied audio codec files.<br />
	4. Check whether DUT is supporting the above copied Audio codec files or not.<br />
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	The DUT should support the playback of AAC LC Audio codec format with the following channels, sampling rates and containers without any issues:<br />
	a) Mono channel with 8 kHz, 24 kHz and 48 kHz sample rates in MPEG-4(.m4a) container.<br />
	b) Stereo channel with 8 kHz, 24 kHz and 48 kHz sample rates in MPEG-4(.m4a) container.<br />
	<br />
	&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6002" name="Multimedia:Check Playback of AAC LC Audio codec in MPEG-TS(.ts) container">
	<node_order><![CDATA[14]]></node_order>
	<externalid><![CDATA[119]]></externalid>
	<fullexternalid><![CDATA[test-119]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether the DUT is supporting the Playback of AAC LC Audio codec format with the following channels, sampling rates and containers:<br />
	a) Mono channel with 8 kHz, 24 kHz and 48 kHz sample rates in MPEG-TS(.ts) container.<br />
	b) Stereo channel with 8 kHz, 24 kHz and 48 kHz sample rates in MPEG-TS(.ts) container.<br />
	<br />
	&nbsp;</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT up to Android Main menu.<br />
	2. The AAC LC Audio codec format with the following channels, sampling rates and container files should be available for testing.<br />
	a) Mono/Stereo channels with 8 kHz, 24 kHz and 48 kHz sample rates in MPEG-TS(.ts) container should be kept ready.<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy the AAC LC Audio codec format with the following channels, sampling rates and container files into the device:<br />
	a) Mono/Stereo channels with 8 kHz, 24 kHz and 48 kHz sample rates in MPEG-TS(.ts) container.<br />
	2. Open the Gallery Apk.<br />
	3. Select and playback the above copied audio codec files.<br />
	4. Check whether DUT is supporting the above copied Audio codec files or not.<br />
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	The DUT should support the playback of AAC LC Audio codec format with the following channels, sampling rates and containers without any issues:<br />
	a) Mono channel with 8 kHz, 24 kHz and 48 kHz sample rates in MPEG-TS(.ts) container.<br />
	b) Stereo channel with 8 kHz, 24 kHz and 48 kHz sample rates in MPEG-TS(.ts) container.<br />
	<br />
	&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6005" name="Multimedia:Check Playback of “Vorbis” Audio format with .ogg &amp; .mkv container">
	<node_order><![CDATA[15]]></node_order>
	<externalid><![CDATA[120]]></externalid>
	<fullexternalid><![CDATA[test-120]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether the DUT is supporting the Playback of &ldquo;Vorbis&rdquo; Audio format with the .ogg &amp; .mkv container files or not.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot DUT up to Android Main menu.<br />
	2. The Vorbis audio formate with the .ogg &amp; .mkv container files should be available for testing.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy the .ogg &amp; .mkv Audio format files&nbsp; into the device.<br />
	2. Open the Music Apk.<br />
	3. Select and Playback the above copied files from the device and Check whether DUT is playing the .ogg &amp; .mkv files without any issues or not.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.The DUT should support the Playback of .ogg &amp; .mkv&nbsp; Audio format files without any issues.<br />
	&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6008" name="Multimedia:Check Playback of  FLAC  Audio format">
	<node_order><![CDATA[16]]></node_order>
	<externalid><![CDATA[122]]></externalid>
	<fullexternalid><![CDATA[test-122]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Playback of&nbsp; FLAC&nbsp; Audio format</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android Main menu<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy Audio decode format of FLAC stream into device.<br />
	2.Open Music app and select the audio file copied<br />
	3. Verify&nbsp; playback of Audio &quot;FLAC&rdquo; decode format</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	Audio playback of FLAC decode format should be heard without any artifacts .</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6011" name="Multimedia:Check Playback of AAC LC Audio codec in AAC(.aac) container">
	<node_order><![CDATA[17]]></node_order>
	<externalid><![CDATA[129]]></externalid>
	<fullexternalid><![CDATA[test-129]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether the DUT is supporting the Playback of AAC LC Audio codec format with the following channels, sampling rates and containers:<br />
	a) Mono channel with 8 kHz, 24 kHz and 48 kHz sample rates in ADTS raw AAC(.aac) container.<br />
	b) Stereo channel with 8 kHz, 24 kHz and 48 kHz sample rates in ADTS raw AAC(.aac) container.<br />
	<br />
	<br />
	<br />
	&nbsp;</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. Boot the DUT up to Android Main menu.<br />
	2. The AAC LC Audio codec format with the following channels, sampling rates and container files should be available for testing.<br />
	a) Mono/Stereo channels with 8 kHz, 24 kHz and 48 kHz sample rates in ADTS raw AAC(.aac) container should be kept ready.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy the AAC LC Audio codec format with the following channels, sampling rates and container files into the device:<br />
	a) Mono/Stereo channels with 8 kHz, 24 kHz and 48 kHz sample rates in ADTS raw AAC(.aac) container.<br />
	2. Open the Gallery Apk.<br />
	3. Select and playback the above copied audio codec files.<br />
	4. Check whether DUT is supporting the above copied Audio codec files or not.<br />
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	The DUT should support the playback of AAC LC Audio codec format with the following channels, sampling rates and containers without any issues:<br />
	a) Mono channel with 8 kHz, 24 kHz and 48 kHz sample rates in ADTS raw AAC(.aac) container.<br />
	b) Stereo channel with 8 kHz, 24 kHz and 48 kHz sample rates in ADTS raw AAC(.aac) container.<br />
	<br />
	&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6014" name="Multimedia:Check Plug-in and Plug-out headset">
	<node_order><![CDATA[18]]></node_order>
	<externalid><![CDATA[123]]></externalid>
	<fullexternalid><![CDATA[test-123]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Plug-in and Plug-out headset</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1.DUT should boot up to Android Main menu<br />
	2. Build should support playback of Audio .</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	<br />
	1. Connect headset to the target device and check whether headset is detected or not<br />
	2. Plug-out the headset.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.Target device&nbsp; should be detect the connected headset when plugged-in</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6017" name="Multimedia-Str:Check Plug-in/out headset for Multiple times">
	<node_order><![CDATA[19]]></node_order>
	<externalid><![CDATA[126]]></externalid>
	<fullexternalid><![CDATA[test-126]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Plug-in and Plug-out headset for Multiple times</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1.DUT should boot up to Android Main menu<br />
	2. Build should support playback of Audio streams<br />
	3. device should have audio out jack</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. connect the headset to the audio-out jack<br />
	2. plug-out the headset from the audio-out jack<br />
	3. repeat the above steps for multiple times</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	<br />
	1.Target device&nbsp; should be detect the connected headset for each&nbsp; plug-in<br />
	2. device should not go hang while plug-in and plug-out</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Stress]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6020" name="Multimedia:Check time for audio plackback formats">
	<node_order><![CDATA[20]]></node_order>
	<externalid><![CDATA[127]]></externalid>
	<fullexternalid><![CDATA[test-127]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify time taken to start audio playback for each format supported</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1.DUT should boot up to Android Main menu<br />
	2. Build should support playback of Audio .</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy different audio streams to DUT<br />
	2. Open Music app, Check time taken to start audio playback for each format supported<br />
	3. Check time taken to start audio playback for each format supported</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Audio playback should start with in 2seconds<br />
	<br />
	&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Performance]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6023" name="PowerSuspendResume-Str:Check device suspend/resume functionality 20 times">
	<node_order><![CDATA[21]]></node_order>
	<externalid><![CDATA[97]]></externalid>
	<fullexternalid><![CDATA[test-97]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the Display after Suspend and Resume for 20 times</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Connect the HDMI display to the board and then power on the board. Check the display screen.</div>
<div>
	2. Disable the stay awake option in developer options</div>
<div>
	3. Set the wake time in display to 15 seconds</div>
<div>
	4.Suspend and resume the DUT for 10 to 15 times and check the Display.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	&nbsp;</div>
<div>
	DUT Should enter into the sleep mode and display screen becomes blank and also device should resume from suspend state properly,Display screen should shown properly without any issues.&nbsp;</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Stress]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6026" name="Graphics:Check graphics performance">
	<node_order><![CDATA[22]]></node_order>
	<externalid><![CDATA[62]]></externalid>
	<fullexternalid><![CDATA[test-62]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the graphics performance</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu.</div>
<div>
	2. The &ldquo;NenaMark2-se.nena.nenamark2-5-v2.4.apk benchmark should be available.&nbsp;</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Install the &ldquo;NenaMark2-se.nena.nenamark2-5-v2.4.apk&rdquo; in the device.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2. Open the above installed apk.</div>
<div>
	3. Run the test and check graphics performance in FPS.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The &ldquo;Nena mark&rdquo; test should be played without any lagging and also graphics value in FPS should be good as expected.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Performance]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6029" name="Graphics:Check 3D graphics tests in 3D Mark">
	<node_order><![CDATA[23]]></node_order>
	<externalid><![CDATA[61]]></externalid>
	<fullexternalid><![CDATA[test-61]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether all the 3D graphics tests are playing without any issues or not in 3D Mark .</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu.</div>
<div>
	2. The &ldquo;3D Mark-the gammers bench mark apk&rdquo;&nbsp; should be available.&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Install the &ldquo;3D Mark(android_gammers_com.futuremark.dmandroid.application_2.0.4580-4580.apk)-the gammers benchmark&rdquo; in the device.</div>
<div>
	2. Open the above installed apk.</div>
<div>
	3. Playback the 3D Mark slingshot extreme and slingshot extreme unlimitted testsand check all are playing without any corruptions or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. All the tests in Slingshot extreme and slingshot exreme unlimitted tests in 3D mark should be played without any corruptions.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6032" name="OtherConnectivity:Check Airplane mode option enable/disable functionality">
	<node_order><![CDATA[24]]></node_order>
	<externalid><![CDATA[43]]></externalid>
	<fullexternalid><![CDATA[test-43]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether system is able to enable and disable Airplane mode or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Goto settings.</div>
<div>
	2. Goto wireless &amp; network settings &rarr; More.</div>
<div>
	3. Check whether system is able to enable the Airplane option or not. And also check whether able to disable the Airplane option or not.</div>
<div>
	&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Should be able to enable/disable the Airplane option.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6035" name="OtherConnectivity:Check browse with URLs">
	<node_order><![CDATA[25]]></node_order>
	<externalid><![CDATA[44]]></externalid>
	<fullexternalid><![CDATA[test-44]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether the DUT is able to browse web sites using URL&#39;s or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android Main menu</div>
<div>
	2. The&nbsp; DUT should have the internet facility (Wi-Fi / 3G / Ethernet)</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Open the Browser Apk,</div>
<div>
	2. Open the &ldquo;www.msn.com&rdquo; URL.</div>
<div>
	3. Check whether the MSN website open or not</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	The DUT should be able to browse web sites using URL&#39;s and able to access the &ldquo;www.msn.com&rdquo; website.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6038" name="OtherConnectivity:Check browse with IP address">
	<node_order><![CDATA[26]]></node_order>
	<externalid><![CDATA[91]]></externalid>
	<fullexternalid><![CDATA[test-91]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether the DUT is able to browse web sites using IP addresses&nbsp; or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android Main menu</div>
<div>
	2. The&nbsp; DUT should have the internet facility (Wi-Fi / 3G / Ethernet)</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Connect the USB to USB cable to device in client mode from the PC.</div>
<div>
	2. Open the terminal in PC.</div>
<div>
	3.&nbsp; Pick any known URL and IP address to test, for example&ldquo;ping www.google.com&rdquo;&nbsp; and it will display the IP address of the &ldquo;www.google.com&ldquo; website.&nbsp;</div>
<div>
	4. Enable the network in the device.</div>
<div>
	5. Open a Browser and enter the above displayed IP address and check whether &ldquo;www.google.com&rdquo; website URL is displayed or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.After entering the known website IP address in the device Browser, the device browser should access and display the relevant website URL.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6041" name="OtherConnectivity:Check playback of Audio streaming">
	<node_order><![CDATA[27]]></node_order>
	<externalid><![CDATA[92]]></externalid>
	<fullexternalid><![CDATA[test-92]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether the DUT is able to play streaming audio or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android Main menu</div>
<div>
	2. The&nbsp; DUT should have the internet facility (Wi-Fi / 3G / Ethernet)</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Open the Browser Apk,</div>
<div>
	2. Open the &ldquo;https://gaana.com/&rdquo; URL.</div>
<div>
	3. Play any Audio.</div>
<div>
	4. Check whether the Audio is playing without any issues or not</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	The DUT should be able to play streaming audio with out any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6044" name="OtherConnectivity:Check playback of Video streaming">
	<node_order><![CDATA[28]]></node_order>
	<externalid><![CDATA[93]]></externalid>
	<fullexternalid><![CDATA[test-93]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether the DUT is able to play streaming video or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android Main menu</div>
<div>
	2. The&nbsp; DUT should have the internet facility (Wi-Fi / 3G / Ethernet)</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Open the Browser Apk,</div>
<div>
	2. Open the &ldquo;https://m.youtube.com&rdquo; URL.</div>
<div>
	3. Play any Video.</div>
<div>
	4. Check whether the video is playing without any issues or not</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	The DUT should be able to play streaming video with out any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6047" name="OtherConnectivity:Check DUT able to get network time">
	<node_order><![CDATA[29]]></node_order>
	<externalid><![CDATA[94]]></externalid>
	<fullexternalid><![CDATA[test-94]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether the DUT is able to get network time or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android Main menu</div>
<div>
	2. The&nbsp; DUT should have the internet facility (Wi-Fi / 3G / Ethernet)</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Disable the WiFi/3G/Ethernet options.</div>
<div>
	2. Go to Settings &rarr; Date &amp; time.</div>
<div>
	3. Disable the &ldquo;Automatic date &amp; time&rdquo; and set the incorrect time in the device.</div>
<div>
	4. Enable the WiFi/3G/Ethernet in the device.</div>
<div>
	5. Enable the &ldquo;Automatic date &amp; time&rdquo; option under &ldquo;Date &amp; time&rdquo; settings.</div>
<div>
	6. Check whether correct time is showing by the device or not by using the network.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	The DUT should be updated to correct time using network when the device has incorrect time.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6050" name="OtherConnectivity:Check Ethernet given high priority than WiFi">
	<node_order><![CDATA[30]]></node_order>
	<externalid><![CDATA[96]]></externalid>
	<fullexternalid><![CDATA[test-96]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Ethernet is given high priority than WiFi or not</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Build should support Ethernet.</div>
<div>
	2. Ethernet cable should be there and it has Internet connection.</div>
<div>
	3. Boot the device completely to its unlock screen.</div>
<div>
	4. WiFi should work.</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to settings &rarr; Enable WiFi and connect to router.</div>
<div>
	2. Connect the Ethernet cable which is having internet.&nbsp;</div>
<div>
	3. Verify whether WiFi is got disconnected or not.</div>
<div>
	4. Now disconnect the Ethernet cable from device and check whether WiFi is automatically connected to previously connected APN.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. When Ethernet cable connected to device then WiFi should be disconnect because Ethernet is high priority than WiFi.</div>
<div>
	2. When Ethernet&nbsp; is disconnect from the device then WiFi should be automatically connected to previously connected APN.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6053" name="OtherConnectivity:Check WiFi is turned off/on when Airplane mode is turned on/off">
	<node_order><![CDATA[31]]></node_order>
	<externalid><![CDATA[154]]></externalid>
	<fullexternalid><![CDATA[test-154]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether WiFi is turned off/on when the&nbsp; Airplane mode is on/off or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Boot DUT up to Android Main menu.</div>
<div>
	2. WiFi should be enabled in the build.</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Goto settings.</div>
<div>
	2. Goto wireless &amp; network settings.</div>
<div>
	3. Enable WiFi and connect it to known APN.</div>
<div>
	4. Enable Airplane mode option and check whether WiFi is turned off or not.</div>
<div>
	5. Disable Airplane mode option and check whether WiFi is enabled and reconnected to its previously connected APN.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	&nbsp;1. WiFi&nbsp; should be turned OFF when airplane mode is enabled and WiFi should be turned ON when airplane mode goes to disable mode and also WiFi should be reconnected to its previously connected APN.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6056" name="OtherConnectivity:Check BT is turned off/on when Airplane mode is turned on/off">
	<node_order><![CDATA[32]]></node_order>
	<externalid><![CDATA[155]]></externalid>
	<fullexternalid><![CDATA[test-155]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether BT is turned off/on when the&nbsp; Airplane mode is on/off or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Boot DUT up to Android Main menu.</div>
<div>
	2. BT should be enabled in the build.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Goto settings.</div>
<div>
	2. Goto wireless &amp; network settings.</div>
<div>
	3. Enable BT option.</div>
<div>
	4. Enable Airplane mode option and check whether BT is turned off or not.</div>
<div>
	5. Disable Airplane mode option and check whether BT option is re-enabled or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	&nbsp;1. BT&nbsp; should be turned OFF when airplane mode is enabled and BT should be turned ON when airplane mode goes to disable mode.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6059" name="OtherConnectivity:Check both WiFi and BT are turned off/on when Airplane mode is turned on/off">
	<node_order><![CDATA[33]]></node_order>
	<externalid><![CDATA[156]]></externalid>
	<fullexternalid><![CDATA[test-156]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether both WiFi and BT modules are turned off/on when the&nbsp; Airplane mode is on/off or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Boot DUT up to Android Main menu.</div>
<div>
	2. WiFi and BT should be enabled in the build.</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Goto settings.</div>
<div>
	2. Goto wireless &amp; network settings.</div>
<div>
	3. Enable WiFi and connect it to known APN.</div>
<div>
	4. Enable&nbsp; BT.</div>
<div>
	5. Enable Airplane mode option and check whether WiFi and Bt modules are off or not.</div>
<div>
	6. Disable Airplane mode option and check whether WiFi is enabled and reconnected to its previously connected APN or not and also check Whether BT is re-enabled or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	&nbsp;1. WiFi and BT&nbsp; should be turned OFF when airplane mode is enabled and they should be turned ON when airplane mode goes to disable mode and also WiFi should be reconnected to its previously connected APN.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="6062" name="Performance" >
<node_order><![CDATA[18]]></node_order>
<details><![CDATA[<p>
	Create test suite for performance</p>
]]></details> 

<testcase internalid="6063" name="Boot-Per:Check boot time">
	<node_order><![CDATA[0]]></node_order>
	<externalid><![CDATA[5]]></externalid>
	<fullexternalid><![CDATA[test-5]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the warm Boot time of the DUT</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Switch on the device by using power button but keep in mind, this is not the firm time boot after flashing the binaries.&nbsp;</div>
<div>
	2. Calculate the time taken for the device to boot from startup to android lock screen.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	The DUT warm Boot time should not take more than 1 min&nbsp; and display should appear properly without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Performance]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_adb_reboot_time.TestAdbreboottime]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6066" name="Boot-Per:Check device cold boot time">
	<node_order><![CDATA[8]]></node_order>
	<externalid><![CDATA[214]]></externalid>
	<fullexternalid><![CDATA[test-214]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the DUT cold boot time</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues.</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Switch on the device by using power button.<br />
	2. Calculate the time taken for the device to boot from startup to android lock screen.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The DUT Cold Boot time should not take more than 1 min&nbsp; and display should appear properly without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_adb_reboot_time.TestAdbreboottime]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6069" name="SuspendResume-Per:Check device wakeup time.">
	<node_order><![CDATA[9]]></node_order>
	<externalid><![CDATA[506]]></externalid>
	<fullexternalid><![CDATA[test-506]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check device wakeup time from suspend state.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.</div>
<div>
	2. Power cable with adopter should be available and it should be connected to power source.</div>
<div>
	3. Display should be connected to device.</div>
<div>
	4. Device should boot upto android unlock screen</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Suspend the device</div>
<div>
	2. Try to resume the device using keyboard and mouse.</div>
<div>
	3. Check time taken for the device to wake from suspend state.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	Device should wake up from suspend state within 5 seconds.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6072" name="Multimedia:Check time for video playback formats">
	<node_order><![CDATA[1017]]></node_order>
	<externalid><![CDATA[112]]></externalid>
	<fullexternalid><![CDATA[test-112]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify time taken to start Video playback for each format supported</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1.DUT should boot up to Android Main menu<br />
	2. Build should support playback of Video and Audio streams</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Copy all different video streams to DUT<br />
	2. Open galley.<br />
	3. Select any video file and calculate time taken to playback the video.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1.Video playback should start within 2 seconds</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Performance]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_start_time.TestVideostart]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite><testsuite id="6075" name="Test" >
<node_order><![CDATA[19]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="6143" name="20190425-10:12:52 WiFi:Check WiFi scan functionality">
	<node_order><![CDATA[0]]></node_order>
	<externalid><![CDATA[534]]></externalid>
	<fullexternalid><![CDATA[test-534]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether device is able to scan and show all the available supported WiFi frequency networks or not.&nbsp;</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Wi-Fi functionality should be supported in the build</div>
<div>
	3. WiFi module should be present on device.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Enable Wi-Fi option on DUT</div>
<div>
	2. Verify whether Wi-Fi is able to scan and show all the supported frequency bands available networks when the WiFi option is enabled.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Wi-Fi should scan and show all the supported frequency bands available networks when the WiFi option is enabled.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_wifi_scan.TestWiFiScan]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6140" name="20190425-10:11:12 Display:Check DP detection">
	<node_order><![CDATA[1]]></node_order>
	<externalid><![CDATA[533]]></externalid>
	<fullexternalid><![CDATA[test-533]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check DP is detected or not</p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">
	1. OS should installed properly on the device with out any issues.&nbsp;</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">
	2. Raven board should boot upto android&nbsp;</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">
	3. DP connection port should existed in the board.</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">
	4. DP display should connected to device DP port</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Enter the command &ldquo; adb shell cat /sys/class/drm/card0-DP-1/status&ldquo; in pc terminal and check whether &ldquo;connected&rdquo; message is displaying or not. If&nbsp; &ldquo;connected&rdquo; message is displayed then DP detected otherwise it is not detected.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. When the DP cable is connected the device and after entering the &ldquo; adb shell cat /sys/class/drm/card0-DP-1/status&rdquo; command in PC terminal then &ldquo;connected&rdquo; message should be displayed.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_dp_detection.TestDpDetection]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6137" name="20190425-10:08:19 USB:Check USB storage detection">
	<node_order><![CDATA[2]]></node_order>
	<externalid><![CDATA[532]]></externalid>
	<fullexternalid><![CDATA[test-532]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the USB Storage device Functionality</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.</div>
<div>
	3. USB should work as a host.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	&nbsp;</div>
<div>
	1. Connect a USB storage device (e.g.: USB 2.0/3.0 Flash device/Pen drives) to USB host port.</div>
<div>
	2. Go to settings -&gt; Storage -&gt; USB disk.</div>
<div>
	3. Now check whether USB 2.0 flash device is detected or not with out any issues. .&nbsp;</div>
<div>
	&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. USB Storage should detect in USB host port and also device display screen should not rotate when the USB 2.0 devices connected to host port.USb storage device data should display properly without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_usb_storage.TestUsbStorage]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6134" name="20190425-10:07:48 Ethernet:Check browsing with Ethernet">
	<node_order><![CDATA[3]]></node_order>
	<externalid><![CDATA[531]]></externalid>
	<fullexternalid><![CDATA[test-531]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>Verify whether the system is able to browse with Ethernet&nbsp;</p>
]]></summary>
	<preconditions><![CDATA[<div>1. Build should support Ethernet.</div>

<div>2. Dynamic IP should configured to DUT.</div>

<div>3. Boot the DUT completely to its unlock screen.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Connect Ethernet Cable to the Raven Board Ethernet port.</div>
<div>
	2. Check whether Ethernet cable is detected or not by looking at the Ethernet port. If the cable is detected&nbsp; then LED light will blink at the port.&nbsp;</div>
<div>
	3. Open browser and try to access some web sites.&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1. Ethernet cable should detect when it is connected to device Ethernet port.&nbsp;</div>
<div>
	2&amp;3.System should be able to browse the internet without any issues</div>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional ]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_ethernet_browse.TestBrowseEthernet]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6131" name="20190425-10:04:16 Multimedia:Check Audio decode functionality of .wav format">
	<node_order><![CDATA[4]]></node_order>
	<externalid><![CDATA[530]]></externalid>
	<fullexternalid><![CDATA[test-530]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<div>Check the DUT is supporting the playback of WAVE(.wav) Audio format with the following sample rates or not.</div>

<div>a).8-bit linear PCM with sampling rate 8000HZ.</div>

<div>b).8-bit linear PCM with sampling rate 16000HZ.</div>

<div>c).8-bit linear PCM with sampling rate 44100HZ.</div>

<div>d).8-bit linear PCM with sampling rate 48000HZ.</div>

<div>e).16-bit linear PCM with sampling rate 8000HZ</div>

<div>f).16-bit linear PCM with sampling rate 16000HZ.</div>

<div>g).16-bit linear PCM with sampling rate 44100HZ.</div>

<div>h).16-bit linear PCM with sampling rate 48000HZ.</div>
]]></summary>
	<preconditions><![CDATA[<div>1. DUT should boot up to Android Main menu.</div>

<div>2. Should be available the 8-bit PCM with sampling rates of 8KHZ, 16KHZ,44.1KHZ and 48KHZ PCM/WAVE audio codec files for testing.</div>

<div>3.Should have the 16-bit PCM with sampling rates of 8KHZ, 16KHZ,44.1KHZ and 48KHZ PCM/WAVE audio codec files ready.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Copy the 8-bit linear PCM with Sampling rates of 8000 Hz, 16000 Hz, 44100 Hz and 48000 Hz WAVE(.wav) Audio decode format files into the device.&nbsp;&nbsp;</div>
<div>
	2. Open the Music Apk.</div>
<div>
	3. Select and Playback the above copied files from the device and Check whether DUT is playing without any issues or not.</div>
<div>
	4. Copy the 16-bit linear PCM with Sampling rates of 8000 Hz, 16000 Hz, 44100 Hz and 48000 Hz WAVE(.wav) Audio decode format files into the device.</div>
<div>
	5. Open the Music Apk.</div>
<div>
	6. Playback the above copied files from the device and Check whether DUT is playing without any issues or not.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	<div>
		1. The DUT should support the Playback of 8-bit linear PCM with Sampling rates at 8000 Hz, 16000 Hz, 44100 Hz and 48000 Hz WAVE(.wav) Audio decode format files without any issues.</div>
	<div>
		2. The DUT should support the Playback of 16-bit linear PCM with Sampling rates at 8000 Hz, 16000 Hz, 44100 Hz and 48000 Hz WAVE(.wav) Audio decode format files without any issues.</div>
</div>
<p>
	&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional ]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_audio_wav.TestAudioWav]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6128" name="20190425-10:01:47 Multimedia:Check H264 video codec with .mp4 container">
	<node_order><![CDATA[5]]></node_order>
	<externalid><![CDATA[529]]></externalid>
	<fullexternalid><![CDATA[test-529]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>Verify whether DUT is supporting the H.264 AVC video codec with the container of .mp4 files or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>1. Boot the DUT up to Android Main menu.</div>

<div>2. The H.264 AVC video codec supported files of .mp4 container should be available for testing.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Copy the H.264 AVC video codec supported of the .mp4 container files&nbsp; into the device.</div>
<div>
	2. Open the Gallery Apk.</div>
<div>
	3. Playback the above copied files from the device and check whether they are playing without any issues or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The device should playback the H.264 AVC video codec supported of the .mp4 container files without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional ]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_H264_AVC_mp4.TestVideoH264AvcMp4]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6125" name="20190425-10:01:28 Multimedia:Check PNG decode functionality">
	<node_order><![CDATA[6]]></node_order>
	<externalid><![CDATA[528]]></externalid>
	<fullexternalid><![CDATA[test-528]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<div>
	Verify whether DUT is supporting the PNG image decode format or not:</div>
<div>
	&nbsp;</div>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Boot the DUT up to Android Main menu.</div>
<div>
	2. The PNG image format should be available for testing.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Copy the image of PNG format into the device.</div>
<div>
	2. Open Gallery Apk.</div>
<div>
	2. Open the above copied image from the device and check whether image is clearly visible or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The image of PNG formate file should be open and show without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_png_image_decode.TestPNGImageDecode]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6122" name="20190425-09:58:08 Ethernet:Check Ethernet detection">
	<node_order><![CDATA[7]]></node_order>
	<externalid><![CDATA[527]]></externalid>
	<fullexternalid><![CDATA[test-527]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the Ethernet detection functionality.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Build should support Ethernet.</div>
<div>
	2. Ethernet cable should be available and it has Internet connection.</div>
<div>
	3. Boot the DUT completely to its unlock screen.</div>
<div>
	4. Connect Ethernet Cable to the Raven Board Ethernet port.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Check whether Ethernet cable is detected or not by looking at the Ethernet port. If the cable is detected&nbsp; then LED light will blink at the port.&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	The Ethernet cable should detect&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_ethernet_connection.TestEthernet]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6076" name="Test Fake">
	<node_order><![CDATA[8]]></node_order>
	<externalid><![CDATA[512]]></externalid>
	<fullexternalid><![CDATA[test-512]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[]]></summary>
	<preconditions><![CDATA[<p>]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>

<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_fake.TestFake]]></value>
			</custom_field>
		</custom_fields>
</testcase>
<testsuite id="6088" name="Smoke_tests" >
<node_order><![CDATA[9]]></node_order>
<details><![CDATA[<p>
	Created test suite for sanity</p>
]]></details> 

<testcase internalid="6089" name="Boot:Check device is booting to android screen">
	<node_order><![CDATA[0]]></node_order>
	<externalid><![CDATA[516]]></externalid>
	<fullexternalid><![CDATA[test-516]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether AMD Tambourine Platform is booting to its unlock screen or not..</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. OS should installed properly on the device with out any issues</p>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Switch on the device by using power button.</div>
<div>
	2. Verify whether AMD Tambourine platform is able to boot completely to device unlock screen or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	After switch on the Power button, the AMD Tambourine platform should be booting to its unlock screen without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_adb_detection.TestAdb]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6092" name="WiFi:Check WiFi option enable/disable">
	<node_order><![CDATA[1]]></node_order>
	<externalid><![CDATA[517]]></externalid>
	<fullexternalid><![CDATA[test-517]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify WiFi option enabling/disabling functionality</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Wi-Fi functionality should be supported in the build</div>
<div>
	3. WiFi module should be present on device.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to Settings-&gt;Wireless &amp; networks-&gt;Wi-Fi settings</div>
<div>
	2. Enable WiFi option and verify whether WiFi option is ON or not.</div>
<div>
	3. Disable WiFi option and check whether WiFi is OFF or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. WiFi should be ON when WiFi option is checked and WiFi should be off when the WiFi option is unchecked.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_wifi_on_off.TestWiFiOnOff]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6095" name="BT:Check BlueTooth option enable/disable functionality">
	<node_order><![CDATA[2]]></node_order>
	<externalid><![CDATA[518]]></externalid>
	<fullexternalid><![CDATA[test-518]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify Turn ON/OFF of Bluetooth functionality</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. BT h/w module should be present on the device&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Go to settings &gt; wireless &amp; networks &gt; Bluetooth&nbsp;</div>
<div>
	2. Turn On Bluetooth. Verify whether it is turned ON or not.&nbsp;</div>
<div>
	3. Turn OFF Bluetooth. Check whether it is turned OFF or not</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. BT should be turned ON when enabling the BT option and it should be turned OFF when the BT option is unchecked</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_bt_on_off.TestBTOnOff]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6098" name="Multimedia:Check JPEG decode functionality">
	<node_order><![CDATA[3]]></node_order>
	<externalid><![CDATA[519]]></externalid>
	<fullexternalid><![CDATA[test-519]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<div>
	Verify whether DUT is supporting the JPEG image decode format or not:</div>
<div>
	&nbsp;</div>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Boot the DUT up to Android Main menu.</div>
<div>
	2. The JPEG image format should be available for testing.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Copy the image of JPEG format into the device.</div>
<div>
	2. Open Gallery Apk.</div>
<div>
	2. Open the above copied image from the device and check whether image is clearly visible or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The image of JPEG formate file should be open and show without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_jpeg_image_decode.TestJpegImageDecode]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6101" name="Multimedia:Check H263 video codec with 3GPP container">
	<node_order><![CDATA[4]]></node_order>
	<externalid><![CDATA[520]]></externalid>
	<fullexternalid><![CDATA[test-520]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>Verify whether DUT is supporting the H.263 Video codec format with the 3GPP(.3gp) container files or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>1. Boot the DUT up to Android Main menu.</div>

<div>2. The H.263 video codec supported files of .3gp container should be available for testing.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Copy the H.263 video codec supported of the .3gp container files into the device.</div>
<div>
	2. Open the Gallery Apk.</div>
<div>
	3. Select and Playback the above copied files from the device and check whether they are playing without any issues or not.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. The device should playback the H.263 video codec supported of the .3gp container files without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional ]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_video_H263_3GPP.TestVideoH2633GPP]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6104" name="Multimedia:Check Audeo decode functionality of .mp3 format">
	<node_order><![CDATA[5]]></node_order>
	<externalid><![CDATA[521]]></externalid>
	<fullexternalid><![CDATA[test-521]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<div>
	Verify whether the DUT is supporting the Playback of MP3(.mp3) Audio format or not.&nbsp;</div>
<div>
	&nbsp;</div>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Boot DUT up to Android Main menu.</div>
<div>
	2. Should be available the MP3(.mp3) audio codec format file.</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Copy the MP3(.mp3) Audio decode format file into the device.</div>
<div>
	2. Open the Music Apk.</div>
<div>
	3. Select and Playback the above copied file from the device and Check whether DUT is playback the file without any issues or not.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1.The DUT should playback the MP3(.mp3) Audio format file without any issues.</div>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_audio_mp3.TestAudioMp3]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6107" name="OtherConnectivity:Check Airplane mode option enable/disable functionality">
	<node_order><![CDATA[6]]></node_order>
	<externalid><![CDATA[522]]></externalid>
	<fullexternalid><![CDATA[test-522]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether system is able to enable and disable Airplane mode or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1. Goto settings.</div>
<div>
	2. Goto wireless &amp; network settings &rarr; More.</div>
<div>
	3. Check whether system is able to enable the Airplane option or not. And also check whether able to disable the Airplane option or not.</div>
<div>
	&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. Should be able to enable/disable the Airplane option.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_airplane_on_off.TestAirplaneOnOff]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6110" name="OtherConnectivity:Check browse with URLs">
	<node_order><![CDATA[9]]></node_order>
	<externalid><![CDATA[523]]></externalid>
	<fullexternalid><![CDATA[test-523]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Verify whether the DUT is able to browse web sites using URL&#39;s or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android Main menu</div>
<div>
	2. The&nbsp; DUT should have the internet facility (Wi-Fi / 3G / Ethernet)</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1.Open the Browser Apk,</div>
<div>
	2. Open the &ldquo;www.msn.com&rdquo; URL.</div>
<div>
	3. Check whether the MSN website open or not</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	The DUT should be able to browse web sites using URL&#39;s and able to access the &ldquo;www.msn.com&rdquo; website.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_browse_ethernet.TestBrowseEthernet]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6113" name="Camera:Check able to capture an image">
	<node_order><![CDATA[10]]></node_order>
	<externalid><![CDATA[524]]></externalid>
	<fullexternalid><![CDATA[test-524]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether Camera is able to capture image</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. DUT should boot up to Android main menu</div>
<div>
	2. Camera functionality should be supported in the build</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1 Select camera icon available in home screen 2.Try to capture the image in Normal mode.&nbsp; &nbsp; &nbsp; &nbsp;3.Check whether proper image is captured and stored in the respective folder in sdcard.</p>
]]></actions>
	<expectedresults><![CDATA[<div>
	&nbsp;</div>
<div>
	Image should be captured and stored in the respective folder in sdcard.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6116" name="Camera:Check video recording functionality">
	<node_order><![CDATA[11]]></node_order>
	<externalid><![CDATA[525]]></externalid>
	<fullexternalid><![CDATA[test-525]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check whether Camera supports video recording feature</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1. DUT should boot up to Android main menu<br />
	2. Camera functionality should be supported in the build<br />
	&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1 Select camera icon available in home screen<br />
	2.Select video recording option and try recording video of the objects.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />
	3.Check whether proper video is recorded and stored in the respective folder in sdcard.</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	<br />
	Image of distant objects should be captured properly and stored in the respective folder in sdcard.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite></testsuite><testsuite id="6199" name="fake_test" >
<node_order><![CDATA[21]]></node_order>
<details><![CDATA[<p>about fake test</p>
]]></details> 
</testsuite><testsuite id="6203" name="temp_tests" >
<node_order><![CDATA[22]]></node_order>
<details><![CDATA[<p>Created test suite for temporary test</p>
]]></details> 

<testcase internalid="6253" name="20190617-14:23:58 USB:Check USB storage detection">
	<node_order><![CDATA[1003]]></node_order>
	<externalid><![CDATA[557]]></externalid>
	<fullexternalid><![CDATA[test-557]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the USB Storage device Functionality</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. OS should installed properly on the device with out any issues.</div>
<div>
	3. USB should work as a host.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	&nbsp;</div>
<div>
	1. Connect a USB storage device (e.g.: USB 2.0/3.0 Flash device/Pen drives) to USB host port.</div>
<div>
	2. Go to settings -&gt; Storage -&gt; USB disk.</div>
<div>
	3. Now check whether USB 2.0 flash device is detected or not with out any issues. .&nbsp;</div>
<div>
	&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	1. USB Storage should detect in USB host port and also device display screen should not rotate when the USB 2.0 devices connected to host port.USb storage device data should display properly without any issues.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_usb_storage.TestUsbStorage]]></value>
			</custom_field>
		</custom_fields>
</testcase>

<testcase internalid="6256" name="20190617-14:25:06 Ethernet:Check Ethernet detection">
	<node_order><![CDATA[1004]]></node_order>
	<externalid><![CDATA[558]]></externalid>
	<fullexternalid><![CDATA[test-558]]></fullexternalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check the Ethernet detection functionality.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Build should support Ethernet.</div>
<div>
	2. Ethernet cable should be available and it has Internet connection.</div>
<div>
	3. Boot the DUT completely to its unlock screen.</div>
<div>
	4. Connect Ethernet Cable to the Raven Board Ethernet port.</div>
]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1. Check whether Ethernet cable is detected or not by looking at the Ethernet port. If the cable is detected&nbsp; then LED light will blink at the port.&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	The Ethernet cable should detect&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
<custom_fields>
			<custom_field>
			<name><![CDATA[Test case type]]></name>
			<value><![CDATA[Functional]]></value>
			</custom_field>
			<custom_field>
			<name><![CDATA[test_xml_class]]></name>
			<value><![CDATA[tests.test_ethernet_connection.TestEthernet]]></value>
			</custom_field>
		</custom_fields>
</testcase>
</testsuite></testsuite>